{"version":3,"sources":["../../../src/components/View/View.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, noop } from '@vkontakte/vkjs';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { usePrevious } from '../../hooks/usePrevious';\nimport { useTimeout } from '../../hooks/useTimeout';\nimport { useWaitTransitionFinish } from '../../hooks/useWaitTransitionFinish';\nimport { blurActiveElement, canUseDOM, useDOM } from '../../lib/dom';\nimport { getNavId, NavIdProps } from '../../lib/getNavId';\nimport { Platform } from '../../lib/platform';\nimport { animationEvent } from '../../lib/supportEvents';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { HTMLAttributesWithRootRef } from '../../types';\nimport { useScroll } from '../AppRoot/ScrollContext';\nimport { useConfigProvider } from '../ConfigProvider/ConfigProviderContext';\nimport { NavViewIdContext } from '../NavIdContext/NavIdContext';\nimport { NavTransitionProvider } from '../NavTransitionContext/NavTransitionContext';\nimport { NavTransitionDirectionProvider } from '../NavTransitionDirectionContext/NavTransitionDirectionContext';\nimport { useSplitCol } from '../SplitCol/SplitColContext';\nimport { Touch, TouchEvent } from '../Touch/Touch';\nimport {\n  getSwipeBackPredicates,\n  hasHorizontalScrollableElementWithScrolledToLeft,\n  swipeBackExcluded,\n} from './utils';\nimport styles from './View.module.css';\n\nenum SwipeBackResults {\n  fail = 1,\n  success,\n}\n\ninterface Scrolls {\n  [index: string]: number | undefined;\n}\n\ninterface ViewsScrolls {\n  [index: string]: Scrolls;\n}\n\nexport let scrollsCache: ViewsScrolls = {};\n\nexport interface ViewProps extends HTMLAttributesWithRootRef<HTMLElement>, NavIdProps {\n  activePanel: string;\n  onTransition?(params: { isBack: boolean; from: string; to: string }): void;\n  /**\n   * callback свайпа назад\n   */\n  onSwipeBack?(): void;\n  /**\n   * callback начала анимации свайпа назад.\n   *\n   * Чтобы остановить свайп назад, возвращайте `\"prevent\"`.\n   */\n  onSwipeBackStart?(activePanel: string | null): void | 'prevent';\n  /**\n   * callback завершения анимации отмененного пользователем свайпа\n   */\n  onSwipeBackCancel?(): void;\n  history?: string[];\n\n  children: React.ReactElement | Iterable<React.ReactElement>;\n}\n\nconst warn = warnOnce('View');\n\n/**\n * @see https://vkcom.github.io/VKUI/#/View\n */\nexport const View = ({\n  activePanel: activePanelProp,\n  history,\n  nav,\n  onTransition,\n  onSwipeBack,\n  onSwipeBackStart,\n  onSwipeBackCancel: onSwipeBackCancelProp,\n  children,\n  className,\n  ...restProps\n}: ViewProps) => {\n  const id = getNavId({ nav, id: restProps.id });\n  const scrolls = React.useRef(scrollsCache[id as string] || {});\n  const afterTransition = React.useRef(noop);\n\n  React.useEffect(() => () => {\n    if (id) {\n      scrollsCache[id] = scrolls.current;\n    }\n  });\n\n  const panelNodes = React.useRef<{ [id: string]: HTMLDivElement | null }>({});\n\n  const { window, document } = useDOM();\n  const scroll = useScroll();\n  const configProvider = useConfigProvider();\n  const splitCol = useSplitCol();\n  const platform = usePlatform();\n\n  const [animated, setAnimated] = React.useState(false);\n\n  const [visiblePanels, setVisiblePanels] = React.useState([activePanelProp]);\n  const [activePanel, setActivePanel] = React.useState<string | null>(activePanelProp);\n  const [isBack, setIsBack] = React.useState<boolean | undefined>(undefined);\n  const [prevPanel, setPrevPanel] = React.useState<string | null>(null);\n  const [nextPanel, setNextPanel] = React.useState<string | null>(null);\n\n  const swipeBackPrevented = React.useRef<boolean>(false);\n  const [swipingBack, setSwipingBack] = React.useState<boolean | undefined>(undefined);\n  const [swipeBackStartX, setSwipeBackStartX] = React.useState<number>(0);\n  const [swipeBackShift, setSwipeBackShift] = React.useState<number>(0);\n  const [swipeBackNextPanel, setSwipeBackNextPanel] = React.useState<string | null>(null);\n  const [swipeBackPrevPanel, setSwipeBackPrevPanel] = React.useState<string | null>(null);\n  const [swipeBackResult, setSwipeBackResult] = React.useState<SwipeBackResults | null>(null);\n\n  const [browserSwipe, setBrowserSwipe] = React.useState(false);\n\n  const prevActivePanel = usePrevious(activePanelProp);\n  const prevSwipingBack = usePrevious(swipingBack);\n  const prevBrowserSwipe = usePrevious(browserSwipe);\n  const prevSwipeBackResult = usePrevious(swipeBackResult);\n  const prevSwipeBackPrevPanel = usePrevious(swipeBackPrevPanel);\n  const prevOnTransition = usePrevious(onTransition);\n\n  const panels = (React.Children.toArray(children) as React.ReactElement[]).filter(\n    (panel: React.ReactElement) => {\n      const panelId = getNavId(panel.props, warn);\n\n      return (\n        (panelId !== undefined && visiblePanels.includes(panelId)) ||\n        panelId === swipeBackPrevPanel ||\n        panelId === swipeBackNextPanel\n      );\n    },\n  );\n\n  const disableAnimation =\n    !configProvider.transitionMotionEnabled || !splitCol.animate || platform === Platform.VKCOM;\n  const iOSSwipeBackSimulationEnabled =\n    !disableAnimation &&\n    platform === Platform.IOS &&\n    configProvider.isWebView &&\n    Boolean(onSwipeBack);\n\n  const pickPanel = (id: string | null) => {\n    if (id === null) {\n      return null;\n    }\n    return panelNodes.current[id];\n  };\n\n  const flushTransition = React.useCallback(\n    (prevPanel: string, isBackTransition: boolean) => {\n      if (isBackTransition) {\n        scrolls.current[prevPanel] = 0;\n      }\n      setPrevPanel(null);\n      setNextPanel(null);\n      setVisiblePanels([activePanelProp]);\n      setActivePanel(activePanelProp);\n      setAnimated(false);\n      setIsBack(isBackTransition);\n\n      afterTransition.current = () => {\n        scroll?.scrollTo(0, isBackTransition ? scrolls.current[activePanelProp] : 0);\n        onTransition &&\n          onTransition({\n            isBack: isBackTransition,\n            from: prevPanel,\n            to: activePanelProp,\n          });\n      };\n    },\n    [activePanelProp, onTransition, scroll],\n  );\n\n  useIsomorphicLayoutEffect(() => {\n    afterTransition.current();\n    afterTransition.current = noop;\n  }, [afterTransition.current]);\n\n  const transitionEndHandler = React.useCallback(\n    (e?: React.AnimationEvent): void => {\n      if (\n        (!e ||\n          [\n            styles['animation-ios-next-forward'],\n            styles['animation-ios-prev-back'],\n            styles['animation-view-next-forward'],\n            styles['animation-view-prev-back'],\n          ].includes(e.animationName)) &&\n        prevPanel !== null\n      ) {\n        flushTransition(prevPanel, Boolean(isBack));\n      }\n    },\n    [flushTransition, isBack, prevPanel],\n  );\n\n  const { waitTransitionFinish } = useWaitTransitionFinish();\n  const animationFinishTimeout = useTimeout(\n    transitionEndHandler,\n    platform === Platform.IOS ? 600 : 300,\n  );\n\n  const onSwipeBackSuccess = React.useCallback(() => {\n    onSwipeBack && onSwipeBack();\n  }, [onSwipeBack]);\n\n  const onSwipeBackCancel = React.useCallback(() => {\n    onSwipeBackCancelProp && onSwipeBackCancelProp();\n    setSwipeBackPrevPanel(null);\n    setSwipeBackNextPanel(null);\n    setSwipingBack(false);\n    setSwipeBackResult(null);\n    setSwipeBackStartX(0);\n    setSwipeBackShift(0);\n  }, [onSwipeBackCancelProp]);\n\n  const swipingBackTransitionEndHandler = React.useCallback(\n    (e?: TransitionEvent): void => {\n      // indexOf because of vendor prefixes in old browsers\n      if (\n        !e ||\n        (e?.propertyName.includes('transform') && e?.target === pickPanel(swipeBackNextPanel))\n      ) {\n        switch (swipeBackResult) {\n          case SwipeBackResults.fail:\n            onSwipeBackCancel();\n            break;\n          case SwipeBackResults.success:\n            onSwipeBackSuccess();\n        }\n      }\n    },\n    [onSwipeBackCancel, onSwipeBackSuccess, swipeBackNextPanel, swipeBackResult],\n  );\n\n  const handleTouchMoveXForNativeIOSSwipeBackOrSwipeNext = (event: TouchEvent) => {\n    if (browserSwipe) {\n      return;\n    }\n    const { swipeBackTriggered, viewportStartEdgeTouched, viewportEndEdgeTouched } =\n      getSwipeBackPredicates(event.startX, event.shiftX, window!.innerWidth);\n\n    if ((viewportStartEdgeTouched || viewportEndEdgeTouched) && swipeBackTriggered) {\n      setBrowserSwipe(true);\n    }\n  };\n\n  const handleTouchMoveXForIOSSwipeBackSimulation = (event: TouchEvent) => {\n    if (swipeBackPrevented.current || swipeBackExcluded(event)) {\n      return;\n    }\n\n    const { swipedToOpposite, swipeBackTriggered, viewportStartEdgeTouched } =\n      getSwipeBackPredicates(event.startX, event.shiftX, window!.innerWidth);\n\n    if (animated && swipeBackTriggered) {\n      return;\n    }\n\n    if (!swipingBack && history && history.length > 1) {\n      if (swipedToOpposite) {\n        swipeBackPrevented.current = true;\n        return;\n      }\n\n      if (!swipeBackTriggered) {\n        return;\n      }\n\n      if (\n        !viewportStartEdgeTouched &&\n        hasHorizontalScrollableElementWithScrolledToLeft(event.originalEvent.target as HTMLElement)\n      ) {\n        swipeBackPrevented.current = true;\n        return;\n      }\n      // Начался свайп назад\n      if (onSwipeBackStart) {\n        const payload = onSwipeBackStart(activePanel);\n        if (payload === 'prevent') {\n          swipeBackPrevented.current = true;\n          return;\n        }\n      }\n\n      if (activePanel !== null) {\n        // Note: вызываем закрытие клавиатуры. В iOS это нативное поведение при свайпе.\n        blurActiveElement(document);\n        scrolls.current[activePanel] = scroll?.getScroll().y;\n      }\n\n      setSwipingBack(true);\n      setSwipeBackStartX(event.startX);\n      setSwipeBackPrevPanel(activePanel);\n      setSwipeBackNextPanel(history.slice(-2)[0]);\n    }\n\n    if (swipingBack) {\n      if (event.shiftX < 0) {\n        setSwipeBackShift(0);\n      } else if (event.shiftX > window!.innerWidth - swipeBackStartX) {\n        setSwipeBackShift(window!.innerWidth);\n      } else {\n        setSwipeBackShift(event.shiftX);\n      }\n    }\n  };\n\n  const handleTouchEndForIOSSwipeBackSimulation = (event: TouchEvent) => {\n    swipeBackPrevented.current = false;\n\n    if (swipingBack) {\n      const speed = (swipeBackShift / event.duration) * 1000;\n      if (swipeBackShift === 0) {\n        onSwipeBackCancel();\n      } else if (swipeBackShift >= (window!.innerWidth ?? 0)) {\n        onSwipeBackSuccess();\n      } else if (speed > 250 || swipeBackShift >= window!.innerWidth / 2) {\n        setSwipeBackResult(SwipeBackResults.success);\n      } else {\n        setSwipeBackResult(SwipeBackResults.fail);\n      }\n    }\n  };\n\n  const calcPanelSwipeStyles = (panelId: string | undefined): React.CSSProperties => {\n    if (!canUseDOM || !window) {\n      return {};\n    }\n\n    const isPrev = panelId === swipeBackPrevPanel;\n    const isNext = panelId === swipeBackNextPanel;\n\n    if ((!isPrev && !isNext) || swipeBackResult) {\n      return {};\n    }\n\n    let prevPanelTranslate = `${swipeBackShift}px`;\n    let nextPanelTranslate = `${-50 + (swipeBackShift * 100) / window.innerWidth / 2}%`;\n\n    if (isNext) {\n      return {\n        transform: `translate3d(${nextPanelTranslate}, 0, 0)`,\n        WebkitTransform: `translate3d(${nextPanelTranslate}, 0, 0)`,\n      };\n    }\n    if (isPrev) {\n      return {\n        transform: `translate3d(${prevPanelTranslate}, 0, 0)`,\n        WebkitTransform: `translate3d(${prevPanelTranslate}, 0, 0)`,\n      };\n    }\n\n    return {};\n  };\n\n  const calcPanelSwipeBackOverlayStyles = (panelId?: string): React.CSSProperties => {\n    if (!canUseDOM || !window) {\n      return {};\n    }\n\n    const isNext = panelId === swipeBackNextPanel;\n    if (!isNext) {\n      return {};\n    }\n\n    const calculatedOpacity = 1 - swipeBackShift / window.innerWidth;\n    const opacityOnSwipeEnd =\n      swipeBackResult === SwipeBackResults.success\n        ? 0\n        : swipeBackResult === SwipeBackResults.fail\n        ? 1\n        : null;\n\n    return {\n      display: 'block',\n      opacity: opacityOnSwipeEnd === null ? calculatedOpacity : opacityOnSwipeEnd,\n    };\n  };\n\n  React.useEffect(() => {\n    // Нужен переход\n    if (\n      prevActivePanel &&\n      prevActivePanel !== activePanelProp &&\n      !prevSwipingBack &&\n      !prevBrowserSwipe\n    ) {\n      const firstLayerId = (React.Children.toArray(children) as React.ReactElement[])\n        .map((panel) => getNavId(panel.props, warn))\n        .find((id) => id === prevActivePanel || id === activePanelProp);\n\n      const isBackTransition = firstLayerId === activePanelProp;\n      scrolls.current[prevActivePanel] = scroll?.getScroll().y;\n\n      if (disableAnimation) {\n        flushTransition(prevActivePanel, isBackTransition);\n      } else {\n        blurActiveElement(document);\n\n        setVisiblePanels([prevActivePanel, activePanelProp]);\n        setPrevPanel(prevActivePanel);\n        setNextPanel(activePanelProp);\n        setActivePanel(null);\n        setAnimated(true);\n        setIsBack(isBackTransition);\n\n        // Фолбек анимации перехода\n        if (!animationEvent.supported) {\n          animationFinishTimeout.set();\n        }\n      }\n    }\n\n    // Закончилась анимация свайпа назад\n    if (prevActivePanel && prevActivePanel !== activePanelProp && prevSwipingBack) {\n      const nextPanel = activePanelProp;\n      const prevPanel = prevActivePanel;\n      if (prevSwipeBackPrevPanel) {\n        scrolls.current[prevSwipeBackPrevPanel] = 0;\n      }\n\n      setSwipeBackPrevPanel(null);\n      setSwipeBackNextPanel(null);\n      setSwipingBack(false);\n      setSwipeBackResult(null);\n      setSwipeBackStartX(0);\n      setSwipeBackShift(0);\n      setActivePanel(nextPanel);\n      setVisiblePanels([nextPanel]);\n      setIsBack(true);\n\n      afterTransition.current = () => {\n        if (nextPanel !== null) {\n          scroll?.scrollTo(0, scrolls.current[nextPanel]);\n        }\n        prevOnTransition &&\n          prevOnTransition({\n            isBack: true,\n            from: prevPanel,\n            to: nextPanel,\n          });\n      };\n    }\n\n    // Началась анимация завершения свайпа назад.\n    if (!prevSwipeBackResult && swipeBackResult) {\n      waitTransitionFinish(\n        pickPanel(swipeBackNextPanel),\n        swipingBackTransitionEndHandler,\n        platform === Platform.IOS ? 600 : 300,\n      );\n    }\n\n    // Если свайп назад отменился (когда пользователь недостаточно сильно свайпнул)\n    if (prevSwipeBackResult === SwipeBackResults.fail && !swipeBackResult && activePanel !== null) {\n      scroll?.scrollTo(0, scrolls.current[activePanel]);\n    }\n\n    // Закончился Safari свайп\n    if (prevActivePanel !== activePanelProp && browserSwipe) {\n      setBrowserSwipe(false);\n      setNextPanel(null);\n      setPrevPanel(null);\n      setAnimated(false);\n      setVisiblePanels([activePanelProp]);\n      setActivePanel(activePanelProp);\n    }\n  }, [\n    activePanelProp,\n    activePanel,\n    animationFinishTimeout,\n    browserSwipe,\n    children,\n    disableAnimation,\n    document,\n    flushTransition,\n    platform,\n    prevActivePanel,\n    prevBrowserSwipe,\n    prevOnTransition,\n    prevSwipeBackPrevPanel,\n    prevSwipeBackResult,\n    prevSwipingBack,\n    scroll,\n    swipeBackNextPanel,\n    swipeBackResult,\n    swipingBackTransitionEndHandler,\n    waitTransitionFinish,\n  ]);\n\n  return (\n    <NavViewIdContext.Provider value={id}>\n      <Touch\n        Component=\"section\"\n        {...restProps}\n        className={classNames(\n          styles['View'],\n          platform === Platform.IOS && classNames(styles['View--ios'], 'vkuiInternalView--ios'),\n          !disableAnimation && animated && styles['View--animated'],\n          !disableAnimation && swipingBack && styles['View--swiping-back'],\n          disableAnimation && styles['View--no-motion'],\n          className,\n        )}\n        onMoveX={\n          iOSSwipeBackSimulationEnabled\n            ? handleTouchMoveXForIOSSwipeBackSimulation\n            : platform === Platform.IOS\n            ? handleTouchMoveXForNativeIOSSwipeBackOrSwipeNext\n            : undefined\n        }\n        onEnd={iOSSwipeBackSimulationEnabled ? handleTouchEndForIOSSwipeBackSimulation : undefined}\n      >\n        <div className={styles['View__panels']}>\n          {panels.map((panel: React.ReactElement) => {\n            const panelId = getNavId(panel.props, warn);\n            const isPrev = panelId === prevPanel || panelId === swipeBackPrevPanel;\n            const isTransitionTarget = animated && panelId === (isBack ? prevPanel : nextPanel);\n            const compensateScroll =\n              isPrev || panelId === swipeBackNextPanel || (panelId === nextPanel && isBack);\n\n            return (\n              <div\n                className={classNames(\n                  styles['View__panel'],\n                  panelId === activePanel && styles['View__panel--active'],\n                  panelId === prevPanel && styles['View__panel--prev'],\n                  panelId === nextPanel && styles['View__panel--next'],\n                  panelId === swipeBackPrevPanel && styles['View__panel--swipe-back-prev'],\n                  panelId === swipeBackNextPanel && styles['View__panel--swipe-back-next'],\n                  swipeBackResult === SwipeBackResults.success &&\n                    styles['View__panel--swipe-back-success'],\n                  swipeBackResult === SwipeBackResults.fail &&\n                    styles['View__panel--swipe-back-failed'],\n                )}\n                onAnimationEnd={isTransitionTarget ? transitionEndHandler : undefined}\n                ref={(el) => panelId !== undefined && (panelNodes.current[panelId] = el)}\n                style={calcPanelSwipeStyles(panelId)}\n                key={panelId}\n              >\n                {platform === Platform.IOS && (\n                  <div\n                    className={styles['View__panel-overlay']}\n                    style={calcPanelSwipeBackOverlayStyles(panelId)}\n                  />\n                )}\n                <div\n                  className={styles['View__panel-in']}\n                  style={{\n                    marginTop: compensateScroll ? -(scrolls.current[panelId] ?? 0) : undefined,\n                  }}\n                >\n                  <NavTransitionDirectionProvider isBack={swipingBack || isBack}>\n                    <NavTransitionProvider\n                      entering={panelId === nextPanel || panelId === swipeBackNextPanel}\n                    >\n                      {panel}\n                    </NavTransitionProvider>\n                  </NavTransitionDirectionProvider>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </Touch>\n    </NavViewIdContext.Provider>\n  );\n};\n"],"names":["React","classNames","noop","usePlatform","usePrevious","useTimeout","useWaitTransitionFinish","blurActiveElement","canUseDOM","useDOM","getNavId","Platform","animationEvent","useIsomorphicLayoutEffect","warnOnce","useScroll","useConfigProvider","NavViewIdContext","NavTransitionProvider","NavTransitionDirectionProvider","useSplitCol","Touch","getSwipeBackPredicates","hasHorizontalScrollableElementWithScrolledToLeft","swipeBackExcluded","SwipeBackResults","scrollsCache","warn","View","activePanel","activePanelProp","history","nav","onTransition","onSwipeBack","onSwipeBackStart","onSwipeBackCancel","onSwipeBackCancelProp","children","className","restProps","id","scrolls","useRef","afterTransition","useEffect","current","panelNodes","window","document","scroll","configProvider","splitCol","platform","useState","animated","setAnimated","visiblePanels","setVisiblePanels","setActivePanel","undefined","isBack","setIsBack","prevPanel","setPrevPanel","nextPanel","setNextPanel","swipeBackPrevented","swipingBack","setSwipingBack","swipeBackStartX","setSwipeBackStartX","swipeBackShift","setSwipeBackShift","swipeBackNextPanel","setSwipeBackNextPanel","swipeBackPrevPanel","setSwipeBackPrevPanel","swipeBackResult","setSwipeBackResult","browserSwipe","setBrowserSwipe","prevActivePanel","prevSwipingBack","prevBrowserSwipe","prevSwipeBackResult","prevSwipeBackPrevPanel","prevOnTransition","panels","Children","toArray","filter","panel","panelId","props","includes","disableAnimation","transitionMotionEnabled","animate","VKCOM","iOSSwipeBackSimulationEnabled","IOS","isWebView","Boolean","pickPanel","flushTransition","useCallback","isBackTransition","scrollTo","from","to","transitionEndHandler","e","animationName","waitTransitionFinish","animationFinishTimeout","onSwipeBackSuccess","swipingBackTransitionEndHandler","propertyName","target","handleTouchMoveXForNativeIOSSwipeBackOrSwipeNext","event","startX","shiftX","innerWidth","swipeBackTriggered","viewportStartEdgeTouched","viewportEndEdgeTouched","handleTouchMoveXForIOSSwipeBackSimulation","swipedToOpposite","length","originalEvent","payload","getScroll","y","slice","handleTouchEndForIOSSwipeBackSimulation","speed","duration","calcPanelSwipeStyles","isPrev","isNext","prevPanelTranslate","nextPanelTranslate","transform","WebkitTransform","calcPanelSwipeBackOverlayStyles","calculatedOpacity","opacityOnSwipeEnd","display","opacity","firstLayerId","map","find","supported","set","Provider","value","Component","onMoveX","onEnd","div","isTransitionTarget","compensateScroll","onAnimationEnd","ref","el","style","key","marginTop","entering"],"mappings":"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"}