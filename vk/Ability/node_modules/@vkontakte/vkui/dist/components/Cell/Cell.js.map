{"version":3,"sources":["../../../src/components/Cell/Cell.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, noop } from '@vkontakte/vkjs';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { Platform } from '../../lib/platform';\nimport { HasRootRef } from '../../types';\nimport { ListContext } from '../List/ListContext';\nimport { Removable, RemovableProps } from '../Removable/Removable';\nimport { SimpleCell, SimpleCellProps } from '../SimpleCell/SimpleCell';\nimport { CellCheckbox, CellCheckboxProps } from './CellCheckbox/CellCheckbox';\nimport { CellDragger } from './CellDragger/CellDragger';\nimport { useDraggable } from './useDraggable';\nimport styles from './Cell.module.css';\n\nexport interface CellProps\n  extends Omit<SimpleCellProps, 'getRootRef'>,\n    RemovableProps,\n    HasRootRef<HTMLDivElement> {\n  mode?: 'removable' | 'selectable';\n  /**\n   * В режиме перетаскивания ячейка перестает быть кликабельной, то есть при клике переданный onClick вызываться не будет\n   */\n  draggable?: boolean;\n  /**\n   * Имя для input в режиме selectable\n   */\n  name?: string;\n  /**\n   * В режиме selectable реагирует на входящие значения пропса cheсked, как зависящий напрямую от входящего значения\n   */\n  checked?: boolean;\n  /**\n   * В режиме selectable реагирует на входящие значения пропса defaultChecked как неконтролируемый компонент\n   */\n  defaultChecked?: boolean;\n  /**\n   * Коллбэк срабатывает при завершении перетаскивания.\n   * **Важно:** режим перетаскивания не меняет порядок ячеек в DOM. В коллбэке есть объект с полями `from` и `to`.\n   * Эти числа нужны для того, чтобы разработчик понимал, с какого индекса на какой произошел переход. В песочнице\n   * есть рабочий пример с обработкой этих чисел и перерисовкой списка.\n   */\n  onDragFinish?: ({ from, to }: { from: number; to: number }) => void;\n  /**\n   * aria-label для кнопки перетаскивания ячейки\n   */\n  draggerLabel?: string;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Cell\n */\nexport const Cell = ({\n  mode,\n  onRemove = noop,\n  removePlaceholder = 'Удалить',\n  onDragFinish,\n  before,\n  after,\n  disabled,\n  draggable,\n  Component: ComponentProps,\n  onChange,\n  name,\n  value,\n  checked,\n  defaultChecked,\n  getRootRef,\n  draggerLabel = 'Перенести ячейку',\n  className,\n  style,\n  ...restProps\n}: CellProps) => {\n  const selectable = mode === 'selectable';\n  const removable = mode === 'removable';\n  const Component = selectable ? 'label' : ComponentProps;\n\n  const platform = usePlatform();\n\n  const rootElRef = useExternRef(getRootRef);\n\n  const { dragging, ...draggableProps } = useDraggable({\n    rootElRef,\n    onDragFinish,\n  });\n\n  const { toggleDrag } = React.useContext(ListContext);\n  React.useEffect(() => {\n    if (dragging) {\n      toggleDrag(true);\n      return () => toggleDrag(false);\n    }\n    return undefined;\n  }, [dragging, toggleDrag]);\n\n  let dragger;\n  if (draggable) {\n    dragger = (\n      <CellDragger\n        className={styles['Cell__dragger']}\n        aria-label={draggerLabel}\n        {...draggableProps}\n      />\n    );\n  }\n\n  let checkbox;\n  if (selectable) {\n    const checkboxProps: CellCheckboxProps = {\n      name,\n      value,\n      onChange,\n      defaultChecked,\n      checked,\n      disabled,\n    };\n    checkbox = <CellCheckbox className={styles['Cell__checkbox']} {...checkboxProps} />;\n  }\n\n  const simpleCellDisabled =\n    (draggable && !selectable) || (removable && !restProps.onClick) || disabled;\n  const hasActive = !simpleCellDisabled && !dragging;\n\n  const cellClasses = classNames(\n    styles['Cell'],\n    platform === Platform.IOS && styles['Cell--ios'],\n    dragging && styles['Cell--dragging'],\n    removable && styles['Cell--removable'],\n    Component === 'label' && styles['Cell--selectable'],\n    disabled && styles['Cell--disabled'],\n  );\n\n  const simpleCellProps = {\n    hasActive: hasActive,\n    hasHover: hasActive && !removable,\n    ...restProps,\n    className: styles['Cell__content'],\n    disabled: simpleCellDisabled,\n    Component: Component,\n    before: (\n      <React.Fragment>\n        {draggable && platform !== Platform.IOS && dragger}\n        {selectable && checkbox}\n        {before}\n      </React.Fragment>\n    ),\n    after: (\n      <React.Fragment>\n        {draggable && platform === Platform.IOS && dragger}\n        {after}\n      </React.Fragment>\n    ),\n  };\n\n  if (removable) {\n    return (\n      <Removable\n        className={classNames(cellClasses, className)}\n        style={style}\n        getRootRef={rootElRef}\n        removePlaceholder={removePlaceholder}\n        onRemove={(e) => onRemove(e, rootElRef.current)}\n      >\n        {platform === Platform.IOS ? (\n          ({ isRemoving }) => (\n            <SimpleCell {...simpleCellProps} disabled={simpleCellProps.disabled || isRemoving} />\n          )\n        ) : (\n          <SimpleCell {...simpleCellProps} />\n        )}\n      </Removable>\n    );\n  }\n\n  return (\n    <div className={classNames(cellClasses, className)} style={style} ref={rootElRef}>\n      <SimpleCell {...simpleCellProps} />\n    </div>\n  );\n};\n\nCell.Checkbox = CellCheckbox;\n"],"names":["React","classNames","noop","useExternRef","usePlatform","Platform","ListContext","Removable","SimpleCell","CellCheckbox","CellDragger","useDraggable","Cell","mode","onRemove","removePlaceholder","onDragFinish","before","after","disabled","draggable","Component","ComponentProps","onChange","name","value","checked","defaultChecked","getRootRef","draggerLabel","className","style","restProps","selectable","removable","platform","rootElRef","dragging","draggableProps","toggleDrag","useContext","useEffect","undefined","dragger","aria-label","checkbox","checkboxProps","simpleCellDisabled","onClick","hasActive","cellClasses","IOS","simpleCellProps","hasHover","Fragment","e","current","isRemoving","div","ref","Checkbox"],"mappings":"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"}