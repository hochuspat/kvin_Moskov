{"version":3,"sources":["../../../../src/components/Slider/SliderThumb/SliderThumb.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useBooleanState } from '../../../hooks/useBooleanState';\nimport { useExternRef } from '../../../hooks/useExternRef';\nimport { useFocusVisible } from '../../../hooks/useFocusVisible';\nimport {\n  arrowMiddleware,\n  convertFloatingDataToReactCSSProperties,\n  flipMiddleware,\n  offsetMiddleware,\n  shiftMiddleware,\n  useFloating,\n} from '../../../lib/floating';\nimport type { HasDataAttribute, HasRootRef } from '../../../types';\nimport { FocusVisible } from '../../FocusVisible/FocusVisible';\nimport { TooltipBase } from '../../TooltipBase/TooltipBase';\nimport styles from './SliderThumb.module.css';\n\ninterface SliderThumbProps extends HasRootRef<HTMLSpanElement>, HasDataAttribute {\n  className?: string;\n  style?: React.CSSProperties;\n  inputProps?: React.InputHTMLAttributes<HTMLInputElement> &\n    React.RefAttributes<HTMLInputElement> &\n    HasDataAttribute;\n  withTooltip?: boolean;\n}\n\nexport const SliderThumb = ({\n  className,\n  getRootRef,\n  inputProps,\n  withTooltip,\n  ...restProps\n}: SliderThumbProps) => {\n  const { focusVisible, onBlur, onFocus } = useFocusVisible(false);\n  const [arrowRef, setArrowRef] = React.useState<HTMLDivElement | null>(null);\n\n  const memoizedMiddlewares = React.useMemo(() => {\n    return [\n      offsetMiddleware({\n        crossAxis: 0,\n        mainAxis: 15,\n      }),\n      flipMiddleware(),\n      shiftMiddleware({ padding: 8 }),\n      arrowMiddleware({\n        element: arrowRef,\n      }),\n    ];\n  }, [arrowRef]);\n\n  const {\n    x: floatingDataX,\n    y: floatingDataY,\n    placement: resolvedPlacement,\n    refs,\n    strategy: floatingPositionStrategy,\n    middlewareData: { arrow: arrowCoords },\n    update: updateTooltipPosition,\n  } = useFloating({\n    placement: 'top',\n    middleware: memoizedMiddlewares,\n  });\n\n  const {\n    value: isHovered,\n    setTrue: setHoveredTrue,\n    setFalse: setHoveredFalse,\n  } = useBooleanState(false);\n\n  const handleRootRef = useExternRef<HTMLSpanElement>(getRootRef, refs.setReference);\n\n  const shouldShowTooltip = withTooltip && (focusVisible || isHovered);\n\n  const inputValue = inputProps && inputProps.value;\n  React.useEffect(\n    function udpateTooltipPositionOnValueChange() {\n      if (shouldShowTooltip && inputValue !== 'undefined') {\n        updateTooltipPosition();\n      }\n    },\n    [inputValue, updateTooltipPosition, shouldShowTooltip],\n  );\n\n  return (\n    <React.Fragment>\n      <span\n        {...restProps}\n        ref={handleRootRef}\n        onMouseEnter={setHoveredTrue}\n        onMouseLeave={setHoveredFalse}\n        className={classNames(\n          styles['SliderThumb'],\n          focusVisible && styles['SliderThumb--focused'],\n          className,\n        )}\n      >\n        <input\n          {...inputProps}\n          type=\"range\"\n          className={styles['SliderThumb__nativeInput']}\n          aria-orientation=\"horizontal\"\n          onBlur={onBlur}\n          onFocus={onFocus}\n        />\n        <FocusVisible visible={focusVisible} mode=\"outside\" />\n      </span>\n      {shouldShowTooltip && (\n        <TooltipBase\n          appearance=\"neutral\"\n          getRootRef={refs.setFloating}\n          floatingStyle={convertFloatingDataToReactCSSProperties(\n            floatingPositionStrategy,\n            floatingDataX,\n            floatingDataY,\n          )}\n          arrowCoords={arrowCoords}\n          arrowPlacement={resolvedPlacement}\n          getArrowRef={setArrowRef}\n          text={inputValue}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n"],"names":["React","classNames","useBooleanState","useExternRef","useFocusVisible","arrowMiddleware","convertFloatingDataToReactCSSProperties","flipMiddleware","offsetMiddleware","shiftMiddleware","useFloating","FocusVisible","TooltipBase","SliderThumb","className","getRootRef","inputProps","withTooltip","restProps","focusVisible","onBlur","onFocus","useState","arrowRef","setArrowRef","memoizedMiddlewares","useMemo","crossAxis","mainAxis","padding","element","placement","middleware","x","floatingDataX","y","floatingDataY","resolvedPlacement","refs","strategy","floatingPositionStrategy","middlewareData","arrow","arrowCoords","update","updateTooltipPosition","value","isHovered","setTrue","setHoveredTrue","setFalse","setHoveredFalse","handleRootRef","setReference","shouldShowTooltip","inputValue","useEffect","udpateTooltipPositionOnValueChange","Fragment","span","ref","onMouseEnter","onMouseLeave","input","type","aria-orientation","visible","mode","appearance","setFloating","floatingStyle","arrowPlacement","getArrowRef","text"],"mappings":";;;;AAAA,YAAYA,WAAW,QAAQ;AAC/B,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,eAAe,QAAQ,iCAAiC;AACjE,SAASC,YAAY,QAAQ,8BAA8B;AAC3D,SAASC,eAAe,QAAQ,iCAAiC;AACjE,SACEC,eAAe,EACfC,uCAAuC,EACvCC,cAAc,EACdC,gBAAgB,EAChBC,eAAe,EACfC,WAAW,QACN,wBAAwB;AAE/B,SAASC,YAAY,QAAQ,kCAAkC;AAC/D,SAASC,WAAW,QAAQ,gCAAgC;AAY5D,OAAO,IAAMC,cAAc;QACzBC,mBAAAA,WACAC,oBAAAA,YACAC,oBAAAA,YACAC,qBAAAA,aACGC;QAJHJ;QACAC;QACAC;QACAC;;IAGA,IAA0Cb,mBAAAA,gBAAgB,QAAlDe,eAAkCf,iBAAlCe,cAAcC,SAAoBhB,iBAApBgB,QAAQC,UAAYjB,iBAAZiB;IAC9B,IAAgCrB,mCAAAA,MAAMsB,QAAQ,CAAwB,WAA/DC,WAAyBvB,oBAAfwB,cAAexB;IAEhC,IAAMyB,sBAAsBzB,MAAM0B,OAAO,CAAC;QACxC,OAAO;YACLlB,iBAAiB;gBACfmB,WAAW;gBACXC,UAAU;YACZ;YACArB;YACAE,gBAAgB;gBAAEoB,SAAS;YAAE;YAC7BxB,gBAAgB;gBACdyB,SAASP;YACX;SACD;IACH,GAAG;QAACA;KAAS;IAEb,IAQIb,eAAAA,YAAY;QACdqB,WAAW;QACXC,YAAYP;IACd,IAVEQ,AAAGC,gBAODxB,aAPFuB,GACAE,AAAGC,gBAMD1B,aANFyB,GACAJ,AAAWM,oBAKT3B,aALFqB,WACAO,OAIE5B,aAJF4B,MACAC,AAAUC,2BAGR9B,aAHF6B,wCAGE7B,aAFF+B,gBAAkBC,AAAOC,0CAAPD,OAClBE,AAAQC,wBACNnC,aADFkC;IAMF,IAII1C,mBAAAA,gBAAgB,QAHlB4C,AAAOC,YAGL7C,iBAHF4C,OACAE,AAASC,iBAEP/C,iBAFF8C,SACAE,AAAUC,kBACRjD,iBADFgD;IAGF,IAAME,gBAAgBjD,aAA8BY,YAAYuB,KAAKe,YAAY;IAEjF,IAAMC,oBAAoBrC,eAAgBE,CAAAA,gBAAgB4B,SAAQ;IAElE,IAAMQ,aAAavC,cAAcA,WAAW8B,KAAK;IACjD9C,MAAMwD,SAAS,CACb,SAASC;QACP,IAAIH,qBAAqBC,eAAe,aAAa;YACnDV;QACF;IACF,GACA;QAACU;QAAYV;QAAuBS;KAAkB;IAGxD,qBACE,oBAACtD,MAAM0D,QAAQ,sBACb,oBAACC,gDACKzC;QACJ0C,KAAKR;QACLS,cAAcZ;QACda,cAAcX;QACdrC,WAAWb,8BAETkB,4CACAL;sBAGF,oBAACiD,iDACK/C;QACJgD,MAAK;QACLlD,SAAS;QACTmD,oBAAiB;QACjB7C,QAAQA;QACRC,SAASA;uBAEX,oBAACV;QAAauD,SAAS/C;QAAcgD,MAAK;SAE3Cb,mCACC,oBAAC1C;QACCwD,YAAW;QACXrD,YAAYuB,KAAK+B,WAAW;QAC5BC,eAAehE,wCACbkC,0BACAN,eACAE;QAEFO,aAAaA;QACb4B,gBAAgBlC;QAChBmC,aAAahD;QACbiD,MAAMlB;;AAKhB,EAAE"}