{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport * as React from \"react\";\nimport { Icon24Attach, Icon24CheckCircleOutline, Icon24Send, Icon28AddCircleOutline, Icon28AttachOutline, Icon28CheckCircleOutline, Icon28Send, Icon48WritebarDone, Icon48WritebarSend } from \"@vkontakte/icons\";\nimport { classNames, hasReactNode } from \"@vkontakte/vkjs\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { Platform } from \"../../lib/platform\";\nimport { COMMON_WARNINGS, warnOnce } from \"../../lib/warnOnce\";\nimport { AdaptiveIconRenderer } from \"../AdaptiveIconRenderer/AdaptiveIconRenderer\";\nimport { Counter } from \"../Counter/Counter\";\nimport { Tappable } from \"../Tappable/Tappable\";\nvar warn = warnOnce(\"WriteBarIcon\");\n/**\n * @see https://vkcom.github.io/VKUI/#/WriteBarIcon\n */\n\nexport var WriteBarIcon = function (_param) {\n  var mode = _param.mode,\n      children = _param.children,\n      count = _param.count,\n      className = _param.className,\n      restProps = _object_without_properties(_param, [\"mode\", \"children\", \"count\", \"className\"]);\n\n  var platform = usePlatform();\n  var modeLabel = undefined;\n  var predefinedIcons;\n\n  switch (mode) {\n    case \"attach\":\n      predefinedIcons = {\n        IconCompact: platform === Platform.IOS ? Icon28AddCircleOutline : Icon24Attach,\n        IconRegular: platform === Platform.IOS ? Icon28AddCircleOutline : Icon28AttachOutline\n      };\n      modeLabel = \"Прикрепить файл\";\n      break;\n\n    case \"send\":\n      predefinedIcons = {\n        IconCompact: platform === Platform.IOS ? Icon48WritebarSend : Icon24Send,\n        IconRegular: platform === Platform.IOS ? Icon48WritebarSend : Icon28Send\n      };\n      modeLabel = \"Отправить\";\n      break;\n\n    case \"done\":\n      predefinedIcons = {\n        IconCompact: platform === Platform.IOS ? Icon48WritebarDone : Icon24CheckCircleOutline,\n        IconRegular: platform === Platform.IOS ? Icon48WritebarDone : Icon28CheckCircleOutline\n      };\n      modeLabel = \"Готово\";\n      break;\n\n    default:\n      break;\n  }\n\n  if (process.env.NODE_ENV === \"development\") {\n    var isAccessible = !modeLabel && (!restProps[\"aria-label\"] || restProps[\"aria-labelledby\"]);\n\n    if (!isAccessible) {\n      warn(COMMON_WARNINGS.a11y[\"button-name\"], \"error\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Tappable, _object_spread_props(_object_spread({\n    \"aria-label\": modeLabel\n  }, restProps), {\n    Component: \"button\",\n    hasHover: false,\n    activeMode: \"vkuiWriteBarIcon__active\",\n    className: classNames(\"vkuiWriteBarIcon\", platform === Platform.IOS && \"vkuiWriteBarIcon--ios\", mode === \"send\" && \"vkuiWriteBarIcon--mode-send\", mode === \"done\" && \"vkuiWriteBarIcon--mode-done\", className)\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"vkuiWriteBarIcon__in\"\n  }, predefinedIcons ? /*#__PURE__*/React.createElement(AdaptiveIconRenderer, predefinedIcons) : children), hasReactNode(count) && /*#__PURE__*/React.createElement(Counter, {\n    className: \"vkuiWriteBarIcon__counter\",\n    size: \"s\"\n  }, count));\n};","map":{"version":3,"mappings":";;;AAAA,YAAYA,KAAZ,MAAuB,OAAvB;AACA,SACEC,YADF,EAEEC,wBAFF,EAGEC,UAHF,EAIEC,sBAJF,EAKEC,mBALF,EAMEC,wBANF,EAOEC,UAPF,EAQEC,kBARF,EASEC,kBATF,QAUO,kBAVP;AAWA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,iBAAzC;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,eAAT,EAA0BC,QAA1B,QAA0C,oBAA1C;AACA,SAASC,oBAAT,QAAqC,8CAArC;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AAmBA,IAAMC,OAAOJ,SAAS,cAATA,CAAb;AAEA;;;;AAGA,OAAO,IAAMK,eAAe;MAC1BC;MACAC;MACAC;MACAC;MACGC,gDAJHJ,MAIGI,EAHHH,UAGGG,EAFHF,OAEGE,EADHD,WACGC;;EAEH,IAAMC,WAAWd,aAAjB;EACA,IAAIe,YAAgCC,SAApC;EAEA,IAAIC,eAAJ;;EACA,QAAQR,IAAR;IACE,KAAK,QAAL;MACEQ,kBAAkB;QAChBC,aAAaJ,aAAab,SAASkB,GAAtBL,GAA4BtB,sBAA5BsB,GAAqDzB,YADlD;QAEhB+B,aAAaN,aAAab,SAASkB,GAAtBL,GAA4BtB,sBAA5BsB,GAAqDrB;MAFlD,CAAlBwB;MAIAF,YAAY,iBAAZA;MACA;;IAEF,KAAK,MAAL;MACEE,kBAAkB;QAChBC,aAAaJ,aAAab,SAASkB,GAAtBL,GAA4BjB,kBAA5BiB,GAAiDvB,UAD9C;QAEhB6B,aAAaN,aAAab,SAASkB,GAAtBL,GAA4BjB,kBAA5BiB,GAAiDnB;MAF9C,CAAlBsB;MAIAF,YAAY,WAAZA;MACA;;IAEF,KAAK,MAAL;MACEE,kBAAkB;QAChBC,aAAaJ,aAAab,SAASkB,GAAtBL,GAA4BlB,kBAA5BkB,GAAiDxB,wBAD9C;QAEhB8B,aAAaN,aAAab,SAASkB,GAAtBL,GAA4BlB,kBAA5BkB,GAAiDpB;MAF9C,CAAlBuB;MAIAF,YAAY,QAAZA;MACA;;IAEF;MACE;EA1BJ;;EA6BA,IAAIM,QAAQC,GAARD,CAAYE,QAAZF,KAAyB,aAA7B,EAA4C;IAC1C,IAAMG,eAAe,CAACT,SAAD,KAAe,CAACF,SAAS,CAAC,YAAD,CAAV,IAA4BA,SAAS,CAAC,iBAAD,CAApD,CAArB;;IAEA,IAAI,CAACW,YAAL,EAAmB;MACjBjB,KAAKL,gBAAgBuB,IAAhBvB,CAAqB,aAArBA,CAALK,EAA0C,OAA1CA;IACF;EACF;;EAEA,oBACEnB,oBAACkB,QAAD,EAACA;IACCoB,cAAYX;EADbT,GAEKO,SAFLP,GAEKO;IACJc,WAAU,QADNd;IAEJe,UAAU,KAFNf;IAGJgB,UAAU,4BAHNhB;IAIJD,WAAWd,+BAETgB,aAAab,SAASkB,GAAtBL,IAAyB,uBAFhBhB,EAGTW,SAAS,MAATA,IAAS,6BAHAX,EAITW,SAAS,MAATA,IAAS,6BAJAX,EAKTc,SALSd;EAJPe,CAFLP,CAAD,eAcElB,oBAAC0C,MAAD,EAACA;IAAKlB,SAAS;EAAdkB,CAAD,EACGb,+BAAkB7B,oBAACgB,oBAAD,EAA0Ba,eAA1B,CAAlBA,GAAkEP,QADrE,CAdF,EAiBGX,aAAaY,KAAbZ,KAAaY,aACZvB,oBAACiB,OAAD,EAACA;IAAQO,SAAS,6BAAjBP;IAAoD0B,MAAK;EAAzD1B,CAAD,EACGM,KADH,CAlBJ,CADF;AAyBF,CAzEO","names":["React","Icon24Attach","Icon24CheckCircleOutline","Icon24Send","Icon28AddCircleOutline","Icon28AttachOutline","Icon28CheckCircleOutline","Icon28Send","Icon48WritebarDone","Icon48WritebarSend","classNames","hasReactNode","usePlatform","Platform","COMMON_WARNINGS","warnOnce","AdaptiveIconRenderer","Counter","Tappable","warn","WriteBarIcon","mode","children","count","className","restProps","platform","modeLabel","undefined","predefinedIcons","IconCompact","IOS","IconRegular","process","env","NODE_ENV","isAccessible","a11y","aria-label","Component","hasHover","activeMode","span","size"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\components\\WriteBarIcon\\WriteBarIcon.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Icon24Attach,\n  Icon24CheckCircleOutline,\n  Icon24Send,\n  Icon28AddCircleOutline,\n  Icon28AttachOutline,\n  Icon28CheckCircleOutline,\n  Icon28Send,\n  Icon48WritebarDone,\n  Icon48WritebarSend,\n} from '@vkontakte/icons';\nimport { classNames, hasReactNode } from '@vkontakte/vkjs';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { Platform } from '../../lib/platform';\nimport { COMMON_WARNINGS, warnOnce } from '../../lib/warnOnce';\nimport { AdaptiveIconRenderer } from '../AdaptiveIconRenderer/AdaptiveIconRenderer';\nimport { Counter } from '../Counter/Counter';\nimport { Tappable } from '../Tappable/Tappable';\nimport styles from './WriteBarIcon.module.css';\n\nexport interface WriteBarIconProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  /**\n   * Предустановленные типы кнопок в WriteBar для отрисовки иконки в зависимости от платформы.\n   * Если передать валидное значение для этого свойства, `children` игнорируется.\n   *\n   * - `attach` – иконка прикрепления.\n   * - `send` – иконка отправки.\n   * - `done` – иконка отправки в режиме редактирования.\n   */\n  mode?: 'attach' | 'send' | 'done';\n  /**\n   * Значение счётчика для кнопки. Например, для количества прикреплённых файлов.\n   */\n  count?: number;\n}\n\nconst warn = warnOnce('WriteBarIcon');\n\n/**\n * @see https://vkcom.github.io/VKUI/#/WriteBarIcon\n */\nexport const WriteBarIcon = ({\n  mode,\n  children,\n  count,\n  className,\n  ...restProps\n}: WriteBarIconProps) => {\n  const platform = usePlatform();\n  let modeLabel: string | undefined = undefined;\n\n  let predefinedIcons;\n  switch (mode) {\n    case 'attach':\n      predefinedIcons = {\n        IconCompact: platform === Platform.IOS ? Icon28AddCircleOutline : Icon24Attach,\n        IconRegular: platform === Platform.IOS ? Icon28AddCircleOutline : Icon28AttachOutline,\n      };\n      modeLabel = 'Прикрепить файл';\n      break;\n\n    case 'send':\n      predefinedIcons = {\n        IconCompact: platform === Platform.IOS ? Icon48WritebarSend : Icon24Send,\n        IconRegular: platform === Platform.IOS ? Icon48WritebarSend : Icon28Send,\n      };\n      modeLabel = 'Отправить';\n      break;\n\n    case 'done':\n      predefinedIcons = {\n        IconCompact: platform === Platform.IOS ? Icon48WritebarDone : Icon24CheckCircleOutline,\n        IconRegular: platform === Platform.IOS ? Icon48WritebarDone : Icon28CheckCircleOutline,\n      };\n      modeLabel = 'Готово';\n      break;\n\n    default:\n      break;\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    const isAccessible = !modeLabel && (!restProps['aria-label'] || restProps['aria-labelledby']);\n\n    if (!isAccessible) {\n      warn(COMMON_WARNINGS.a11y['button-name'], 'error');\n    }\n  }\n\n  return (\n    <Tappable\n      aria-label={modeLabel}\n      {...restProps}\n      Component=\"button\"\n      hasHover={false}\n      activeMode={styles['WriteBarIcon__active']}\n      className={classNames(\n        styles['WriteBarIcon'],\n        platform === Platform.IOS && styles['WriteBarIcon--ios'],\n        mode === 'send' && styles['WriteBarIcon--mode-send'],\n        mode === 'done' && styles['WriteBarIcon--mode-done'],\n        className,\n      )}\n    >\n      <span className={styles['WriteBarIcon__in']}>\n        {predefinedIcons ? <AdaptiveIconRenderer {...predefinedIcons} /> : children}\n      </span>\n      {hasReactNode(count) && (\n        <Counter className={styles['WriteBarIcon__counter']} size=\"s\">\n          {count}\n        </Counter>\n      )}\n    </Tappable>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}