{"ast":null,"code":"function copyWithNavigator(text) {\n  return navigator.clipboard.writeText(text).then(function () {\n    return true;\n  });\n}\n\nfunction copyWithFakeElement(text) {\n  return new Promise(function (resolve, reject) {\n    var textareaEl = document.createElement(\"textarea\");\n    var range = document.createRange();\n    textareaEl.value = text;\n    textareaEl.style.position = \"fixed\"; // Avoid scrolling to bottom\n\n    textareaEl.contentEditable = \"true\";\n    document.body.appendChild(textareaEl);\n    textareaEl.focus();\n    textareaEl.select();\n    range.selectNodeContents(textareaEl);\n    var selection = window.getSelection();\n\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(range);\n    }\n\n    textareaEl.setSelectionRange(0, 999999);\n\n    try {\n      var successful = document.execCommand(\"copy\");\n\n      if (successful) {\n        resolve(true);\n      } else {\n        reject(new Error(\"copy failed\"));\n      }\n    } catch (error) {\n      reject(error);\n    }\n\n    if (selection) {\n      selection.removeAllRanges();\n    }\n\n    document.body.removeChild(textareaEl);\n  });\n}\n\nexport function copyTextToClipboard(text) {\n  if (navigator.clipboard) {\n    return copyWithNavigator(text).catch(function () {\n      return copyWithFakeElement(text);\n    });\n  } else {\n    return copyWithFakeElement(text);\n  }\n}","map":{"version":3,"mappings":"AAAA,SAASA,iBAAT,CAA2BC,IAA3B,EAAuC;EACrC,OAAOC,UAAUC,SAAVD,CAAoBE,SAApBF,CAA8BD,IAA9BC,EAAoCG,IAApCH,CAAyC;WAAM;GAA/CA,CAAP;AACF;;AAEA,SAASI,mBAAT,CAA6BL,IAA7B,EAAyC;EACvC,OAAO,IAAIM,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAUA;IAC3B,IAAMC,aAAaC,SAASC,aAATD,CAAuB,UAAvBA,CAAnB;IACA,IAAME,QAAQF,SAASG,WAATH,EAAd;IAEAD,WAAWK,KAAXL,GAAmBT,IAAnBS;IACAA,WAAWM,KAAXN,CAAiBO,QAAjBP,GAA4B,OAA5BA,CAL2BD,CAKU;;IACrCC,WAAWQ,eAAXR,GAA6B,MAA7BA;IAEAC,SAASQ,IAATR,CAAcS,WAAdT,CAA0BD,UAA1BC;IAEAD,WAAWW,KAAXX;IACAA,WAAWY,MAAXZ;IAEAG,MAAMU,kBAANV,CAAyBH,UAAzBG;IAEA,IAAMW,YAAYC,OAAOC,YAAPD,EAAlB;;IACA,IAAID,SAAJ,EAAe;MACbA,UAAUG,eAAVH;MACAA,UAAUI,QAAVJ,CAAmBX,KAAnBW;IACF;;IAEAd,WAAWmB,iBAAXnB,CAA6B,CAA7BA,EAAgC,MAAhCA;;IAEA,IAAI;MACF,IAAMoB,aAAanB,SAASoB,WAATpB,CAAqB,MAArBA,CAAnB;;MACA,IAAImB,UAAJ,EAAgB;QACdtB,QAAQ,IAARA;MACF,CAFA,MAEO;QACLC,OAAO,IAAIuB,KAAJ,CAAU,aAAV,CAAPvB;MACF;IACF,CAPA,CAOE,OAAOwB,KAAP,EAAc;MACdxB,OAAOwB,KAAPxB;IACF;;IAEA,IAAIe,SAAJ,EAAe;MACbA,UAAUG,eAAVH;IACF;;IAEAb,SAASQ,IAATR,CAAcuB,WAAdvB,CAA0BD,UAA1BC;EACF,CAvCO,CAAP;AAwCF;;AAEA,OAAO,SAASwB,mBAAT,CAA6BlC,IAA7B,EAAyC;EAC9C,IAAIC,UAAUC,SAAd,EAAyB;IACvB,OAAOH,kBAAkBC,IAAlBD,EAAwBoC,KAAxBpC,CAA8B;aAAMM,oBAAoBL,IAApBK;KAApCN,CAAP;EACF,CAFA,MAEO;IACL,OAAOM,oBAAoBL,IAApBK,CAAP;EACF;AACF","names":["copyWithNavigator","text","navigator","clipboard","writeText","then","copyWithFakeElement","Promise","resolve","reject","textareaEl","document","createElement","range","createRange","value","style","position","contentEditable","body","appendChild","focus","select","selectNodeContents","selection","window","getSelection","removeAllRanges","addRange","setSelectionRange","successful","execCommand","Error","error","removeChild","copyTextToClipboard","catch"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkjs\\src\\clipboard.ts"],"sourcesContent":["function copyWithNavigator(text: string): Promise<boolean> {\n  return navigator.clipboard.writeText(text).then(() => true);\n}\n\nfunction copyWithFakeElement(text: string): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    const textareaEl = document.createElement('textarea');\n    const range = document.createRange();\n\n    textareaEl.value = text;\n    textareaEl.style.position = 'fixed'; // Avoid scrolling to bottom\n    textareaEl.contentEditable = 'true';\n\n    document.body.appendChild(textareaEl);\n\n    textareaEl.focus();\n    textareaEl.select();\n\n    range.selectNodeContents(textareaEl);\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(range);\n    }\n\n    textareaEl.setSelectionRange(0, 999999);\n\n    try {\n      const successful = document.execCommand('copy');\n      if (successful) {\n        resolve(true);\n      } else {\n        reject(new Error('copy failed'));\n      }\n    } catch (error) {\n      reject(error);\n    }\n\n    if (selection) {\n      selection.removeAllRanges();\n    }\n\n    document.body.removeChild(textareaEl);\n  });\n}\n\nexport function copyTextToClipboard(text: string): Promise<boolean> {\n  if (navigator.clipboard) {\n    return copyWithNavigator(text).catch(() => copyWithFakeElement(text));\n  } else {\n    return copyWithFakeElement(text);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}