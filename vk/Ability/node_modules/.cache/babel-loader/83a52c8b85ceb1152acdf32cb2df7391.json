{"ast":null,"code":"import { _ as _define_property } from \"@swc/helpers/_/_define_property\";\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { _ as _sliced_to_array } from \"@swc/helpers/_/_sliced_to_array\";\n\nvar _options_;\n\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport { useCustomEnsuredControl } from \"../../hooks/useEnsuredControl\";\nimport { useId } from \"../../hooks/useId\";\nimport { SizeType } from \"../../lib/adaptivity\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { RootComponent } from \"../RootComponent/RootComponent\";\nimport { SegmentedControlOption } from \"./SegmentedControlOption/SegmentedControlOption\";\n\nvar sizeYClassNames = _define_property({\n  none: \"vkuiSegmentedControl--sizeY-none\"\n}, SizeType.REGULAR, \"vkuiSegmentedControl--sizeY-regular\");\n\nvar warn = warnOnce(\"SegmentedControl\");\n/**\n * @see https://vkcom.github.io/VKUI/#/SegmentedControl\n */\n\nexport var SegmentedControl = function (_param) {\n  var _param_size = _param.size,\n      size = _param_size === void 0 ? \"l\" : _param_size,\n      name = _param.name,\n      options = _param.options,\n      _param_defaultValue = _param.defaultValue,\n      defaultValue = _param_defaultValue === void 0 ? (_options_ = options[0]) === null || _options_ === void 0 ? void 0 : _options_.value : _param_defaultValue,\n      children = _param.children,\n      onChangeProp = _param.onChange,\n      valueProp = _param.value,\n      restProps = _object_without_properties(_param, [\"size\", \"name\", \"options\", \"defaultValue\", \"children\", \"onChange\", \"value\"]);\n\n  var id = useId();\n\n  var _useCustomEnsuredControl = _sliced_to_array(useCustomEnsuredControl({\n    onChange: onChangeProp,\n    value: valueProp,\n    defaultValue: defaultValue\n  }), 2),\n      value = _useCustomEnsuredControl[0],\n      onChange = _useCustomEnsuredControl[1];\n\n  var _useAdaptivity = useAdaptivity(),\n      _useAdaptivity_sizeY = _useAdaptivity.sizeY,\n      sizeY = _useAdaptivity_sizeY === void 0 ? \"none\" : _useAdaptivity_sizeY;\n\n  var actualIndex = options.findIndex(function (option) {\n    return option.value === value;\n  });\n  useIsomorphicLayoutEffect(function () {\n    if (actualIndex === -1 && process.env.NODE_ENV === \"development\") {\n      warn(\"defaultValue: такого значения нет среди опций!\", \"error\");\n    }\n  }, [actualIndex]);\n  var translateX = \"translateX(\".concat(100 * actualIndex, \"%)\");\n  return /*#__PURE__*/React.createElement(RootComponent, _object_spread_props(_object_spread({}, restProps), {\n    baseClassName: classNames(\"vkuiSegmentedControl\", sizeY !== SizeType.COMPACT && sizeYClassNames[sizeY], size === \"l\" && \"vkuiSegmentedControl--size-l\")\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    role: \"radiogroup\",\n    className: \"vkuiSegmentedControl__in\"\n  }, actualIndex > -1 && /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-hidden\": true,\n    className: \"vkuiSegmentedControl__slider\",\n    style: {\n      width: \"\".concat(100 / options.length, \"%\"),\n      transform: translateX,\n      WebkitTransform: translateX\n    }\n  }), options.map(function (_param) /*#__PURE__*/{\n    var label = _param.label,\n        optionClassName = _param.className,\n        optionProps = _object_without_properties(_param, [\"label\", \"className\"]);\n\n    return React.createElement(SegmentedControlOption, _object_spread_props(_object_spread({\n      key: \"\".concat(optionProps.value)\n    }, optionProps), {\n      className: classNames(\"vkuiSegmentedControl__option\", optionClassName),\n      name: name !== null && name !== void 0 ? name : id,\n      checked: value === optionProps.value,\n      onChange: function () {\n        return onChange(optionProps.value);\n      }\n    }), label);\n  })));\n};","map":{"version":3,"mappings":"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","names":["options","React","classNames","useAdaptivity","useCustomEnsuredControl","useId","SizeType","useIsomorphicLayoutEffect","warnOnce","RootComponent","SegmentedControlOption","sizeYClassNames","none","REGULAR","warn","SegmentedControl","size","_param_size","name","defaultValue","value","_param_defaultValue","children","onChange","onChangeProp","valueProp","restProps","id","sizeY","_useAdaptivity_sizeY","actualIndex","findIndex","option","process","env","NODE_ENV","translateX","concat","baseClassName","COMPACT","div","role","className","aria-hidden","style","width","length","transform","WebkitTransform","map","label","optionClassName","optionProps","key","checked"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\components\\SegmentedControl\\SegmentedControl.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { useCustomEnsuredControl } from '../../hooks/useEnsuredControl';\nimport { useId } from '../../hooks/useId';\nimport { SizeType } from '../../lib/adaptivity';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { HTMLAttributesWithRootRef } from '../../types';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport { SegmentedControlOption } from './SegmentedControlOption/SegmentedControlOption';\nimport styles from './SegmentedControl.module.css';\n\nconst sizeYClassNames = {\n  none: styles['SegmentedControl--sizeY-none'],\n  [SizeType.REGULAR]: styles['SegmentedControl--sizeY-regular'],\n};\n\nexport type SegmentedControlValue = string | number | undefined;\n\nexport interface SegmentedControlOptionInterface\n  extends Omit<React.HTMLAttributes<HTMLElement>, 'label'> {\n  label: React.ReactChild;\n  value: SegmentedControlValue;\n}\n\nexport interface SegmentedControlProps\n  extends Omit<HTMLAttributesWithRootRef<HTMLDivElement>, 'onChange'> {\n  options: SegmentedControlOptionInterface[];\n  size?: 'm' | 'l';\n  name?: string;\n  onChange?: (value: SegmentedControlValue) => void;\n  value?: SegmentedControlValue;\n  defaultValue?: SegmentedControlValue;\n}\n\nconst warn = warnOnce('SegmentedControl');\n\n/**\n * @see https://vkcom.github.io/VKUI/#/SegmentedControl\n */\nexport const SegmentedControl = ({\n  size = 'l',\n  name,\n  options,\n  defaultValue = options[0]?.value,\n  children,\n  onChange: onChangeProp,\n  value: valueProp,\n  ...restProps\n}: SegmentedControlProps) => {\n  const id = useId();\n\n  const [value, onChange] = useCustomEnsuredControl({\n    onChange: onChangeProp,\n    value: valueProp,\n    defaultValue,\n  });\n\n  const { sizeY = 'none' } = useAdaptivity();\n\n  const actualIndex = options.findIndex((option) => option.value === value);\n\n  useIsomorphicLayoutEffect(() => {\n    if (actualIndex === -1 && process.env.NODE_ENV === 'development') {\n      warn('defaultValue: такого значения нет среди опций!', 'error');\n    }\n  }, [actualIndex]);\n\n  const translateX = `translateX(${100 * actualIndex}%)`;\n\n  return (\n    <RootComponent\n      {...restProps}\n      baseClassName={classNames(\n        styles['SegmentedControl'],\n        sizeY !== SizeType.COMPACT && sizeYClassNames[sizeY],\n        size === 'l' && styles['SegmentedControl--size-l'],\n      )}\n    >\n      <div role=\"radiogroup\" className={styles['SegmentedControl__in']}>\n        {actualIndex > -1 && (\n          <div\n            aria-hidden\n            className={styles['SegmentedControl__slider']}\n            style={{\n              width: `${100 / options.length}%`,\n              transform: translateX,\n              WebkitTransform: translateX,\n            }}\n          />\n        )}\n        {options.map(({ label, className: optionClassName, ...optionProps }) => (\n          <SegmentedControlOption\n            key={`${optionProps.value}`}\n            {...optionProps}\n            className={classNames(styles['SegmentedControl__option'], optionClassName)}\n            name={name ?? id}\n            checked={value === optionProps.value}\n            onChange={() => onChange(optionProps.value)}\n          >\n            {label}\n          </SegmentedControlOption>\n        ))}\n      </div>\n    </RootComponent>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}