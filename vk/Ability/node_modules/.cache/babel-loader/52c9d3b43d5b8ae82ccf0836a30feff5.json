{"ast":null,"code":"import { _ as _sliced_to_array } from \"@swc/helpers/_/_sliced_to_array\";\nimport * as React from \"react\";\nimport { Keys, pressedKey } from \"../lib/accessibility\";\nimport { useDOM } from \"../lib/dom\";\nimport { useGlobalEventListener } from \"./useGlobalEventListener\";\nexport var ENABLE_KEYBOARD_INPUT_EVENT_NAME = \"enableKeyboardInput\";\nexport var DISABLE_KEYBOARD_INPUT_EVENT_NAME = \"disableKeyboardInput\";\nexport function useKeyboardInputTracker() {\n  var document = useDOM().document;\n\n  var _React_useState = _sliced_to_array(React.useState(false), 2),\n      isKeyboardInputActive = _React_useState[0],\n      toggleKeyboardInput = _React_useState[1];\n\n  var enableKeyboardInput = React.useCallback(function () {\n    toggleKeyboardInput(true);\n  }, []);\n  var handleKeydown = React.useCallback(function (e) {\n    if (pressedKey(e) === Keys.TAB) {\n      enableKeyboardInput();\n    }\n  }, [enableKeyboardInput]);\n  var disableKeyboardInput = React.useCallback(function () {\n    toggleKeyboardInput(false);\n  }, []);\n  var eventOptions = {\n    passive: true,\n    capture: true\n  };\n  useGlobalEventListener(document, \"keydown\", handleKeydown, eventOptions);\n  useGlobalEventListener(document, \"mousedown\", disableKeyboardInput, eventOptions);\n  useGlobalEventListener(document, \"touchstart\", disableKeyboardInput, eventOptions);\n  useGlobalEventListener(document, ENABLE_KEYBOARD_INPUT_EVENT_NAME, enableKeyboardInput, eventOptions);\n  useGlobalEventListener(document, DISABLE_KEYBOARD_INPUT_EVENT_NAME, disableKeyboardInput, eventOptions);\n  return isKeyboardInputActive;\n}","map":{"version":3,"mappings":";AAAA,YAAYA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,sBAAjC;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,sBAAT,QAAuC,0BAAvC;AAEA,OAAO,IAAMC,mCAAmC,qBAAzC;AACP,OAAO,IAAMC,oCAAoC,sBAA1C;AAEP,OAAO,SAASC,uBAAT,GAASA;EACd,IAAMC,QAAEA,GAAaL,SAAbK,QAAR;;EAEA,IAAqDR,yCAAMS,QAANT,CAAwB,KAAxBA,GAAwB,CAAxBA,CAArD;EAAA,IAAOU,wBAA8CV,kBAArD;EAAA,IAA8BW,sBAAuBX,kBAArD;;EAEA,IAAMY,sBAAsBZ,MAAMa,WAANb,CAAkB;IAC5CW,oBAAoB,IAApBA;EACF,CAF4BX,EAEzB,EAFyBA,CAA5B;EAIA,IAAMc,gBAAgBd,MAAMa,WAANb,CACpB,UAACe,CAAD,EAACA;IACC,IAAIb,WAAWa,CAAXb,MAAkBD,KAAKe,GAA3B,EAAgC;MAC9BJ;IACF;EACF,CALoBZ,EAMpB,CAACY,mBAAD,CANoBZ,CAAtB;EASA,IAAMiB,uBAAuBjB,MAAMa,WAANb,CAAkB;IAC7CW,oBAAoB,KAApBA;EACF,CAF6BX,EAE1B,EAF0BA,CAA7B;EAIA,IAAMkB,eAAe;IACnBC,SAAS,IADU;IAEnBC,SAAS;EAFU,CAArB;EAKAhB,uBAAuBI,QAAvBJ,EAAiC,SAAjCA,EAA4CU,aAA5CV,EAA2Dc,YAA3Dd;EACAA,uBAAuBI,QAAvBJ,EAAiC,WAAjCA,EAA8Ca,oBAA9Cb,EAAoEc,YAApEd;EACAA,uBAAuBI,QAAvBJ,EAAiC,YAAjCA,EAA+Ca,oBAA/Cb,EAAqEc,YAArEd;EACAA,uBACEI,QADFJ,EAEEC,gCAFFD,EAGEQ,mBAHFR,EAIEc,YAJFd;EAMAA,uBACEI,QADFJ,EAEEE,iCAFFF,EAGEa,oBAHFb,EAIEc,YAJFd;EAOA,OAAOM,qBAAP;AACF","names":["React","Keys","pressedKey","useDOM","useGlobalEventListener","ENABLE_KEYBOARD_INPUT_EVENT_NAME","DISABLE_KEYBOARD_INPUT_EVENT_NAME","useKeyboardInputTracker","document","useState","isKeyboardInputActive","toggleKeyboardInput","enableKeyboardInput","useCallback","handleKeydown","e","TAB","disableKeyboardInput","eventOptions","passive","capture"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\hooks\\useKeyboardInputTracker.ts"],"sourcesContent":["import * as React from 'react';\nimport { Keys, pressedKey } from '../lib/accessibility';\nimport { useDOM } from '../lib/dom';\nimport { useGlobalEventListener } from './useGlobalEventListener';\n\nexport const ENABLE_KEYBOARD_INPUT_EVENT_NAME = 'enableKeyboardInput';\nexport const DISABLE_KEYBOARD_INPUT_EVENT_NAME = 'disableKeyboardInput';\n\nexport function useKeyboardInputTracker(): boolean {\n  const { document } = useDOM();\n\n  const [isKeyboardInputActive, toggleKeyboardInput] = React.useState<boolean>(false);\n\n  const enableKeyboardInput = React.useCallback(() => {\n    toggleKeyboardInput(true);\n  }, []);\n\n  const handleKeydown = React.useCallback(\n    (e: KeyboardEvent) => {\n      if (pressedKey(e) === Keys.TAB) {\n        enableKeyboardInput();\n      }\n    },\n    [enableKeyboardInput],\n  );\n\n  const disableKeyboardInput = React.useCallback(() => {\n    toggleKeyboardInput(false);\n  }, []);\n\n  const eventOptions = {\n    passive: true,\n    capture: true,\n  };\n\n  useGlobalEventListener(document, 'keydown', handleKeydown, eventOptions);\n  useGlobalEventListener(document, 'mousedown', disableKeyboardInput, eventOptions);\n  useGlobalEventListener(document, 'touchstart', disableKeyboardInput, eventOptions);\n  useGlobalEventListener(\n    document,\n    ENABLE_KEYBOARD_INPUT_EVENT_NAME,\n    enableKeyboardInput,\n    eventOptions,\n  );\n  useGlobalEventListener(\n    document,\n    DISABLE_KEYBOARD_INPUT_EVENT_NAME,\n    disableKeyboardInput,\n    eventOptions,\n  );\n\n  return isKeyboardInputActive;\n}\n"]},"metadata":{},"sourceType":"module"}