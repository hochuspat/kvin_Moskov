{"ast":null,"code":"export var calcMin = function (param) {\n  var _param_containerWidth = param.containerWidth,\n      containerWidth = _param_containerWidth === void 0 ? 0 : _param_containerWidth,\n      _param_layerWidth = param.layerWidth,\n      layerWidth = _param_layerWidth === void 0 ? 0 : _param_layerWidth,\n      _param_slides = param.slides,\n      slides = _param_slides === void 0 ? [] : _param_slides,\n      _param_viewportOffsetWidth = param.viewportOffsetWidth,\n      viewportOffsetWidth = _param_viewportOffsetWidth === void 0 ? 0 : _param_viewportOffsetWidth,\n      align = param.align,\n      isCenterWithCustomWidth = param.isCenterWithCustomWidth;\n\n  switch (align) {\n    case \"left\":\n      return containerWidth - layerWidth;\n\n    case \"right\":\n      return viewportOffsetWidth - layerWidth;\n\n    case \"center\":\n      if (isCenterWithCustomWidth && slides.length) {\n        var _slides_ = slides[slides.length - 1],\n            coordX = _slides_.coordX,\n            width = _slides_.width;\n        return viewportOffsetWidth / 2 - coordX - width / 2;\n      } else {\n        return viewportOffsetWidth - (containerWidth - viewportOffsetWidth) / 2 - layerWidth;\n      }\n\n  }\n\n  return undefined;\n};\nexport var calcMax = function (param) {\n  var _param_slides = param.slides,\n      slides = _param_slides === void 0 ? [] : _param_slides,\n      _param_viewportOffsetWidth = param.viewportOffsetWidth,\n      viewportOffsetWidth = _param_viewportOffsetWidth === void 0 ? 0 : _param_viewportOffsetWidth,\n      isCenterWithCustomWidth = param.isCenterWithCustomWidth;\n\n  if (isCenterWithCustomWidth && slides.length) {\n    var _slides_ = slides[0],\n        width = _slides_.width,\n        coordX = _slides_.coordX;\n    return viewportOffsetWidth / 2 - coordX - width / 2;\n  }\n\n  return 0;\n};","map":{"version":3,"mappings":"AAQA,OAAO,IAAMA,UAAU;oCACrBC;MAAAA,oDAAiB,CAAjBA,GAAiBC;MAAAC,0BACjBC;MAAAA,4CAAa,CAAbA,GAAaD;MAAAE,sBACbC;MAAAA,oCAAS,EAATA,GAAWD;MAAAE,mCACXC;MAAAA,8DAAsB,CAAtBA,GAAsBD;MACtBE;MACAC;;EAEA,QAAQD,KAAR;IACE,KAAK,MAAL;MACE,OAAOR,iBAAiBG,UAAxB;;IACF,KAAK,OAAL;MACE,OAAOI,sBAAsBJ,UAA7B;;IACF,KAAK,QAAL;MACE,IAAIM,2BAA2BJ,OAAOK,MAAtC,EAA8C;QAC5C,IAA0BL,iBAAM,CAACA,OAAOK,MAAPL,GAAgB,CAAjB,CAAhC;QAAA,IAAQM,SAAkBN,SAAlBM,MAAR;QAAA,IAAgBC,QAAUP,SAAVO,KAAhB;QACA,OAAOL,sBAAsB,CAAtBA,GAA0BI,MAA1BJ,GAAmCK,QAAQ,CAAlD;MACF,CAHA,MAGO;QACL,OAAOL,sBAAsB,CAACP,iBAAiBO,mBAAlB,IAAyC,CAA/DA,GAAmEJ,UAA1E;MACF;;EAXJ;;EAaA,OAAOU,SAAP;AACF,CAtBO;AA4BP,OAAO,IAAMC,UAAU;4BACrBT;MAAAA,oCAAS,EAATA,GAAWD;MAAAE,mCACXC;MAAAA,8DAAsB,CAAtBA,GAAsBD;MACtBG;;EAEA,IAAIA,2BAA2BJ,OAAOK,MAAtC,EAA8C;IAC5C,IAA0BL,iBAAM,CAAC,CAAD,CAAhC;IAAA,IAAQO,QAAkBP,SAAlBO,KAAR;IAAA,IAAeD,SAAWN,SAAXM,MAAf;IACA,OAAOJ,sBAAsB,CAAtBA,GAA0BI,MAA1BJ,GAAmCK,QAAQ,CAAlD;EACF;;EACA,OAAO,CAAP;AACF,CAVO","names":["calcMin","containerWidth","_param_containerWidth","_param_layerWidth","layerWidth","_param_slides","slides","_param_viewportOffsetWidth","viewportOffsetWidth","align","isCenterWithCustomWidth","length","coordX","width","undefined","calcMax"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\components\\BaseGallery\\helpers.ts"],"sourcesContent":["import { HasAlign } from '../../types';\nimport { LayoutState } from './types';\n\ninterface CalcMin extends Partial<LayoutState> {\n  isCenterWithCustomWidth: boolean;\n  align: HasAlign['align'];\n}\n\nexport const calcMin = ({\n  containerWidth = 0,\n  layerWidth = 0,\n  slides = [],\n  viewportOffsetWidth = 0,\n  align,\n  isCenterWithCustomWidth,\n}: CalcMin) => {\n  switch (align) {\n    case 'left':\n      return containerWidth - layerWidth;\n    case 'right':\n      return viewportOffsetWidth - layerWidth;\n    case 'center':\n      if (isCenterWithCustomWidth && slides.length) {\n        const { coordX, width } = slides[slides.length - 1];\n        return viewportOffsetWidth / 2 - coordX - width / 2;\n      } else {\n        return viewportOffsetWidth - (containerWidth - viewportOffsetWidth) / 2 - layerWidth;\n      }\n  }\n  return undefined;\n};\n\ninterface CalcMax extends Partial<LayoutState> {\n  isCenterWithCustomWidth: boolean;\n}\n\nexport const calcMax = ({\n  slides = [],\n  viewportOffsetWidth = 0,\n  isCenterWithCustomWidth,\n}: CalcMax) => {\n  if (isCenterWithCustomWidth && slides.length) {\n    const { width, coordX } = slides[0];\n    return viewportOffsetWidth / 2 - coordX - width / 2;\n  }\n  return 0;\n};\n"]},"metadata":{},"sourceType":"module"}