{"ast":null,"code":"/**\n * Добавляет к числу 0 в начале, если число меньше 10\n */\nexport function leadingZero(number) {\n  if (number >= 10) {\n    return String(number);\n  } else {\n    return \"0\" + String(number);\n  }\n}\n/**\n * Форматирует число, разбивая его на разряды\n */\n\nexport function formatNumber(number) {\n  var separator = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \" \",\n      decimalSeparator = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : \",\";\n  var numberParts = number.toString().split(\".\");\n  var result = [];\n\n  for (var i = numberParts[0].length - 3; i > -3; i -= 3) {\n    result.unshift(numberParts[0].slice(i > 0 ? i : 0, i + 3));\n  }\n\n  numberParts[0] = result.join(separator);\n  return numberParts.join(decimalSeparator);\n}","map":{"version":3,"mappings":"AAAA;;;AAGA,OAAO,SAASA,WAAT,CAAqBC,MAArB,EAAmC;EACxC,IAAIA,UAAU,EAAd,EAAkB;IAChB,OAAOC,OAAOD,MAAPC,CAAP;EACF,CAFA,MAEO;IACL,OAAO,MAAMA,OAAOD,MAAPC,CAAb;EACF;AACF;AAEA;;;;AAGA,OAAO,SAASC,YAAT,CAAsBF,MAAtB,EAAoC;MAAEG,6EAAY;MAAKC,oFAAmB;EAC/E,IAAMC,cAAcL,OAAOM,QAAPN,GAAkBO,KAAlBP,CAAwB,GAAxBA,CAApB;EACA,IAAMQ,SAAS,EAAf;;EAEA,KAAK,IAAIC,IAAIJ,WAAW,CAAC,CAAD,CAAXA,CAAeK,MAAfL,GAAwB,CAArC,EAAwCI,IAAI,CAAC,CAA7C,EAAgDA,KAAK,CAArD,EAAwD;IACtDD,OAAOG,OAAPH,CAAeH,WAAW,CAAC,CAAD,CAAXA,CAAeO,KAAfP,CAAqBI,IAAI,CAAJA,GAAQA,CAARA,GAAY,CAAjCJ,EAAoCI,IAAI,CAAxCJ,CAAfG;EACF;;EAEAH,WAAW,CAAC,CAAD,CAAXA,GAAiBG,OAAOK,IAAPL,CAAYL,SAAZK,CAAjBH;EACA,OAAOA,YAAYQ,IAAZR,CAAiBD,gBAAjBC,CAAP;AACF","names":["leadingZero","number","String","formatNumber","separator","decimalSeparator","numberParts","toString","split","result","i","length","unshift","slice","join"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkjs\\src\\numbers.ts"],"sourcesContent":["/**\n * Добавляет к числу 0 в начале, если число меньше 10\n */\nexport function leadingZero(number: number): string {\n  if (number >= 10) {\n    return String(number);\n  } else {\n    return '0' + String(number);\n  }\n}\n\n/**\n * Форматирует число, разбивая его на разряды\n */\nexport function formatNumber(number: number, separator = ' ', decimalSeparator = ','): string {\n  const numberParts = number.toString().split('.');\n  const result = [];\n\n  for (let i = numberParts[0].length - 3; i > -3; i -= 3) {\n    result.unshift(numberParts[0].slice(i > 0 ? i : 0, i + 3));\n  }\n\n  numberParts[0] = result.join(separator);\n  return numberParts.join(decimalSeparator);\n}\n"]},"metadata":{},"sourceType":"module"}