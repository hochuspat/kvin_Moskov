{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { Platform } from \"../../lib/platform\";\nimport { Button } from \"../Button/Button\";\nimport { Tappable } from \"../Tappable/Tappable\";\n\nvar AlertActionIos = function (_param) {\n  var mode = _param.mode,\n      restProps = _object_without_properties(_param, [\"mode\"]);\n\n  return /*#__PURE__*/React.createElement(Tappable, _object_spread({\n    Component: restProps.href ? \"a\" : \"button\",\n    className: classNames(\"vkuiAlert__action\", mode === \"destructive\" && \"vkuiAlert__action--mode-destructive\", mode === \"cancel\" && \"vkuiAlert__action--mode-cancel\")\n  }, restProps));\n};\n\nvar AlertActionBase = function (_param) {\n  var mode = _param.mode,\n      restProps = _object_without_properties(_param, [\"mode\"]);\n\n  var platform = usePlatform();\n  var buttonMode = \"tertiary\";\n\n  if (platform === Platform.VKCOM) {\n    buttonMode = mode === \"cancel\" ? \"secondary\" : \"primary\";\n  }\n\n  return /*#__PURE__*/React.createElement(Button, _object_spread({\n    className: classNames(\"vkuiAlert__button\", mode === \"cancel\" && \"vkuiAlert__button--mode-cancel\"),\n    mode: buttonMode,\n    size: \"m\"\n  }, restProps));\n};\n\nexport var AlertAction = function (props) {\n  var platform = usePlatform();\n\n  if (platform === Platform.IOS) {\n    return /*#__PURE__*/React.createElement(AlertActionIos, props);\n  }\n\n  return /*#__PURE__*/React.createElement(AlertActionBase, props);\n};","map":{"version":3,"mappings":";;AAAA,YAAYA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,SAASC,MAAT,QAAoC,kBAApC;AACA,SAASC,QAAT,QAAyB,sBAAzB;;AAWA,IAAMC,iBAAiB;MAAGC;MAASC,gDAATD,MAASC;;EACjC,oBACER,oBAACK,QAAD,EAACA;IACCI,WAAWD,UAAUE,IAAVF,GAAiB,GAAjBA,GAAuB,QADnCH;IAECM,WAAWV,gCAETM,SAAS,aAATA,IAAS,qCAFAN,EAGTM,SAAS,QAATA,IAAS,gCAHAN;EAFZI,GAOKG,SAPLH,CAAD,CADF;AAWF,CAZA;;AAcA,IAAMO,kBAAkB;MAAGL;MAASC,gDAATD,MAASC;;EAClC,IAAMK,WAAWX,aAAjB;EAEA,IAAIY,aAAkC,UAAtC;;EAEA,IAAID,aAAaV,SAASY,KAA1B,EAAiC;IAC/BD,aAAaP,SAAS,QAATA,GAAoB,WAApBA,GAAkC,SAA/CO;EACF;;EAEA,oBACEd,oBAACI,MAAD,EAACA;IACCO,WAAWV,gCAETM,SAAS,QAATA,IAAS,gCAFAN,CADZG;IAKCG,MAAMO,UALPV;IAMCY,MAAK;EANNZ,GAOKI,SAPLJ,CAAD,CADF;AAWF,CApBA;;AAsBA,OAAO,IAAMa,cAAc,UAACC,KAAD,EAACA;EAC1B,IAAML,WAAWX,aAAjB;;EAEA,IAAIW,aAAaV,SAASgB,GAA1B,EAA+B;IAC7B,oBAAOnB,oBAACM,cAAD,EAAoBY,KAApB,CAAP;EACF;;EAEA,oBAAOlB,oBAACY,eAAD,EAAqBM,KAArB,CAAP;AACF,CARO","names":["React","classNames","usePlatform","Platform","Button","Tappable","AlertActionIos","mode","restProps","Component","href","className","AlertActionBase","platform","buttonMode","VKCOM","size","AlertAction","props","IOS"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\components\\Alert\\AlertAction.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { Platform } from '../../lib/platform';\nimport { AnchorHTMLAttributesOnly } from '../../types';\nimport { Button, ButtonProps } from '../Button/Button';\nimport { Tappable } from '../Tappable/Tappable';\nimport { AlertActionInterface } from './Alert';\nimport styles from './Alert.module.css';\n\nexport interface AlertActionProps\n  extends Pick<AlertActionInterface, 'Component' | 'mode'>,\n    AnchorHTMLAttributesOnly {\n  children: string;\n  onClick: React.MouseEventHandler<HTMLElement>;\n}\n\nconst AlertActionIos = ({ mode, ...restProps }: AlertActionProps) => {\n  return (\n    <Tappable\n      Component={restProps.href ? 'a' : 'button'}\n      className={classNames(\n        styles['Alert__action'],\n        mode === 'destructive' && styles['Alert__action--mode-destructive'],\n        mode === 'cancel' && styles['Alert__action--mode-cancel'],\n      )}\n      {...restProps}\n    />\n  );\n};\n\nconst AlertActionBase = ({ mode, ...restProps }: AlertActionProps) => {\n  const platform = usePlatform();\n\n  let buttonMode: ButtonProps['mode'] = 'tertiary';\n\n  if (platform === Platform.VKCOM) {\n    buttonMode = mode === 'cancel' ? 'secondary' : 'primary';\n  }\n\n  return (\n    <Button\n      className={classNames(\n        styles['Alert__button'],\n        mode === 'cancel' && styles['Alert__button--mode-cancel'],\n      )}\n      mode={buttonMode}\n      size=\"m\"\n      {...restProps}\n    />\n  );\n};\n\nexport const AlertAction = (props: AlertActionProps) => {\n  const platform = usePlatform();\n\n  if (platform === Platform.IOS) {\n    return <AlertActionIos {...props} />;\n  }\n\n  return <AlertActionBase {...props} />;\n};\n"]},"metadata":{},"sourceType":"module"}