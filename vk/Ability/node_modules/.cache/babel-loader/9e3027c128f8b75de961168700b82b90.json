{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport * as React from \"react\";\nimport { classNames, hasReactNode } from \"@vkontakte/vkjs\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { Platform } from \"../../lib/platform\";\nimport { RootComponent } from \"../RootComponent/RootComponent\";\nimport { Tappable } from \"../Tappable/Tappable\";\nimport { Footnote } from \"../Typography/Footnote/Footnote\";\nimport { Headline } from \"../Typography/Headline/Headline\";\nimport { Text } from \"../Typography/Text/Text\";\nvar platformClassNames = {\n  ios: \"vkuiPanelHeaderContent--ios\",\n  android: \"vkuiPanelHeaderContent--android\",\n  vkcom: \"vkuiPanelHeaderContent--vkcom\"\n};\n\nvar PanelHeaderChildren = function (param) {\n  var hasStatus = param.hasStatus,\n      hasBefore = param.hasBefore,\n      children = param.children;\n  var platform = usePlatform();\n\n  if (platform === Platform.VKCOM) {\n    return /*#__PURE__*/React.createElement(Text, {\n      className: \"vkuiPanelHeaderContent__childrenText\",\n      Component: \"div\",\n      weight: \"2\"\n    }, children);\n  }\n\n  return hasStatus || hasBefore ? /*#__PURE__*/React.createElement(Headline, {\n    className: \"vkuiPanelHeaderContent__childrenText\",\n    Component: \"div\",\n    weight: \"2\"\n  }, children) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiPanelHeaderContent__children-in\"\n  }, children);\n};\n/**\n * @see https://vkcom.github.io/VKUI/#/PanelHeaderContent\n */\n\n\nexport var PanelHeaderContent = function (_param) {\n  var aside = _param.aside,\n      status = _param.status,\n      before = _param.before,\n      children = _param.children,\n      onClick = _param.onClick,\n      restProps = _object_without_properties(_param, [\"aside\", \"status\", \"before\", \"children\", \"onClick\"]);\n\n  var InComponent = onClick ? Tappable : \"div\";\n  var rootProps = onClick ? {} : restProps;\n  var platform = usePlatform();\n  var inProps = onClick ? _object_spread_props(_object_spread({}, restProps), {\n    onClick: onClick,\n    activeEffectDelay: 200,\n    hasActive: platform === Platform.IOS,\n    activeMode: \"opacity\"\n  }) : {};\n  return /*#__PURE__*/React.createElement(RootComponent, _object_spread_props(_object_spread({}, rootProps), {\n    baseClassName: classNames(\"vkuiPanelHeaderContent\", platformClassNames.hasOwnProperty(platform) ? platformClassNames[platform] : platformClassNames.android)\n  }), hasReactNode(before) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiPanelHeaderContent__before\"\n  }, before), /*#__PURE__*/React.createElement(InComponent, _object_spread_props(_object_spread({}, inProps), {\n    className: classNames(\"vkuiPanelHeaderContent__in\", !before && platform !== Platform.ANDROID && \"vkuiPanelHeaderContent__in--centered\")\n  }), hasReactNode(status) && /*#__PURE__*/React.createElement(Footnote, {\n    className: \"vkuiPanelHeaderContent__status\"\n  }, status), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiPanelHeaderContent__children\"\n  }, /*#__PURE__*/React.createElement(PanelHeaderChildren, {\n    hasStatus: hasReactNode(status),\n    hasBefore: hasReactNode(before)\n  }, children), hasReactNode(aside) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiPanelHeaderContent__aside\"\n  }, aside)), hasReactNode(before) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiPanelHeaderContent__width\"\n  })));\n};","map":{"version":3,"mappings":"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","names":["React","classNames","hasReactNode","usePlatform","Platform","RootComponent","Tappable","Footnote","Headline","Text","platformClassNames","ios","android","vkcom","PanelHeaderChildren","hasStatus","hasBefore","children","platform","VKCOM","className","Component","weight","div","PanelHeaderContent","aside","status","before","onClick","restProps","InComponent","rootProps","inProps","_object_spread_props","activeEffectDelay","hasActive","IOS","activeMode","baseClassName","hasOwnProperty","ANDROID"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\components\\PanelHeaderContent\\PanelHeaderContent.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, hasReactNode } from '@vkontakte/vkjs';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { Platform } from '../../lib/platform';\nimport { HasChildren, HTMLAttributesWithRootRef } from '../../types';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport { Tappable } from '../Tappable/Tappable';\nimport { Footnote } from '../Typography/Footnote/Footnote';\nimport { Headline } from '../Typography/Headline/Headline';\nimport { Text } from '../Typography/Text/Text';\nimport styles from './PanelHeaderContent.module.css';\n\nconst platformClassNames = {\n  ios: styles['PanelHeaderContent--ios'],\n  android: styles['PanelHeaderContent--android'],\n  vkcom: styles['PanelHeaderContent--vkcom'],\n};\n\nexport interface PanelHeaderContentProps extends HTMLAttributesWithRootRef<HTMLDivElement> {\n  aside?: React.ReactNode;\n  before?: React.ReactNode;\n  status?: React.ReactNode;\n}\n\ninterface PanelHeaderChildrenProps extends HasChildren {\n  hasStatus: boolean;\n  hasBefore: boolean;\n}\n\nconst PanelHeaderChildren = ({ hasStatus, hasBefore, children }: PanelHeaderChildrenProps) => {\n  const platform = usePlatform();\n  if (platform === Platform.VKCOM) {\n    return (\n      <Text className={styles['PanelHeaderContent__childrenText']} Component=\"div\" weight=\"2\">\n        {children}\n      </Text>\n    );\n  }\n\n  return hasStatus || hasBefore ? (\n    <Headline className={styles['PanelHeaderContent__childrenText']} Component=\"div\" weight=\"2\">\n      {children}\n    </Headline>\n  ) : (\n    <div className={styles['PanelHeaderContent__children-in']}>{children}</div>\n  );\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/PanelHeaderContent\n */\nexport const PanelHeaderContent = ({\n  aside,\n  status,\n  before,\n  children,\n  onClick,\n  ...restProps\n}: PanelHeaderContentProps) => {\n  const InComponent = onClick ? Tappable : 'div';\n  const rootProps = onClick ? {} : restProps;\n  const platform = usePlatform();\n  const inProps = onClick\n    ? {\n        ...restProps,\n        onClick,\n        activeEffectDelay: 200,\n        hasActive: platform === Platform.IOS,\n        activeMode: 'opacity',\n      }\n    : {};\n\n  return (\n    <RootComponent\n      {...rootProps}\n      baseClassName={classNames(\n        styles['PanelHeaderContent'],\n        platformClassNames.hasOwnProperty(platform)\n          ? platformClassNames[platform]\n          : platformClassNames.android,\n      )}\n    >\n      {hasReactNode(before) && <div className={styles['PanelHeaderContent__before']}>{before}</div>}\n      <InComponent\n        {...inProps}\n        className={classNames(\n          styles['PanelHeaderContent__in'],\n          !before && platform !== Platform.ANDROID && styles['PanelHeaderContent__in--centered'],\n        )}\n      >\n        {hasReactNode(status) && (\n          <Footnote className={styles['PanelHeaderContent__status']}>{status}</Footnote>\n        )}\n        <div className={styles['PanelHeaderContent__children']}>\n          <PanelHeaderChildren hasStatus={hasReactNode(status)} hasBefore={hasReactNode(before)}>\n            {children}\n          </PanelHeaderChildren>\n          {hasReactNode(aside) && (\n            <div className={styles['PanelHeaderContent__aside']}>{aside}</div>\n          )}\n        </div>\n        {hasReactNode(before) && <div className={styles['PanelHeaderContent__width']} />}\n      </InComponent>\n    </RootComponent>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}