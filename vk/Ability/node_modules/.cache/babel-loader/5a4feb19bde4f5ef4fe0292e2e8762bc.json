{"ast":null,"code":"import { _ as _sliced_to_array } from \"@swc/helpers/_/_sliced_to_array\";\nimport { useCallback, useContext, useState } from \"react\";\nimport { AppRootContext } from \"../components/AppRoot/AppRootContext\";\nexport function useFocusVisible() {\n  var withKeyboardInputCheck = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;\n\n  var _useState = _sliced_to_array(useState(false), 2),\n      isFocused = _useState[0],\n      setIsFocused = _useState[1];\n\n  var keyboardInput = useContext(AppRootContext).keyboardInput;\n  var onFocus = useCallback(function (event) {\n    event.stopPropagation();\n    setIsFocused(true);\n  }, [setIsFocused]);\n  var onBlur = useCallback(function (event) {\n    event.stopPropagation();\n    setIsFocused(false);\n  }, [setIsFocused]);\n  var focusVisible = withKeyboardInputCheck ? keyboardInput && isFocused : isFocused;\n  return {\n    focusVisible: focusVisible,\n    onFocus: onFocus,\n    onBlur: onBlur\n  };\n}","map":{"version":3,"mappings":";AAAA,SAAqBA,WAArB,EAAkCC,UAAlC,EAA8CC,QAA9C,QAA8D,OAA9D;AACA,SAASC,cAAT,QAA+B,sCAA/B;AAEA,OAAO,SAASC,eAAT,GAASA;MAAgBC,0FAAyB;;EACvD,IAAkCH,sCAAS,KAATA,GAAS,CAATA,CAAlC;EAAA,IAAOI,YAA2BJ,YAAlC;EAAA,IAAkBK,eAAgBL,YAAlC;;EACA,IAAMM,aAAEA,GAAkBP,WAAWE,cAAXF,EAAlBO,aAAR;EAEA,IAAMC,UAAUT,YACd,UAACU,KAAD,EAACA;IACCA,MAAMC,eAAND;IACAH,aAAa,IAAbA;EACF,CAJcP,EAKd,CAACO,YAAD,CALcP,CAAhB;EAQA,IAAMY,SAASZ,YACb,UAACU,KAAD,EAACA;IACCA,MAAMC,eAAND;IACAH,aAAa,KAAbA;EACF,CAJaP,EAKb,CAACO,YAAD,CALaP,CAAf;EAQA,IAAMa,eAAeR,yBAAyBG,iBAAiBF,SAA1CD,GAAsDC,SAA3E;EAEA,OAAO;IACLO,0BADK;IAELJ,gBAFK;IAGLG;EAHK,CAAP;AAKF","names":["useCallback","useContext","useState","AppRootContext","useFocusVisible","withKeyboardInputCheck","isFocused","setIsFocused","keyboardInput","onFocus","event","stopPropagation","onBlur","focusVisible"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\hooks\\useFocusVisible.ts"],"sourcesContent":["import { FocusEvent, useCallback, useContext, useState } from 'react';\nimport { AppRootContext } from '../components/AppRoot/AppRootContext';\n\nexport function useFocusVisible(withKeyboardInputCheck = true) {\n  const [isFocused, setIsFocused] = useState(false);\n  const { keyboardInput } = useContext(AppRootContext);\n\n  const onFocus = useCallback(\n    (event: FocusEvent<HTMLElement>) => {\n      event.stopPropagation();\n      setIsFocused(true);\n    },\n    [setIsFocused],\n  );\n\n  const onBlur = useCallback(\n    (event: FocusEvent<HTMLElement>) => {\n      event.stopPropagation();\n      setIsFocused(false);\n    },\n    [setIsFocused],\n  );\n\n  const focusVisible = withKeyboardInputCheck ? keyboardInput && isFocused : isFocused;\n\n  return {\n    focusVisible,\n    onFocus,\n    onBlur,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}