{"ast":null,"code":"import { _ as _sliced_to_array } from \"@swc/helpers/_/_sliced_to_array\";\nimport * as React from \"react\";\nimport { noop } from \"@vkontakte/vkjs\";\nimport { clamp } from \"../../helpers/math\";\nimport { useDOM } from \"../../lib/dom\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\n\nvar clearDisableScrollStyle = function (node) {\n  Object.assign(node.style, {\n    position: \"\",\n    top: \"\",\n    left: \"\",\n    right: \"\",\n    overflowY: \"\",\n    overflowX: \"\"\n  });\n};\n\nvar getPageYOffsetWithoutKeyboardHeight = function (window) {\n  // Note: здесь расчёт на то, что `clientHeight` равен `window.innerHeight`.\n  //  Это достигается тем, что тегу `html` задали`height: 100%` и у него нет отступов сверху и снизу. Если есть отступы,\n  //  то надо задать `box-sizing: border-box`, чтобы они не учитывались.\n  var diffOfClientHeightAndViewportHeight = window.document.documentElement.clientHeight - window.innerHeight;\n  return window.pageYOffset - diffOfClientHeightAndViewportHeight;\n};\n\nexport var ScrollContext = /*#__PURE__*/React.createContext({\n  getScroll: function () {\n    return {\n      x: 0,\n      y: 0\n    };\n  },\n  scrollTo: noop,\n  isScrollLock: false,\n  enableScrollLock: noop,\n  disableScrollLock: noop\n});\nexport var useScroll = function () {\n  return React.useContext(ScrollContext);\n};\nexport var GlobalScrollController = function (param) {\n  var children = param.children;\n\n  var _useDOM = useDOM(),\n      window = _useDOM.window,\n      document = _useDOM.document;\n\n  var _React_useState = _sliced_to_array(React.useState(false), 2),\n      isScrollLock = _React_useState[0],\n      setScrollLock = _React_useState[1];\n\n  var beforeScrollLockFnSetRef = React.useRef(new Set());\n  var getScroll = React.useCallback(function () {\n    return {\n      x: window.pageXOffset,\n      y: getPageYOffsetWithoutKeyboardHeight(window)\n    };\n  }, [window]);\n  var scrollTo = React.useCallback(function () {\n    var x = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0,\n        y = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0; // Some iOS versions do not normalize scroll — do it manually.\n\n    window.scrollTo(x ? clamp(x, 0, document.body.scrollWidth - window.innerWidth) : 0, y ? clamp(y, 0, document.body.scrollHeight - window.innerHeight) : 0);\n  }, [document, window]);\n  var enableScrollLock = React.useCallback(function () {\n    beforeScrollLockFnSetRef.current.forEach(function (fn) {\n      fn();\n    });\n    var scrollY = window.pageYOffset;\n    var scrollX = window.pageXOffset;\n    var overflowY = window.innerWidth > document.documentElement.clientWidth ? \"scroll\" : \"\";\n    var overflowX = window.innerHeight > document.documentElement.clientHeight ? \"scroll\" : \"\";\n    Object.assign(document.body.style, {\n      position: \"fixed\",\n      top: \"-\".concat(scrollY, \"px\"),\n      left: \"-\".concat(scrollX, \"px\"),\n      right: \"0\",\n      overflowY: overflowY,\n      overflowX: overflowX\n    });\n    setScrollLock(true);\n  }, [document, window]);\n  var disableScrollLock = React.useCallback(function () {\n    var scrollY = document.body.style.top;\n    var scrollX = document.body.style.left;\n    clearDisableScrollStyle(document.body);\n    window.scrollTo(-parseInt(scrollX || \"0\"), -parseInt(scrollY || \"0\"));\n    setScrollLock(false);\n  }, [document, window]);\n  var scrollController = React.useMemo(function () {\n    return {\n      getScroll: getScroll,\n      scrollTo: scrollTo,\n      isScrollLock: isScrollLock,\n      disableScrollLock: disableScrollLock,\n      enableScrollLock: enableScrollLock,\n      beforeScrollLockFnSetRef: beforeScrollLockFnSetRef\n    };\n  }, [getScroll, scrollTo, isScrollLock, disableScrollLock, enableScrollLock]);\n  return /*#__PURE__*/React.createElement(ScrollContext.Provider, {\n    value: scrollController\n  }, children);\n};\nexport var ElementScrollController = function (param) {\n  var elRef = param.elRef,\n      children = param.children;\n\n  var _React_useState = _sliced_to_array(React.useState(false), 2),\n      isScrollLock = _React_useState[0],\n      setScrollLock = _React_useState[1];\n\n  var beforeScrollLockFnSetRef = React.useRef(new Set());\n  var getScroll = React.useCallback(function () {\n    var _elRef_current, _elRef_current1;\n\n    var _elRef_current_scrollLeft, _elRef_current_scrollTop;\n\n    return {\n      x: (_elRef_current_scrollLeft = (_elRef_current = elRef.current) === null || _elRef_current === void 0 ? void 0 : _elRef_current.scrollLeft) !== null && _elRef_current_scrollLeft !== void 0 ? _elRef_current_scrollLeft : 0,\n      y: (_elRef_current_scrollTop = (_elRef_current1 = elRef.current) === null || _elRef_current1 === void 0 ? void 0 : _elRef_current1.scrollTop) !== null && _elRef_current_scrollTop !== void 0 ? _elRef_current_scrollTop : 0\n    };\n  }, [elRef]);\n  var scrollTo = React.useCallback(function () {\n    var x = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0,\n        y = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;\n    var el = elRef.current; // Some iOS versions do not normalize scroll — do it manually.\n\n    el === null || el === void 0 ? void 0 : el.scrollTo(x ? clamp(x, 0, el.scrollWidth - el.clientWidth) : 0, y ? clamp(y, 0, el.scrollHeight - el.clientHeight) : 0);\n  }, [elRef]);\n  var enableScrollLock = React.useCallback(function () {\n    var el = elRef.current;\n\n    if (!el) {\n      return;\n    }\n\n    beforeScrollLockFnSetRef.current.forEach(function (fn) {\n      fn();\n    });\n    var scrollY = el.scrollTop;\n    var scrollX = el.scrollLeft;\n    var overflowY = el.scrollWidth > el.clientWidth ? \"scroll\" : \"\";\n    var overflowX = el.scrollHeight > el.clientHeight ? \"scroll\" : \"\";\n    Object.assign(el.style, {\n      position: \"absolute\",\n      top: \"-\".concat(scrollY, \"px\"),\n      left: \"-\".concat(scrollX, \"px\"),\n      right: \"0\",\n      overflowY: overflowY,\n      overflowX: overflowX\n    });\n    setScrollLock(true);\n  }, [elRef]);\n  var disableScrollLock = React.useCallback(function () {\n    var el = elRef.current;\n\n    if (!el) {\n      return;\n    }\n\n    var scrollY = el.style.top;\n    var scrollX = el.style.left;\n    clearDisableScrollStyle(el);\n    el.scrollTo(-parseInt(scrollX || \"0\"), -parseInt(scrollY || \"0\"));\n    setScrollLock(false);\n  }, [elRef]);\n  var scrollController = React.useMemo(function () {\n    return {\n      getScroll: getScroll,\n      scrollTo: scrollTo,\n      isScrollLock: isScrollLock,\n      disableScrollLock: disableScrollLock,\n      enableScrollLock: enableScrollLock,\n      beforeScrollLockFnSetRef: beforeScrollLockFnSetRef\n    };\n  }, [getScroll, scrollTo, isScrollLock, disableScrollLock, enableScrollLock]);\n  return /*#__PURE__*/React.createElement(ScrollContext.Provider, {\n    value: scrollController\n  }, children);\n};\n/**\n * Вызывает функцию effect, до блокировки прокрутки\n * @param effect функция, которая может возвращать функцию очистки\n * @param deps effect обновится только при изменении значений в списке.\n */\n\nexport var useScrollLockEffect = function (effect, deps) {\n  var destructorRef = React.useRef(noop);\n\n  var _useScroll = useScroll(),\n      isScrollLock = _useScroll.isScrollLock,\n      beforeScrollLockFnSetRef = _useScroll.beforeScrollLockFnSetRef; // Изменяем effectCallback только при изменении deps\n\n\n  var effectCallback = React.useCallback(function () {\n    destructorRef.current = effect(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps); // Добавляем effectCallback в список функций, которые необходимо вызвать\n  // до блокировки\n\n  React.useEffect(function () {\n    var beforeSet = beforeScrollLockFnSetRef === null || beforeScrollLockFnSetRef === void 0 ? void 0 : beforeScrollLockFnSetRef.current;\n\n    if (!beforeSet) {\n      return noop;\n    }\n\n    beforeSet.add(effectCallback);\n    return function () {\n      beforeSet.delete(effectCallback);\n    };\n  }, [beforeScrollLockFnSetRef, effectCallback]); // Вызываем сбрасывающую функцию, после отключения блокировки\n\n  React.useEffect(function () {\n    if (!isScrollLock && destructorRef.current) {\n      destructorRef.current();\n    }\n  }, [isScrollLock]);\n};\nexport var useScrollLock = function () {\n  var enabled = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;\n\n  var _useScroll = useScroll(),\n      enableScrollLock = _useScroll.enableScrollLock,\n      disableScrollLock = _useScroll.disableScrollLock;\n\n  useIsomorphicLayoutEffect(function () {\n    if (enabled) {\n      enableScrollLock();\n      return disableScrollLock;\n    }\n\n    return noop;\n  }, [enableScrollLock, disableScrollLock, enabled]);\n};","map":{"version":3,"mappings":"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","names":["React","noop","clamp","useDOM","useIsomorphicLayoutEffect","clearDisableScrollStyle","node","Object","assign","style","position","top","left","right","overflowY","overflowX","getPageYOffsetWithoutKeyboardHeight","window","diffOfClientHeightAndViewportHeight","document","documentElement","clientHeight","innerHeight","pageYOffset","ScrollContext","createContext","getScroll","x","y","scrollTo","isScrollLock","enableScrollLock","disableScrollLock","useScroll","useContext","GlobalScrollController","children","useState","setScrollLock","beforeScrollLockFnSetRef","useRef","Set","useCallback","pageXOffset","body","scrollWidth","innerWidth","scrollHeight","current","forEach","fn","scrollY","scrollX","clientWidth","concat","parseInt","scrollController","useMemo","Provider","value","ElementScrollController","elRef","scrollLeft","scrollTop","el","useScrollLockEffect","effect","deps","destructorRef","effectCallback","useEffect","beforeSet","add","delete","useScrollLock","enabled"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\components\\AppRoot\\ScrollContext.tsx"],"sourcesContent":["import * as React from 'react';\nimport { noop } from '@vkontakte/vkjs';\nimport { clamp } from '../../helpers/math';\nimport { useDOM } from '../../lib/dom';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { HasChildren } from '../../types';\n\nconst clearDisableScrollStyle = (node: HTMLElement) => {\n  Object.assign(node.style, {\n    position: '',\n    top: '',\n    left: '',\n    right: '',\n    overflowY: '',\n    overflowX: '',\n  });\n};\n\nconst getPageYOffsetWithoutKeyboardHeight = (window: Window) => {\n  // Note: здесь расчёт на то, что `clientHeight` равен `window.innerHeight`.\n  //  Это достигается тем, что тегу `html` задали`height: 100%` и у него нет отступов сверху и снизу. Если есть отступы,\n  //  то надо задать `box-sizing: border-box`, чтобы они не учитывались.\n  const diffOfClientHeightAndViewportHeight =\n    window.document.documentElement.clientHeight - window.innerHeight;\n  return window.pageYOffset - diffOfClientHeightAndViewportHeight;\n};\n\nexport interface ScrollContextInterface {\n  getScroll(this: void): { x: number; y: number };\n  scrollTo(this: void, x?: number, y?: number): void;\n  isScrollLock: boolean;\n  enableScrollLock(this: void): void;\n  disableScrollLock(this: void): void;\n  beforeScrollLockFnSetRef?: React.RefObject<Set<() => void>>;\n}\n\nexport const ScrollContext = React.createContext<ScrollContextInterface>({\n  getScroll: () => ({ x: 0, y: 0 }),\n  scrollTo: noop,\n  isScrollLock: false,\n  enableScrollLock: noop,\n  disableScrollLock: noop,\n});\n\nexport const useScroll = () => React.useContext(ScrollContext);\n\nexport interface ScrollControllerProps extends HasChildren {\n  elRef: React.RefObject<HTMLElement>;\n}\n\nexport const GlobalScrollController = ({ children }: ScrollControllerProps) => {\n  const { window, document } = useDOM();\n  const [isScrollLock, setScrollLock] = React.useState(false);\n  const beforeScrollLockFnSetRef = React.useRef<Set<() => void>>(new Set());\n\n  const getScroll = React.useCallback<ScrollContextInterface['getScroll']>(\n    () => ({\n      x: window!.pageXOffset,\n      y: getPageYOffsetWithoutKeyboardHeight(window!),\n    }),\n    [window],\n  );\n  const scrollTo = React.useCallback<ScrollContextInterface['scrollTo']>(\n    (x = 0, y = 0) => {\n      // Some iOS versions do not normalize scroll — do it manually.\n      window!.scrollTo(\n        x ? clamp(x, 0, document!.body.scrollWidth - window!.innerWidth) : 0,\n        y ? clamp(y, 0, document!.body.scrollHeight - window!.innerHeight) : 0,\n      );\n    },\n    [document, window],\n  );\n\n  const enableScrollLock = React.useCallback<ScrollContextInterface['enableScrollLock']>(() => {\n    beforeScrollLockFnSetRef.current.forEach((fn) => {\n      fn();\n    });\n\n    const scrollY = window!.pageYOffset;\n    const scrollX = window!.pageXOffset;\n    const overflowY = window!.innerWidth > document!.documentElement.clientWidth ? 'scroll' : '';\n    const overflowX = window!.innerHeight > document!.documentElement.clientHeight ? 'scroll' : '';\n\n    Object.assign(document!.body.style, {\n      position: 'fixed',\n      top: `-${scrollY}px`,\n      left: `-${scrollX}px`,\n      right: '0',\n      overflowY,\n      overflowX,\n    });\n    setScrollLock(true);\n  }, [document, window]);\n\n  const disableScrollLock = React.useCallback<ScrollContextInterface['disableScrollLock']>(() => {\n    const scrollY = document!.body.style.top;\n    const scrollX = document!.body.style.left;\n\n    clearDisableScrollStyle(document!.body);\n    window!.scrollTo(-parseInt(scrollX || '0'), -parseInt(scrollY || '0'));\n    setScrollLock(false);\n  }, [document, window]);\n\n  const scrollController = React.useMemo<ScrollContextInterface>(\n    () => ({\n      getScroll,\n      scrollTo,\n      isScrollLock,\n      disableScrollLock,\n      enableScrollLock,\n\n      beforeScrollLockFnSetRef: beforeScrollLockFnSetRef,\n    }),\n    [getScroll, scrollTo, isScrollLock, disableScrollLock, enableScrollLock],\n  );\n\n  return <ScrollContext.Provider value={scrollController}>{children}</ScrollContext.Provider>;\n};\n\nexport const ElementScrollController = ({ elRef, children }: ScrollControllerProps) => {\n  const [isScrollLock, setScrollLock] = React.useState(false);\n  const beforeScrollLockFnSetRef = React.useRef<Set<() => void>>(new Set());\n\n  const getScroll = React.useCallback<ScrollContextInterface['getScroll']>(\n    () => ({\n      x: elRef.current?.scrollLeft ?? 0,\n      y: elRef.current?.scrollTop ?? 0,\n    }),\n    [elRef],\n  );\n  const scrollTo = React.useCallback<ScrollContextInterface['scrollTo']>(\n    (x = 0, y = 0) => {\n      const el = elRef.current;\n      // Some iOS versions do not normalize scroll — do it manually.\n      el?.scrollTo(\n        x ? clamp(x, 0, el.scrollWidth - el.clientWidth) : 0,\n        y ? clamp(y, 0, el.scrollHeight - el.clientHeight) : 0,\n      );\n    },\n    [elRef],\n  );\n\n  const enableScrollLock = React.useCallback<ScrollContextInterface['enableScrollLock']>(() => {\n    const el = elRef.current;\n    if (!el) {\n      return;\n    }\n    beforeScrollLockFnSetRef.current.forEach((fn) => {\n      fn();\n    });\n\n    const scrollY = el.scrollTop;\n    const scrollX = el.scrollLeft;\n    const overflowY = el.scrollWidth > el.clientWidth ? 'scroll' : '';\n    const overflowX = el.scrollHeight > el.clientHeight ? 'scroll' : '';\n\n    Object.assign(el.style, {\n      position: 'absolute',\n      top: `-${scrollY}px`,\n      left: `-${scrollX}px`,\n      right: '0',\n      overflowY,\n      overflowX,\n    });\n    setScrollLock(true);\n  }, [elRef]);\n\n  const disableScrollLock = React.useCallback<ScrollContextInterface['disableScrollLock']>(() => {\n    const el = elRef.current;\n    if (!el) {\n      return;\n    }\n\n    const scrollY = el.style.top;\n    const scrollX = el.style.left;\n\n    clearDisableScrollStyle(el);\n    el.scrollTo(-parseInt(scrollX || '0'), -parseInt(scrollY || '0'));\n    setScrollLock(false);\n  }, [elRef]);\n\n  const scrollController = React.useMemo<ScrollContextInterface>(\n    () => ({\n      getScroll,\n      scrollTo,\n      isScrollLock,\n      disableScrollLock,\n      enableScrollLock,\n      beforeScrollLockFnSetRef,\n    }),\n    [getScroll, scrollTo, isScrollLock, disableScrollLock, enableScrollLock],\n  );\n\n  return <ScrollContext.Provider value={scrollController}>{children}</ScrollContext.Provider>;\n};\n\n/**\n * Вызывает функцию effect, до блокировки прокрутки\n * @param effect функция, которая может возвращать функцию очистки\n * @param deps effect обновится только при изменении значений в списке.\n */\nexport const useScrollLockEffect = (effect: React.EffectCallback, deps: React.DependencyList) => {\n  const destructorRef = React.useRef<ReturnType<React.EffectCallback>>(noop);\n  const { isScrollLock, beforeScrollLockFnSetRef } = useScroll();\n\n  // Изменяем effectCallback только при изменении deps\n  const effectCallback = React.useCallback(() => {\n    destructorRef.current = effect();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n\n  // Добавляем effectCallback в список функций, которые необходимо вызвать\n  // до блокировки\n  React.useEffect(() => {\n    const beforeSet = beforeScrollLockFnSetRef?.current;\n    if (!beforeSet) {\n      return noop;\n    }\n\n    beforeSet.add(effectCallback);\n\n    return () => {\n      beforeSet.delete(effectCallback);\n    };\n  }, [beforeScrollLockFnSetRef, effectCallback]);\n\n  // Вызываем сбрасывающую функцию, после отключения блокировки\n  React.useEffect(() => {\n    if (!isScrollLock && destructorRef.current) {\n      destructorRef.current();\n    }\n  }, [isScrollLock]);\n};\n\nexport const useScrollLock = (enabled = true) => {\n  const { enableScrollLock, disableScrollLock } = useScroll();\n  useIsomorphicLayoutEffect(() => {\n    if (enabled) {\n      enableScrollLock();\n      return disableScrollLock;\n    }\n    return noop;\n  }, [enableScrollLock, disableScrollLock, enabled]);\n};\n"]},"metadata":{},"sourceType":"module"}