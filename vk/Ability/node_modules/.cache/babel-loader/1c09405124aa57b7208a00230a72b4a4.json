{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport * as React from \"react\";\nimport { Icon12Dropdown, Icon20ChevronLeftOutline, Icon20ChevronRightOutline } from \"@vkontakte/icons\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { SizeType } from \"../../lib/adaptivity\";\nimport { getMonths, getYears } from \"../../lib/calendar\";\nimport { addMonths, setMonth, setYear, subMonths } from \"../../lib/date\";\nimport { AdaptivityProvider } from \"../AdaptivityProvider/AdaptivityProvider\";\nimport { useConfigProvider } from \"../ConfigProvider/ConfigProviderContext\";\nimport { CustomSelect } from \"../CustomSelect/CustomSelect\";\nimport { RootComponent } from \"../RootComponent/RootComponent\";\nimport { Tappable } from \"../Tappable/Tappable\";\nimport { Paragraph } from \"../Typography/Paragraph/Paragraph\";\nexport var CalendarHeader = function (_param) {\n  var viewDate = _param.viewDate,\n      onChange = _param.onChange,\n      _param_prevMonth = _param.prevMonth,\n      prevMonth = _param_prevMonth === void 0 ? true : _param_prevMonth,\n      _param_nextMonth = _param.nextMonth,\n      nextMonth = _param_nextMonth === void 0 ? true : _param_nextMonth,\n      _param_disablePickers = _param.disablePickers,\n      disablePickers = _param_disablePickers === void 0 ? false : _param_disablePickers,\n      onNextMonth = _param.onNextMonth,\n      onPrevMonth = _param.onPrevMonth,\n      _param_prevMonthProps = _param.prevMonthProps,\n      prevMonthProps = _param_prevMonthProps === void 0 ? {} : _param_prevMonthProps,\n      _param_nextMonthProps = _param.nextMonthProps,\n      nextMonthProps = _param_nextMonthProps === void 0 ? {} : _param_nextMonthProps,\n      _param_prevMonthAriaLabel = _param.prevMonthAriaLabel,\n      prevMonthAriaLabel = _param_prevMonthAriaLabel === void 0 ? \"Предыдущий месяц\" : _param_prevMonthAriaLabel,\n      _param_nextMonthAriaLabel = _param.nextMonthAriaLabel,\n      nextMonthAriaLabel = _param_nextMonthAriaLabel === void 0 ? \"Следующий месяц\" : _param_nextMonthAriaLabel,\n      _param_changeMonthAriaLabel = _param.changeMonthAriaLabel,\n      changeMonthAriaLabel = _param_changeMonthAriaLabel === void 0 ? \"Изменить месяц\" : _param_changeMonthAriaLabel,\n      _param_changeYearAriaLabel = _param.changeYearAriaLabel,\n      changeYearAriaLabel = _param_changeYearAriaLabel === void 0 ? \"Изменить год\" : _param_changeYearAriaLabel,\n      _param_prevMonthIcon = _param.prevMonthIcon,\n      prevMonthIcon = _param_prevMonthIcon === void 0 ? /*#__PURE__*/React.createElement(Icon20ChevronLeftOutline, {\n    className: \"vkuiCalendarHeader__nav-icon--accent\",\n    width: 30,\n    height: 30\n  }) : _param_prevMonthIcon,\n      _param_nextMonthIcon = _param.nextMonthIcon,\n      nextMonthIcon = _param_nextMonthIcon === void 0 ? /*#__PURE__*/React.createElement(Icon20ChevronRightOutline, {\n    className: \"vkuiCalendarHeader__nav-icon--accent\",\n    width: 30,\n    height: 30\n  }) : _param_nextMonthIcon,\n      restProps = _object_without_properties(_param, [\"viewDate\", \"onChange\", \"prevMonth\", \"nextMonth\", \"disablePickers\", \"onNextMonth\", \"onPrevMonth\", \"prevMonthProps\", \"nextMonthProps\", \"prevMonthAriaLabel\", \"nextMonthAriaLabel\", \"changeMonthAriaLabel\", \"changeYearAriaLabel\", \"prevMonthIcon\", \"nextMonthIcon\"]);\n\n  var locale = useConfigProvider().locale;\n  var onMonthsChange = React.useCallback(function (event) {\n    return onChange(setMonth(viewDate, Number(event.target.value)));\n  }, [onChange, viewDate]);\n  var onYearChange = React.useCallback(function (event) {\n    return onChange(setYear(viewDate, Number(event.target.value)));\n  }, [onChange, viewDate]);\n  var months = React.useMemo(function () {\n    return getMonths(locale).map(function (param) {\n      var value = param.value,\n          label = param.label;\n      return {\n        value: value,\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"vkuiCalendarHeader__month\"\n        }, label)\n      };\n    });\n  }, [locale]);\n  var currentYear = viewDate.getFullYear();\n  var years = React.useMemo(function () {\n    return getYears(currentYear, 100);\n  }, [currentYear]);\n  var formatter = new Intl.DateTimeFormat(locale, {\n    year: \"numeric\",\n    month: \"long\"\n  });\n\n  var prevMonthClassName = prevMonthProps.className,\n      restPrevMonthProps = _object_without_properties(prevMonthProps, [\"className\"]);\n\n  var nextMonthClassName = nextMonthProps.className,\n      restNextMonthProps = _object_without_properties(nextMonthProps, [\"className\"]);\n\n  return /*#__PURE__*/React.createElement(RootComponent, _object_spread({\n    baseClassName: \"vkuiCalendarHeader\"\n  }, restProps), prevMonth && /*#__PURE__*/React.createElement(AdaptivityProvider, {\n    sizeX: SizeType.REGULAR\n  }, /*#__PURE__*/React.createElement(Tappable, _object_spread({\n    className: classNames(\"vkuiCalendarHeader__nav-icon\", \"vkuiCalendarHeader__nav-icon-prev\", prevMonthClassName),\n    onClick: onPrevMonth,\n    \"aria-label\": \"\".concat(prevMonthAriaLabel, \", \").concat(formatter.format(subMonths(viewDate, 1)))\n  }, restPrevMonthProps), prevMonthIcon)), disablePickers ? /*#__PURE__*/React.createElement(Paragraph, {\n    className: classNames(\"vkuiCalendarHeader__pickers\", \"vkuiInternalCalendarHeader__pickers\"),\n    weight: \"2\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"vkuiCalendarHeader__month\"\n  }, new Intl.DateTimeFormat(locale, {\n    month: \"long\"\n  }).format(viewDate)), \"\\xa0\", new Intl.DateTimeFormat(locale, {\n    year: \"numeric\"\n  }).format(viewDate)) : /*#__PURE__*/React.createElement(AdaptivityProvider, {\n    sizeY: SizeType.COMPACT\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(\"vkuiCalendarHeader__pickers\", \"vkuiInternalCalendarHeader__pickers\")\n  }, /*#__PURE__*/React.createElement(CustomSelect, {\n    className: classNames(\"vkuiCalendarHeader__picker\", \"vkuiInternalCalendarHeader__picker\"),\n    value: viewDate.getMonth(),\n    options: months,\n    dropdownOffsetDistance: 4,\n    fixDropdownWidth: false,\n    icon: /*#__PURE__*/React.createElement(Icon12Dropdown, null),\n    onChange: onMonthsChange,\n    forceDropdownPortal: false,\n    selectType: \"accent\",\n    \"aria-label\": changeMonthAriaLabel\n  }), /*#__PURE__*/React.createElement(CustomSelect, {\n    className: classNames(\"vkuiCalendarHeader__picker\", \"vkuiInternalCalendarHeader__picker\"),\n    value: viewDate.getFullYear(),\n    options: years,\n    dropdownOffsetDistance: 4,\n    fixDropdownWidth: false,\n    icon: /*#__PURE__*/React.createElement(Icon12Dropdown, null),\n    onChange: onYearChange,\n    forceDropdownPortal: false,\n    selectType: \"accent\",\n    \"aria-label\": changeYearAriaLabel\n  }))), nextMonth && /*#__PURE__*/React.createElement(AdaptivityProvider, {\n    sizeX: SizeType.REGULAR\n  }, /*#__PURE__*/React.createElement(Tappable, _object_spread({\n    className: classNames(\"vkuiCalendarHeader__nav-icon\", \"vkuiCalendarHeader__nav-icon-next\", nextMonthClassName),\n    onClick: onNextMonth,\n    \"aria-label\": \"\".concat(nextMonthAriaLabel, \", \").concat(formatter.format(addMonths(viewDate, 1)))\n  }, restNextMonthProps), nextMonthIcon)));\n};","map":{"version":3,"mappings":"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","names":["React","Icon12Dropdown","Icon20ChevronLeftOutline","Icon20ChevronRightOutline","classNames","SizeType","getMonths","getYears","addMonths","setMonth","setYear","subMonths","AdaptivityProvider","useConfigProvider","CustomSelect","RootComponent","Tappable","Paragraph","CalendarHeader","viewDate","onChange","prevMonth","_param_prevMonth","_param_nextMonth","nextMonth","_param_disablePickers","disablePickers","onNextMonth","onPrevMonth","prevMonthProps","_param_prevMonthProps","_param_nextMonthProps","nextMonthProps","_param_prevMonthAriaLabel","prevMonthAriaLabel","_param_nextMonthAriaLabel","nextMonthAriaLabel","_param_changeMonthAriaLabel","changeMonthAriaLabel","_param_changeYearAriaLabel","changeYearAriaLabel","_param_prevMonthIcon","prevMonthIcon","className","width","height","nextMonthIcon","restProps","locale","onMonthsChange","useCallback","event","Number","target","value","onYearChange","months","useMemo","map","label","span","currentYear","getFullYear","years","formatter","Intl","DateTimeFormat","year","month","prevMonthClassName","restPrevMonthProps","nextMonthClassName","restNextMonthProps","baseClassName","sizeX","REGULAR","onClick","aria-label","concat","format","weight","sizeY","COMPACT","div","getMonth","options","dropdownOffsetDistance","fixDropdownWidth","icon","forceDropdownPortal","selectType"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\components\\CalendarHeader\\CalendarHeader.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Icon12Dropdown,\n  Icon20ChevronLeftOutline,\n  Icon20ChevronRightOutline,\n} from '@vkontakte/icons';\nimport { classNames } from '@vkontakte/vkjs';\nimport { SizeType } from '../../lib/adaptivity';\nimport { getMonths, getYears } from '../../lib/calendar';\nimport { addMonths, setMonth, setYear, subMonths } from '../../lib/date';\nimport { HTMLAttributesWithRootRef } from '../../types';\nimport { AdaptivityProvider } from '../AdaptivityProvider/AdaptivityProvider';\nimport { useConfigProvider } from '../ConfigProvider/ConfigProviderContext';\nimport { CustomSelect } from '../CustomSelect/CustomSelect';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport { Tappable, TappableElementProps } from '../Tappable/Tappable';\nimport { Paragraph } from '../Typography/Paragraph/Paragraph';\nimport styles from './CalendarHeader.module.css';\n\ntype ArrowMonthProps = Omit<TappableElementProps, 'onClick' | 'aria-label'>;\n\nexport interface CalendarHeaderProps\n  extends Omit<HTMLAttributesWithRootRef<HTMLDivElement>, 'onChange'> {\n  viewDate: Date;\n  prevMonth?: boolean;\n  nextMonth?: boolean;\n  disablePickers?: boolean;\n  prevMonthAriaLabel?: string;\n  nextMonthAriaLabel?: string;\n  changeMonthAriaLabel?: string;\n  changeYearAriaLabel?: string;\n  prevMonthIcon?: React.ReactNode;\n  nextMonthIcon?: React.ReactNode;\n  prevMonthProps?: ArrowMonthProps;\n  nextMonthProps?: ArrowMonthProps;\n  onChange(viewDate: Date): void;\n  /**\n   * Нажатие на кнопку переключения на следующий месяц.\n   */\n  onNextMonth?(): void;\n  /**\n   * Нажатие на кнопку переключения на предыдущий месяц.\n   */\n  onPrevMonth?(): void;\n}\n\nexport const CalendarHeader = ({\n  viewDate,\n  onChange,\n  prevMonth = true,\n  nextMonth = true,\n  disablePickers = false,\n  onNextMonth,\n  onPrevMonth,\n  prevMonthProps = {},\n  nextMonthProps = {},\n  prevMonthAriaLabel = 'Предыдущий месяц',\n  nextMonthAriaLabel = 'Следующий месяц',\n  changeMonthAriaLabel = 'Изменить месяц',\n  changeYearAriaLabel = 'Изменить год',\n  prevMonthIcon = (\n    <Icon20ChevronLeftOutline\n      className={styles['CalendarHeader__nav-icon--accent']}\n      width={30}\n      height={30}\n    />\n  ),\n  nextMonthIcon = (\n    <Icon20ChevronRightOutline\n      className={styles['CalendarHeader__nav-icon--accent']}\n      width={30}\n      height={30}\n    />\n  ),\n  ...restProps\n}: CalendarHeaderProps) => {\n  const { locale } = useConfigProvider();\n  const onMonthsChange = React.useCallback(\n    (event: React.ChangeEvent<HTMLSelectElement>) =>\n      onChange(setMonth(viewDate, Number(event.target.value))),\n    [onChange, viewDate],\n  );\n  const onYearChange = React.useCallback(\n    (event: React.ChangeEvent<HTMLSelectElement>) =>\n      onChange(setYear(viewDate, Number(event.target.value))),\n    [onChange, viewDate],\n  );\n\n  const months = React.useMemo(\n    () =>\n      getMonths(locale).map(({ value, label }) => ({\n        value,\n        label: <span className={styles['CalendarHeader__month']}>{label}</span>,\n      })),\n    [locale],\n  );\n\n  const currentYear = viewDate.getFullYear();\n\n  const years = React.useMemo(() => getYears(currentYear, 100), [currentYear]);\n\n  const formatter = new Intl.DateTimeFormat(locale, {\n    year: 'numeric',\n    month: 'long',\n  });\n\n  const { className: prevMonthClassName, ...restPrevMonthProps } = prevMonthProps;\n  const { className: nextMonthClassName, ...restNextMonthProps } = nextMonthProps;\n\n  return (\n    <RootComponent baseClassName={styles['CalendarHeader']} {...restProps}>\n      {prevMonth && (\n        <AdaptivityProvider sizeX={SizeType.REGULAR}>\n          <Tappable\n            className={classNames(\n              styles['CalendarHeader__nav-icon'],\n              styles['CalendarHeader__nav-icon-prev'],\n              prevMonthClassName,\n            )}\n            onClick={onPrevMonth}\n            aria-label={`${prevMonthAriaLabel}, ${formatter.format(subMonths(viewDate, 1))}`}\n            {...restPrevMonthProps}\n          >\n            {prevMonthIcon}\n          </Tappable>\n        </AdaptivityProvider>\n      )}\n      {disablePickers ? (\n        <Paragraph\n          className={classNames(\n            styles['CalendarHeader__pickers'],\n            'vkuiInternalCalendarHeader__pickers',\n          )}\n          weight=\"2\"\n        >\n          <span className={styles['CalendarHeader__month']}>\n            {new Intl.DateTimeFormat(locale, {\n              month: 'long',\n            }).format(viewDate)}\n          </span>\n          &nbsp;\n          {new Intl.DateTimeFormat(locale, {\n            year: 'numeric',\n          }).format(viewDate)}\n        </Paragraph>\n      ) : (\n        <AdaptivityProvider sizeY={SizeType.COMPACT}>\n          <div\n            className={classNames(\n              styles['CalendarHeader__pickers'],\n              'vkuiInternalCalendarHeader__pickers',\n            )}\n          >\n            <CustomSelect\n              className={classNames(\n                styles['CalendarHeader__picker'],\n                'vkuiInternalCalendarHeader__picker',\n              )}\n              value={viewDate.getMonth()}\n              options={months}\n              dropdownOffsetDistance={4}\n              fixDropdownWidth={false}\n              icon={<Icon12Dropdown />}\n              onChange={onMonthsChange}\n              forceDropdownPortal={false}\n              selectType=\"accent\"\n              aria-label={changeMonthAriaLabel}\n            />\n            <CustomSelect\n              className={classNames(\n                styles['CalendarHeader__picker'],\n                'vkuiInternalCalendarHeader__picker',\n              )}\n              value={viewDate.getFullYear()}\n              options={years}\n              dropdownOffsetDistance={4}\n              fixDropdownWidth={false}\n              icon={<Icon12Dropdown />}\n              onChange={onYearChange}\n              forceDropdownPortal={false}\n              selectType=\"accent\"\n              aria-label={changeYearAriaLabel}\n            />\n          </div>\n        </AdaptivityProvider>\n      )}\n      {nextMonth && (\n        <AdaptivityProvider sizeX={SizeType.REGULAR}>\n          <Tappable\n            className={classNames(\n              styles['CalendarHeader__nav-icon'],\n              styles['CalendarHeader__nav-icon-next'],\n              nextMonthClassName,\n            )}\n            onClick={onNextMonth}\n            aria-label={`${nextMonthAriaLabel}, ${formatter.format(addMonths(viewDate, 1))}`}\n            {...restNextMonthProps}\n          >\n            {nextMonthIcon}\n          </Tappable>\n        </AdaptivityProvider>\n      )}\n    </RootComponent>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}