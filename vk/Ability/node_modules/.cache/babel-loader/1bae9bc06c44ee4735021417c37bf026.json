{"ast":null,"code":"import { _ as _sliced_to_array } from \"@swc/helpers/_/_sliced_to_array\";\nimport * as React from \"react\";\nimport { useDOM } from \"../lib/dom\";\nimport { useIsomorphicLayoutEffect } from \"../lib/useIsomorphicLayoutEffect\";\n/**\n * Определяет направление текста элемента.\n *\n * ## Ограничения\n *\n * - Не следит за изменением направлением.\n * - Определяется только на второй рендер.\n *\n * ## Пример\n *\n * ```jsx\n * import { strict as assert } from 'node:assert';\n *\n * const Component = () => {\n *   const [ref, direction, writingMode] = useDirection();\n *\n *   React.useEffect(()=>{\n *     if (!direction || !writingMode) {\n *       return\n *     }\n *\n *     assert.equal(direction, 'ltr')\n *     assert.equal(writingMode, 'vertical-rl')\n *   }, [direction, writingMode])\n *\n *   return <div ref={ref} style={{writingMode: 'vertical-rl'}}>我家没有电脑。</div>\n * }\n * ```\n */\n\nexport function useDirection() {\n  var ref = React.useRef(null);\n\n  var _React_useState = _sliced_to_array(React.useState(undefined), 2),\n      direction = _React_useState[0],\n      setDirection = _React_useState[1];\n\n  var _React_useState1 = _sliced_to_array(React.useState(undefined), 2),\n      writingMode = _React_useState1[0],\n      setWritingMode = _React_useState1[1];\n\n  var window = useDOM().window;\n\n  var update = function () {\n    if (!window || !ref.current) {\n      return;\n    }\n\n    var styleDeclaration = window.getComputedStyle(ref.current);\n    setDirection(styleDeclaration.direction);\n    setWritingMode(styleDeclaration.writingMode);\n  };\n\n  useIsomorphicLayoutEffect(update, [window]);\n  return [ref, direction, writingMode];\n}","map":{"version":3,"mappings":";AAAA,YAAYA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,yBAAT,QAA0C,kCAA1C;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,OAAO,SAASC,YAAT,GAASA;EAKd,IAAMC,MAAMJ,MAAMK,MAANL,CAAgB,IAAhBA,CAAZ;;EAEA,IAAkCA,yCAAMM,QAANN,CAAsCO,SAAtCP,GAAsCO,CAAtCP,CAAlC;EAAA,IAAOQ,YAA2BR,kBAAlC;EAAA,IAAkBS,eAAgBT,kBAAlC;;EACA,IAAsCA,0CAAMM,QAANN,CAAwCO,SAAxCP,GAAwCO,CAAxCP,CAAtC;EAAA,IAAOU,cAA+BV,mBAAtC;EAAA,IAAoBW,iBAAkBX,mBAAtC;;EAEA,IAAMY,MAAEA,GAAWX,SAAXW,MAAR;;EAEA,IAAMC,SAAS;IACb,IAAI,CAACD,MAAD,IAAW,CAACR,IAAIU,OAApB,EAA6B;MAC3B;IACF;;IAEA,IAAMC,mBAAmBH,OAAOI,gBAAPJ,CAAwBR,IAAIU,OAA5BF,CAAzB;IAEAH,aAAaM,iBAAiBP,SAA9BC;IACAE,eAAeI,iBAAiBL,WAAhCC;EACF,CATA;;EAWAT,0BAA0BW,MAA1BX,EAAkC,CAACU,MAAD,CAAlCV;EAEA,OAAO,CAACE,GAAD,EAAMI,SAAN,EAAiBE,WAAjB,CAAP;AACF","names":["React","useDOM","useIsomorphicLayoutEffect","useDirection","ref","useRef","useState","undefined","direction","setDirection","writingMode","setWritingMode","window","update","current","styleDeclaration","getComputedStyle"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\hooks\\useDirection.ts"],"sourcesContent":["import * as React from 'react';\nimport { useDOM } from '../lib/dom';\nimport { useIsomorphicLayoutEffect } from '../lib/useIsomorphicLayoutEffect';\n\ntype Direction = 'ltr' | 'rtl';\ntype WritingMode = 'horizontal-tb' | 'vertical-rl' | 'vertical-lr';\n\n/**\n * Определяет направление текста элемента.\n *\n * ## Ограничения\n *\n * - Не следит за изменением направлением.\n * - Определяется только на второй рендер.\n *\n * ## Пример\n *\n * ```jsx\n * import { strict as assert } from 'node:assert';\n *\n * const Component = () => {\n *   const [ref, direction, writingMode] = useDirection();\n *\n *   React.useEffect(()=>{\n *     if (!direction || !writingMode) {\n *       return\n *     }\n *\n *     assert.equal(direction, 'ltr')\n *     assert.equal(writingMode, 'vertical-rl')\n *   }, [direction, writingMode])\n *\n *   return <div ref={ref} style={{writingMode: 'vertical-rl'}}>我家没有电脑。</div>\n * }\n * ```\n */\nexport function useDirection<T extends HTMLElement>(): [\n  React.RefObject<T>,\n  Direction | undefined,\n  WritingMode | undefined,\n] {\n  const ref = React.useRef<T>(null);\n\n  const [direction, setDirection] = React.useState<Direction | undefined>(undefined);\n  const [writingMode, setWritingMode] = React.useState<WritingMode | undefined>(undefined);\n\n  const { window } = useDOM();\n\n  const update = () => {\n    if (!window || !ref.current) {\n      return;\n    }\n\n    const styleDeclaration = window.getComputedStyle(ref.current);\n\n    setDirection(styleDeclaration.direction as Direction);\n    setWritingMode(styleDeclaration.writingMode as WritingMode);\n  };\n\n  useIsomorphicLayoutEffect(update, [window]);\n\n  return [ref, direction, writingMode];\n}\n"]},"metadata":{},"sourceType":"module"}