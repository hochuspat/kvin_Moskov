{"ast":null,"code":"import * as React from \"react\";\nimport { ConfigProviderOverride } from \"../components/ConfigProvider/ConfigProviderOverride\";\nimport { useObjectMemo } from \"../hooks/useObjectMemo\";\nimport { computeBrowserInfo } from \"./browser\";\nimport { DOMContext, getDOM } from \"./dom\";\nimport { platform as getPlatform } from \"./platform\";\n/**\n * @see https://vkcom.github.io/VKUI/#/SSR\n */\n\nexport var SSRWrapper = function (param) {\n  var userAgent = param.userAgent,\n      browserInfo = param.browserInfo,\n      children = param.children;\n\n  if (!browserInfo && userAgent) {\n    browserInfo = computeBrowserInfo(userAgent);\n  }\n\n  var dom = useObjectMemo(getDOM());\n  return /*#__PURE__*/React.createElement(ConfigProviderOverride, {\n    platform: getPlatform(browserInfo)\n  }, /*#__PURE__*/React.createElement(DOMContext.Provider, {\n    value: dom\n  }, children));\n};","map":{"version":3,"mappings":"AAAA,YAAYA,KAAZ,MAAuB,OAAvB;AACA,SAASC,sBAAT,QAAuC,qDAAvC;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAAsBC,kBAAtB,QAAgD,WAAhD;AACA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,OAAnC;AACA,SAASC,YAAYC,WAArB,QAAwC,YAAxC;AAQA;;;;AAGA,OAAO,IAAMC,aAAa;MAAGC;MAAWC;MAAaC;;EACnD,IAAI,CAACD,WAAD,IAAgBD,SAApB,EAA+B;IAC7BC,cAAcP,mBAAmBM,SAAnBN,CAAdO;EACF;;EAEA,IAAME,MAAMV,cAAcG,QAAdH,CAAZ;EAEA,oBACEF,oBAACC,sBAAD,EAACA;IAAuBK,UAAUC,YAAYG,WAAZH;EAAjCN,CAAD,eACED,oBAACI,WAAWS,QAAZ,EAAoB;IAACC,OAAOF;EAAR,CAApB,EAAkCD,QAAlC,CADF,CADF;AAKF,CAZO","names":["React","ConfigProviderOverride","useObjectMemo","computeBrowserInfo","DOMContext","getDOM","platform","getPlatform","SSRWrapper","userAgent","browserInfo","children","dom","Provider","value"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\lib\\SSR.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ConfigProviderOverride } from '../components/ConfigProvider/ConfigProviderOverride';\nimport { useObjectMemo } from '../hooks/useObjectMemo';\nimport { BrowserInfo, computeBrowserInfo } from './browser';\nimport { DOMContext, getDOM } from './dom';\nimport { platform as getPlatform } from './platform';\n\nexport interface SSRWrapperProps {\n  userAgent?: string;\n  browserInfo?: BrowserInfo;\n  children?: React.ReactNode;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/SSR\n */\nexport const SSRWrapper = ({ userAgent, browserInfo, children }: SSRWrapperProps) => {\n  if (!browserInfo && userAgent) {\n    browserInfo = computeBrowserInfo(userAgent);\n  }\n\n  const dom = useObjectMemo(getDOM());\n\n  return (\n    <ConfigProviderOverride platform={getPlatform(browserInfo)}>\n      <DOMContext.Provider value={dom}>{children}</DOMContext.Provider>\n    </ConfigProviderOverride>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}