{"ast":null,"code":"import { _ as _class_call_check } from \"@swc/helpers/_/_class_call_check\";\nimport { _ as _create_class } from \"@swc/helpers/_/_create_class\";\nimport { _ as _define_property } from \"@swc/helpers/_/_define_property\";\nimport { parse } from \"./utils/parse\";\nexport var BrowserSymbol = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function BrowserSymbol(param) {\n    var content = param.content;\n\n    _class_call_check(this, BrowserSymbol);\n\n    _define_property(this, \"isMounted\", false);\n\n    _define_property(this, \"node\", void 0);\n\n    this.node = parse(content);\n  }\n\n  _create_class(BrowserSymbol, [{\n    key: \"id\",\n    get: function get() {\n      return this.node.id;\n    }\n  }, {\n    key: \"mount\",\n    value: function mount(target) {\n      if (this.isMounted) {\n        return this.node;\n      }\n\n      this.isMounted = true;\n      target.appendChild(this.node);\n      return this.node;\n    }\n  }, {\n    key: \"unmount\",\n    value: function unmount() {\n      if (this.node && this.node.parentNode) {\n        this.node.parentNode.removeChild(this.node);\n        this.isMounted = false;\n      }\n    }\n  }], [{\n    key: \"createFromExistingNode\",\n    value: function createFromExistingNode(node) {\n      var symbol = new BrowserSymbol({\n        content: \"\"\n      });\n      symbol.node = node;\n      return symbol;\n    }\n  }]);\n\n  return BrowserSymbol;\n}();","map":{"version":3,"mappings":";;;AAAA,SAASA,KAAT,QAAsB,eAAtB;AAMA,OAAO,iBAAMC,gBAAN;;;WAAMA,cAICC,OAA+B;QAA/BC,OAAEA,GAAFD,MAAEC;;4BAJHF;;IACXG,uBAAUC,WAAV,EAA+B,KAA/B;;IACAC;;IAGE,KAAKA,IAAL,GAAYN,MAAMG,OAANH,CAAZ;;;gBALSC;IAQPM;SAAJ;MACE,OAAO,KAAKD,IAAL,CAAUC,EAAjB;IACF;GAVWN;IAqBXO;WAAAA,eAAMC,MAAND,EAAkB;MAChB,IAAI,KAAKH,SAAT,EAAoB;QAClB,OAAO,KAAKC,IAAZ;MACF;;MAEA,KAAKD,SAAL,GAAiB,IAAjB;MAEAI,OAAOC,WAAPD,CAAmB,KAAKH,IAAxBG;MAEA,OAAO,KAAKH,IAAZ;IACF;GA/BWL;IAiCXU;WAAAA;MACE,IAAI,KAAKL,IAAL,IAAa,KAAKA,IAAL,CAAUM,UAA3B,EAAuC;QACrC,KAAKN,IAAL,CAAUM,UAAV,CAAqBC,WAArB,CAAiC,KAAKP,IAAtC;QACA,KAAKD,SAAL,GAAiB,KAAjB;MACF;IACF;GAtCWJ;IAYJa;WAAP,SAAOA,sBAAP,CAA8BR,IAA9B,EAA2C;MACzC,IAAMS,SAAS,IAbNd,aAaM,CAAkB;QAC/BE,SAAS;MADsB,CAAlB,CAAf;MAGAY,OAAOT,IAAPS,GAAcT,IAAdS;MAEA,OAAOA,MAAP;IACF;;;SAnBWd;CAAN","names":["parse","BrowserSymbol","param","content","_define_property","isMounted","node","id","mount","target","appendChild","unmount","parentNode","removeChild","createFromExistingNode","symbol"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\icons-sprite\\src\\browser-symbol.ts"],"sourcesContent":["import { parse } from './utils/parse';\n\ninterface SpriteSymbolOption {\n  content: string;\n}\n\nexport class BrowserSymbol {\n  protected isMounted: boolean = false;\n  node: Element;\n\n  constructor({ content }: SpriteSymbolOption) {\n    this.node = parse(content);\n  }\n\n  get id(): string {\n    return this.node.id;\n  }\n\n  static createFromExistingNode(node: Element): BrowserSymbol {\n    const symbol = new BrowserSymbol({\n      content: '',\n    });\n    symbol.node = node;\n\n    return symbol;\n  }\n\n  mount(target: Node) {\n    if (this.isMounted) {\n      return this.node;\n    }\n\n    this.isMounted = true;\n\n    target.appendChild(this.node);\n\n    return this.node;\n  }\n\n  unmount() {\n    if (this.node && this.node.parentNode) {\n      this.node.parentNode.removeChild(this.node);\n      this.isMounted = false;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}