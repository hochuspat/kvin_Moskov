{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { useFocusVisible } from \"../../../hooks/useFocusVisible\";\nimport { callMultiple } from \"../../../lib/callMultiple\";\nimport { FocusVisible } from \"../../FocusVisible/FocusVisible\";\nimport { Headline } from \"../../Typography/Headline/Headline\";\nimport { VisuallyHidden } from \"../../VisuallyHidden/VisuallyHidden\";\n/**\n * @see https://vkcom.github.io/VKUI/#/SegmentedControl\n */\n\nexport var SegmentedControlOption = function (_param) {\n  var getRef = _param.getRef,\n      className = _param.className,\n      style = _param.style,\n      children = _param.children,\n      getRootRef = _param.getRootRef,\n      restProps = _object_without_properties(_param, [\"getRef\", \"className\", \"style\", \"children\", \"getRootRef\"]);\n\n  var _useFocusVisible = useFocusVisible(),\n      focusVisible = _useFocusVisible.focusVisible,\n      onBlur = _useFocusVisible.onBlur,\n      onFocus = _useFocusVisible.onFocus;\n\n  return /*#__PURE__*/React.createElement(\"label\", {\n    className: classNames(\"vkuiSegmentedControlOption\", restProps.checked && \"vkuiSegmentedControlOption--checked\", className),\n    ref: getRootRef,\n    style: style\n  }, /*#__PURE__*/React.createElement(VisuallyHidden, _object_spread_props(_object_spread({}, restProps), {\n    Component: \"input\",\n    getRootRef: getRef,\n    type: \"radio\",\n    onBlur: callMultiple(onBlur, restProps.onBlur),\n    onFocus: callMultiple(onFocus, restProps.onFocus)\n  })), /*#__PURE__*/React.createElement(Headline, {\n    className: \"vkuiSegmentedControlOption__content\",\n    level: \"2\",\n    weight: \"2\"\n  }, children), /*#__PURE__*/React.createElement(FocusVisible, {\n    visible: focusVisible,\n    mode: \"inside\"\n  }));\n};","map":{"version":3,"mappings":";;;AAAA,YAAYA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,YAAT,QAA6B,2BAA7B;AAEA,SAASC,YAAT,QAA6B,iCAA7B;AACA,SAASC,QAAT,QAAyB,oCAAzB;AACA,SAASC,cAAT,QAA+B,qCAA/B;AAQA;;;;AAGA,OAAO,IAAMC,yBAAyB;MACpCC;MACAC;MACAC;MACAC;MACAC;MACGC,gDALHL,QAKGK,EAJHJ,WAIGI,EAHHH,OAGGG,EAFHF,UAEGE,EADHD,YACGC;;EAEH,IAA0CX,oCAA1C;EAAA,IAAQY,eAAkCZ,iBAAlCY,YAAR;EAAA,IAAsBC,SAAoBb,iBAApBa,MAAtB;EAAA,IAA8BC,UAAYd,iBAAZc,OAA9B;;EAEA,oBACEhB,oBAACiB,OAAD,EAACA;IACCR,WAAWR,yCAETY,UAAUK,OAAVL,IAAiB,qCAFRZ,EAGTQ,SAHSR,CADZgB;IAMCE,KAAKP,UANNK;IAOCP,OAAOA;EAPRO,CAAD,eASEjB,oBAACM,cAAD,EAACA,wCACKO,SADLP,GACKO;IACJO,WAAU,OADNP;IAEJD,YAAYJ,MAFRK;IAGJQ,MAAK,OAHDR;IAIJE,QAAQZ,aAAaY,MAAbZ,EAAqBU,UAAUE,MAA/BZ,CAJJU;IAKJG,SAASb,aAAaa,OAAbb,EAAsBU,UAAUG,OAAhCb;EALLU,CADLP,CAAD,CATF,eAiBEN,oBAACK,QAAD,EAACA;IAASI,SAAS,uCAAlBJ;IAA+DiB,OAAM,GAArEjB;IAAyEkB,QAAO;EAAhFlB,CAAD,EACGM,QADH,CAjBF,EAkBKA,aAEHX,oBAACI,YAAD,EAACA;IAAaoB,SAASV,YAAtBV;IAAoCqB,MAAK;EAAzCrB,CAAD,CApBF,CADF;AAwBF,CAlCO","names":["React","classNames","useFocusVisible","callMultiple","FocusVisible","Headline","VisuallyHidden","SegmentedControlOption","getRef","className","style","children","getRootRef","restProps","focusVisible","onBlur","onFocus","label","checked","ref","Component","type","level","weight","visible","mode"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\components\\SegmentedControl\\SegmentedControlOption\\SegmentedControlOption.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useFocusVisible } from '../../../hooks/useFocusVisible';\nimport { callMultiple } from '../../../lib/callMultiple';\nimport { HasRef, HasRootRef } from '../../../types';\nimport { FocusVisible } from '../../FocusVisible/FocusVisible';\nimport { Headline } from '../../Typography/Headline/Headline';\nimport { VisuallyHidden } from '../../VisuallyHidden/VisuallyHidden';\nimport styles from './SegmentedControlOption.module.css';\n\nexport interface SegmentedControlOptionProps\n  extends React.InputHTMLAttributes<HTMLInputElement>,\n    HasRootRef<HTMLLabelElement>,\n    HasRef<HTMLInputElement> {}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/SegmentedControl\n */\nexport const SegmentedControlOption = ({\n  getRef,\n  className,\n  style,\n  children,\n  getRootRef,\n  ...restProps\n}: SegmentedControlOptionProps) => {\n  const { focusVisible, onBlur, onFocus } = useFocusVisible();\n\n  return (\n    <label\n      className={classNames(\n        styles['SegmentedControlOption'],\n        restProps.checked && styles['SegmentedControlOption--checked'],\n        className,\n      )}\n      ref={getRootRef}\n      style={style}\n    >\n      <VisuallyHidden\n        {...restProps}\n        Component=\"input\"\n        getRootRef={getRef}\n        type=\"radio\"\n        onBlur={callMultiple(onBlur, restProps.onBlur)}\n        onFocus={callMultiple(onFocus, restProps.onFocus)}\n      />\n      <Headline className={styles['SegmentedControlOption__content']} level=\"2\" weight=\"2\">\n        {children}\n      </Headline>\n      <FocusVisible visible={focusVisible} mode=\"inside\" />\n    </label>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}