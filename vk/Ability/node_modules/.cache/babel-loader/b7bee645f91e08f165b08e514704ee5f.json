{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { DefaultIcon } from \"../PopperArrow/DefaultIcon\";\nimport { PopperArrow } from \"../PopperArrow/PopperArrow\";\nimport { RootComponent } from \"../RootComponent/RootComponent\";\nimport { Subhead } from \"../Typography/Subhead/Subhead\";\nexport var TOOLTIP_MAX_WIDTH = 220;\nvar stylesAppearance = {\n  accent: \"vkuiTooltipBase--appearance-accent\",\n  white: \"vkuiTooltipBase--appearance-white\",\n  black: \"vkuiTooltipBase--appearance-black\",\n  inversion: \"vkuiTooltipBase--appearance-inversion\"\n};\n/**\n * Низкоуровневый компонент для отрисовки тултипа.\n * Примеры использования и Readme можно найти в документации Tooltip\n * @see https://vkcom.github.io/VKUI/#/Tooltip\n */\n\nexport var TooltipBase = function (_param) {\n  var _param_appearance = _param.appearance,\n      appearance = _param_appearance === void 0 ? \"accent\" : _param_appearance,\n      _param_withArrow = _param.withArrow,\n      withArrow = _param_withArrow === void 0 ? true : _param_withArrow,\n      arrowCoords = _param.arrowCoords,\n      _param_arrowPlacement = _param.arrowPlacement,\n      arrowPlacement = _param_arrowPlacement === void 0 ? \"top\" : _param_arrowPlacement,\n      getArrowRef = _param.getArrowRef,\n      getRootRef = _param.getRootRef,\n      floatingStyle = _param.floatingStyle,\n      _param_ArrowIcon = _param.ArrowIcon,\n      ArrowIcon = _param_ArrowIcon === void 0 ? DefaultIcon : _param_ArrowIcon,\n      text = _param.text,\n      header = _param.header,\n      _param_maxWidth = _param.maxWidth,\n      maxWidth = _param_maxWidth === void 0 ? TOOLTIP_MAX_WIDTH : _param_maxWidth,\n      restProps = _object_without_properties(_param, [\"appearance\", \"withArrow\", \"arrowCoords\", \"arrowPlacement\", \"getArrowRef\", \"getRootRef\", \"floatingStyle\", \"ArrowIcon\", \"text\", \"header\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(RootComponent, _object_spread_props(_object_spread({}, restProps), {\n    baseClassName: classNames(\"vkuiTooltipBase\", appearance !== \"neutral\" && stylesAppearance[appearance])\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    ref: getRootRef,\n    style: floatingStyle\n  }, withArrow && /*#__PURE__*/React.createElement(PopperArrow, {\n    coords: arrowCoords,\n    placement: arrowPlacement,\n    arrowClassName: \"vkuiTooltipBase__arrow\",\n    getRootRef: getArrowRef,\n    Icon: ArrowIcon\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiTooltipBase__content\",\n    style: maxWidth !== null ? {\n      maxWidth: maxWidth\n    } : undefined\n  }, header && /*#__PURE__*/React.createElement(Subhead, {\n    weight: \"2\"\n  }, header), text && /*#__PURE__*/React.createElement(Subhead, null, text))));\n};","map":{"version":3,"mappings":";;;AAAA,YAAYA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AAEA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,WAAT,QAAmD,4BAAnD;AACA,SAASC,aAAT,QAA8B,gCAA9B;AACA,SAASC,OAAT,QAAwB,+BAAxB;AAGA,OAAO,IAAMC,oBAAoB,GAA1B;AAEP,IAAMC,mBAAmB;EACvBC,MAAM,sCADiB;EAEvBC,KAAK,qCAFkB;EAGvBC,KAAK,qCAHkB;EAIvBC,SAAS;AAJc,CAAzB;AAsDA;;;;;;AAKA,OAAO,IAAMC,cAAc;iCACzBC;MAAAA,4CAAa,QAAbA,GAAaC;MAAAC,0BACbC;MAAAA,0CAAY,IAAZA,GAAYD;MACZE;MAAAA,+BACAC;MAAAA,oDAAiB,KAAjBA,GAAiBC;MACjBC;MACAC;MACAC;MAAAA,0BACAC;MAAAA,0CAAYrB,WAAZqB,GAAYrB;MACZsB;MACAC;MAAAA,yBACAC;MAAAA,wCAAWpB,iBAAXoB,GAAWpB;MACRqB,gDAXHd,YAWGc,EAVHX,WAUGW,EATHV,aASGU,EARHT,gBAQGS,EAPHP,aAOGO,EANHN,YAMGM,EALHL,eAKGK,EAJHJ,WAIGI,EAHHH,MAGGG,EAFHF,QAEGE,EADHD,UACGC;;EAEH,oBACE3B,oBAACI,aAAD,EAACA,wCACKuB,SADLvB,GACKuB;IACJC,eAAe3B,8BAEbY,eAAe,SAAfA,IAA4BN,gBAAgB,CAACM,UAAD,CAF/BZ;EADX0B,CADLvB,CAAD,eAOEJ,oBAAC6B,KAAD,EAACA;IAAIC,KAAKT,UAATQ;IAAqBE,OAAOT;EAA5BO,CAAD,EACGb,0BACChB,oBAACG,WAAD,EAACA;IACC6B,QAAQf,WADTd;IAEC8B,WAAWf,cAFZf;IAGC+B,cAAc,0BAHf/B;IAICkB,YAAYD,WAJbjB;IAKCgC,MAAMZ;EALPpB,CAAD,CAFJ,eAUEH,oBAAC6B,KAAD,EAACA;IACCO,SAAS,4BADVP;IAECE,OAAOL,aAAa,IAAbA,GAAoB;MAAEA;IAAF,CAApBA,GAAmCW;EAF3CR,CAAD,EAIGJ,uBAAUzB,oBAACK,OAAD,EAACA;IAAQiC,QAAO;EAAfjC,CAAD,EAAqBoB,MAArB,CAJb,EAKGD,qBAAQxB,oBAACK,OAAD,EAACA,IAAD,EAAUmB,IAAV,CALX,CAVF,CAPF,CADF;AA4BF,CA1CO","names":["React","classNames","DefaultIcon","PopperArrow","RootComponent","Subhead","TOOLTIP_MAX_WIDTH","stylesAppearance","accent","white","black","inversion","TooltipBase","appearance","_param_appearance","_param_withArrow","withArrow","arrowCoords","arrowPlacement","_param_arrowPlacement","getArrowRef","getRootRef","floatingStyle","ArrowIcon","text","header","maxWidth","restProps","baseClassName","div","ref","style","coords","placement","arrowClassName","Icon","className","undefined","weight"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\components\\TooltipBase\\TooltipBase.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { HasRootRef } from '../../types';\nimport { DefaultIcon } from '../PopperArrow/DefaultIcon';\nimport { PopperArrow, type PopperArrowProps } from '../PopperArrow/PopperArrow';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport { Subhead } from '../Typography/Subhead/Subhead';\nimport styles from './TooltipBase.module.css';\n\nexport const TOOLTIP_MAX_WIDTH = 220;\n\nconst stylesAppearance = {\n  accent: styles['TooltipBase--appearance-accent'],\n  white: styles['TooltipBase--appearance-white'],\n  black: styles['TooltipBase--appearance-black'],\n  inversion: styles['TooltipBase--appearance-inversion'],\n};\n\nexport interface TooltipBaseProps extends HasRootRef<HTMLDivElement> {\n  /**\n   * Стиль отображения подсказки\n   */\n  appearance?: 'accent' | 'neutral' | 'white' | 'black' | 'inversion';\n  /**\n   * Текст тултипа.\n   */\n  text?: React.ReactNode;\n  /**\n   * Заголовок тултипа.\n   */\n  header?: React.ReactNode;\n  /**\n   * Отображать ли стрелку, указывающую на якорный элемент\n   */\n  withArrow?: boolean;\n  arrowCoords?: PopperArrowProps['coords'];\n  arrowPlacement?: PopperArrowProps['placement'];\n  getArrowRef?: PopperArrowProps['getRootRef'];\n  /**\n   * Пользовательская SVG иконка.\n   *\n   * Требования:\n   *\n   * 1. Иконка по умолчанию должна быть направлена вверх (a.k.a `IconUp`).\n   * 2. Чтобы избежать проблемы с пространством между стрелкой и контентом на некоторых экранах,\n   *    растяните кривую по высоте на `1px` и увеличьте на этот размер `height` и `viewBox` SVG.\n   *    (см. https://github.com/VKCOM/VKUI/pull/4496).\n   * 3. Убедитесь, что компонент принимает все валидные для SVG параметры.\n   * 4. Убедитесь, что SVG и её элементы наследует цвет через `fill=\"currentColor\"`.\n   * 5. Если стрелка наезжает на якорный элемент, то увеличьте значение параметра `offsetY`.\n   */\n  ArrowIcon?: PopperArrowProps['Icon'];\n  /**\n   * Пользовательские css-классы, будут добавлены на root-элемент\n   */\n  className?: string;\n  /**\n   * Перебивает максимальную ширину заданную по умолчанию.\n   *\n   * Передача `null` полностью сбрасывает установку `max-width` на элемент.\n   */\n  maxWidth?: number | string | null;\n  floatingStyle?: React.CSSProperties;\n}\n\n/**\n * Низкоуровневый компонент для отрисовки тултипа.\n * Примеры использования и Readme можно найти в документации Tooltip\n * @see https://vkcom.github.io/VKUI/#/Tooltip\n */\nexport const TooltipBase = ({\n  appearance = 'accent',\n  withArrow = true,\n  arrowCoords,\n  arrowPlacement = 'top',\n  getArrowRef,\n  getRootRef,\n  floatingStyle,\n  ArrowIcon = DefaultIcon,\n  text,\n  header,\n  maxWidth = TOOLTIP_MAX_WIDTH,\n  ...restProps\n}: TooltipBaseProps) => {\n  return (\n    <RootComponent\n      {...restProps}\n      baseClassName={classNames(\n        styles['TooltipBase'],\n        appearance !== 'neutral' && stylesAppearance[appearance],\n      )}\n    >\n      <div ref={getRootRef} style={floatingStyle}>\n        {withArrow && (\n          <PopperArrow\n            coords={arrowCoords}\n            placement={arrowPlacement}\n            arrowClassName={styles['TooltipBase__arrow']}\n            getRootRef={getArrowRef}\n            Icon={ArrowIcon}\n          />\n        )}\n        <div\n          className={styles['TooltipBase__content']}\n          style={maxWidth !== null ? { maxWidth } : undefined}\n        >\n          {header && <Subhead weight=\"2\">{header}</Subhead>}\n          {text && <Subhead>{text}</Subhead>}\n        </div>\n      </div>\n    </RootComponent>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}