{"ast":null,"code":"import { canUseDOM } from \"./dom\";\nexport var IPHONE_SAFARI_BOTTOM_BAR = 45;\nexport var IPHONE_X_SAFARI_BOTTOM_BAR = 85;\nexport var IPHONE_KEYBOARD_REJECT_OFFSET = 180; // 44 iPhone, 55 iPad, iPad Pro 69\n\nexport var IOS_NO_KEYBOARD_ALLOWED_OFFSET = 70;\nexport function detectIOS(ua) {\n  if (!ua) {\n    ua = canUseDOM ? navigator.userAgent : \"\";\n  }\n\n  ua = ua.toLowerCase();\n  var isIPadOS = checkIPadOS(ua);\n  var isIPad = isIPadOS || ua.includes(\"ipad\");\n  var isIPhone = !isIPad && ua.search(/iphone|ipod/) !== -1;\n  var isIOS = isIPhone || isIPad;\n  var iosVersion = isIOS && ua.match(/os ([\\d_]+) like mac os x/i);\n  var iosMajor = 0;\n  var iosMinor = 0;\n\n  if (isIPadOS) {\n    iosMajor = 13;\n    iosMinor = 0;\n  } else if (iosVersion) {\n    iosVersion = iosVersion[1].split(\"_\");\n    iosMajor = +iosVersion[0];\n    iosMinor = +iosVersion[1];\n  }\n\n  iosVersion = null;\n  var isScrollBasedViewport = iosMajor < 13 && !(iosMajor === 11 && iosMinor < 3);\n  var isWKWebView = isIOS && checkWKWebView(ua);\n  var isIPhoneX = false;\n\n  if (canUseDOM) {\n    isIPhoneX = isIOS && screen.width === 375 && screen.height === 812 && window.devicePixelRatio === 3;\n  }\n\n  var isIOSChrome = ua.search(/crios/i) !== -1;\n  return {\n    isIPad: isIPad,\n    isIPhone: isIPhone,\n    isIOS: isIOS,\n    isIPadOS: isIPadOS,\n    iosMajor: iosMajor,\n    iosMinor: iosMinor,\n    isWKWebView: isWKWebView,\n    isScrollBasedViewport: isScrollBasedViewport,\n    isIPhoneX: isIPhoneX,\n    isIOSChrome: isIOSChrome\n  };\n}\nvar detect = /*#__PURE__*/detectIOS();\nexport var isIPad = /*#__PURE__*/function () {\n  return detect.isIPad;\n}();\nexport var isIPhone = /*#__PURE__*/function () {\n  return detect.isIPhone;\n}();\nexport var isIOS = /*#__PURE__*/function () {\n  return detect.isIOS;\n}();\nexport var isIPadOS = /*#__PURE__*/function () {\n  return detect.isIPadOS;\n}();\nexport var iosMajor = /*#__PURE__*/function () {\n  return detect.iosMajor;\n}();\nexport var iosMinor = /*#__PURE__*/function () {\n  return detect.iosMinor;\n}();\nexport var isWKWebView = /*#__PURE__*/function () {\n  return detect.isWKWebView;\n}();\nexport var isScrollBasedViewport = /*#__PURE__*/function () {\n  return detect.isScrollBasedViewport;\n}();\nexport var isIPhoneX = /*#__PURE__*/function () {\n  return detect.isIPhoneX;\n}();\nexport var isIOSChrome = /*#__PURE__*/function () {\n  return detect.isIOSChrome;\n}();\nexport function isLandscapePhone() {\n  return Math.abs(window.orientation) === 90 && !isIPad;\n} // Reference:\n// https://stackoverflow.com/questions/28795476/detect-if-page-is-loaded-inside-wkwebview-in-javascript/30495399#30495399\n\nfunction checkWKWebView(ua) {\n  if (!canUseDOM) {\n    return false;\n  }\n\n  var webkit = window.webkit;\n\n  if (webkit && webkit.messageHandlers) {\n    return true;\n  }\n\n  var lte9 = /constructor/i.test(String(window.HTMLElement));\n  var idb = !!window.indexedDB;\n\n  if (ua.includes(\"safari\") && ua.includes(\"version\") && !navigator.standalone) {} else // Safari (WKWebView/Nitro since 6+)\n    if (!idb && lte9 || !(window.statusbar && window.statusbar.visible)) {} else // UIWebView\n      if (!lte9 || idb) {\n        // WKWebView\n        return true;\n      }\n\n  return false;\n}\n\nexport function checkIPadOS(ua) {\n  if (!canUseDOM) {\n    return false;\n  }\n\n  var notIOS = !/ipad|iphone|ipod/.test(ua);\n  var macOS = ua.includes(\"mac os\");\n\n  if (macOS && notIOS && typeof navigator.standalone === \"boolean\") {\n    return true;\n  }\n\n  return false;\n}","map":{"version":3,"mappings":"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","names":["canUseDOM","IPHONE_SAFARI_BOTTOM_BAR","IPHONE_X_SAFARI_BOTTOM_BAR","IPHONE_KEYBOARD_REJECT_OFFSET","IOS_NO_KEYBOARD_ALLOWED_OFFSET","detectIOS","ua","navigator","userAgent","toLowerCase","isIPadOS","checkIPadOS","isIPad","includes","isIPhone","search","isIOS","iosVersion","match","iosMajor","iosMinor","split","isScrollBasedViewport","isWKWebView","checkWKWebView","isIPhoneX","screen","width","height","window","devicePixelRatio","isIOSChrome","detect","isLandscapePhone","Math","abs","orientation","webkit","messageHandlers","lte9","test","String","HTMLElement","idb","indexedDB","standalone","statusbar","visible","notIOS","macOS"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkjs\\src\\IOSDetections.ts"],"sourcesContent":["import { canUseDOM } from './dom';\n\nexport const IPHONE_SAFARI_BOTTOM_BAR = 45;\nexport const IPHONE_X_SAFARI_BOTTOM_BAR = 85;\n\nexport const IPHONE_KEYBOARD_REJECT_OFFSET = 180;\n\n// 44 iPhone, 55 iPad, iPad Pro 69\nexport const IOS_NO_KEYBOARD_ALLOWED_OFFSET = 70;\n\nexport function detectIOS(ua?: string) {\n  if (!ua) {\n    ua = canUseDOM ? navigator.userAgent : '';\n  }\n  ua = ua.toLowerCase();\n\n  const isIPadOS = checkIPadOS(ua);\n  const isIPad = isIPadOS || ua.includes('ipad');\n  const isIPhone = !isIPad && ua.search(/iphone|ipod/) !== -1;\n  const isIOS = isIPhone || isIPad;\n\n  let iosVersion: string[] | typeof isIOS | ReturnType<typeof String.prototype.match> =\n    isIOS && ua.match(/os ([\\d_]+) like mac os x/i);\n  let iosMajor = 0;\n  let iosMinor = 0;\n\n  if (isIPadOS) {\n    iosMajor = 13;\n    iosMinor = 0;\n  } else if (iosVersion) {\n    iosVersion = iosVersion[1].split('_');\n    iosMajor = +iosVersion[0];\n    iosMinor = +iosVersion[1];\n  }\n\n  iosVersion = null;\n\n  const isScrollBasedViewport = iosMajor < 13 && !(iosMajor === 11 && iosMinor < 3);\n  const isWKWebView = isIOS && checkWKWebView(ua);\n\n  let isIPhoneX = false;\n\n  if (canUseDOM) {\n    isIPhoneX =\n      isIOS && screen.width === 375 && screen.height === 812 && window.devicePixelRatio === 3;\n  }\n\n  const isIOSChrome = ua.search(/crios/i) !== -1;\n\n  return {\n    isIPad,\n    isIPhone,\n    isIOS,\n    isIPadOS,\n    iosMajor,\n    iosMinor,\n    isWKWebView,\n    isScrollBasedViewport,\n    isIPhoneX,\n    isIOSChrome,\n  };\n}\n\nconst detect = /*#__PURE__*/ detectIOS();\n\nexport const isIPad = /*#__PURE__*/ (() => detect.isIPad)();\nexport const isIPhone = /*#__PURE__*/ (() => detect.isIPhone)();\nexport const isIOS = /*#__PURE__*/ (() => detect.isIOS)();\nexport const isIPadOS = /*#__PURE__*/ (() => detect.isIPadOS)();\nexport const iosMajor = /*#__PURE__*/ (() => detect.iosMajor)();\nexport const iosMinor = /*#__PURE__*/ (() => detect.iosMinor)();\nexport const isWKWebView = /*#__PURE__*/ (() => detect.isWKWebView)();\nexport const isScrollBasedViewport = /*#__PURE__*/ (() => detect.isScrollBasedViewport)();\nexport const isIPhoneX = /*#__PURE__*/ (() => detect.isIPhoneX)();\nexport const isIOSChrome = /*#__PURE__*/ (() => detect.isIOSChrome)();\n\nexport function isLandscapePhone() {\n  return Math.abs(window.orientation) === 90 && !isIPad;\n}\n\n// Reference:\n// https://stackoverflow.com/questions/28795476/detect-if-page-is-loaded-inside-wkwebview-in-javascript/30495399#30495399\nfunction checkWKWebView(ua: string) {\n  if (!canUseDOM) {\n    return false;\n  }\n\n  const webkit = (window as any).webkit;\n\n  if (webkit && webkit.messageHandlers) {\n    return true;\n  }\n\n  const lte9 = /constructor/i.test(String(window.HTMLElement));\n  const idb = !!window.indexedDB;\n\n  if (ua.includes('safari') && ua.includes('version') && !(navigator as any).standalone) {\n    // Safari (WKWebView/Nitro since 6+)\n  } else if ((!idb && lte9) || !(window.statusbar && window.statusbar.visible)) {\n    // UIWebView\n  } else if (!lte9 || idb) {\n    // WKWebView\n    return true;\n  }\n\n  return false;\n}\n\nexport function checkIPadOS(ua: string) {\n  if (!canUseDOM) {\n    return false;\n  }\n\n  const notIOS = !/ipad|iphone|ipod/.test(ua);\n  const macOS = ua.includes('mac os');\n\n  if (macOS && notIOS && typeof (navigator as any).standalone === 'boolean') {\n    return true;\n  }\n\n  return false;\n}\n"]},"metadata":{},"sourceType":"module"}