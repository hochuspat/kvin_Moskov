{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport * as React from \"react\";\nimport { Icon24ChevronCompactLeft, Icon24ChevronCompactRight } from \"@vkontakte/icons\";\nimport { usePagination } from \"../../hooks/usePagination\";\nimport { Button } from \"../Button/Button\";\nimport { RootComponent } from \"../RootComponent/RootComponent\";\nimport { PaginationPageButton } from \"./PaginationPage/PaginationPageButton\";\nimport { PaginationPageEllipsis } from \"./PaginationPage/PaginationPageEllipsis\";\nimport { getPageAriaLabelDefault } from \"./utils\";\n/**\n * @see https://vkcom.github.io/VKUI/#/Pagination\n */\n\nexport var Pagination = function (_param) {\n  var _param_currentPage = _param.currentPage,\n      currentPage = _param_currentPage === void 0 ? 1 : _param_currentPage,\n      _param_siblingCount = _param.siblingCount,\n      siblingCount = _param_siblingCount === void 0 ? 1 : _param_siblingCount,\n      _param_boundaryCount = _param.boundaryCount,\n      boundaryCount = _param_boundaryCount === void 0 ? 1 : _param_boundaryCount,\n      _param_totalPages = _param.totalPages,\n      totalPages = _param_totalPages === void 0 ? 1 : _param_totalPages,\n      disabled = _param.disabled,\n      _param_getPageAriaLabel = _param.getPageAriaLabel,\n      getPageAriaLabel = _param_getPageAriaLabel === void 0 ? getPageAriaLabelDefault : _param_getPageAriaLabel,\n      _param_prevButtonAriaLabel = _param.prevButtonAriaLabel,\n      prevButtonAriaLabel = _param_prevButtonAriaLabel === void 0 ? \"Перейти на предыдущую страницу\" : _param_prevButtonAriaLabel,\n      _param_nextButtonAriaLabel = _param.nextButtonAriaLabel,\n      nextButtonAriaLabel = _param_nextButtonAriaLabel === void 0 ? \"Перейти на следующую страницу\" : _param_nextButtonAriaLabel,\n      onChange = _param.onChange,\n      resetProps = _object_without_properties(_param, [\"currentPage\", \"siblingCount\", \"boundaryCount\", \"totalPages\", \"disabled\", \"getPageAriaLabel\", \"prevButtonAriaLabel\", \"nextButtonAriaLabel\", \"onChange\"]);\n\n  var pages = usePagination({\n    currentPage: currentPage,\n    totalPages: totalPages,\n    siblingCount: siblingCount,\n    boundaryCount: boundaryCount\n  });\n  var isFirstPage = currentPage === 1;\n  var isLastPage = currentPage === totalPages;\n  var handlePrevClick = React.useCallback(function () {\n    if (onChange && !isFirstPage) {\n      onChange(currentPage - 1);\n    }\n  }, [currentPage, isFirstPage, onChange]);\n  var handleClick = React.useCallback(function (event) {\n    var page = event.currentTarget.dataset.page || \"1\";\n    onChange === null || onChange === void 0 ? void 0 : onChange(Number(page));\n  }, [onChange]);\n  var handleNextClick = React.useCallback(function () {\n    if (onChange && !isLastPage) {\n      onChange(currentPage + 1);\n    }\n  }, [currentPage, isLastPage, onChange]);\n  var renderPages = React.useCallback(function (page) {\n    switch (page) {\n      case \"start-ellipsis\":\n      case \"end-ellipsis\":\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: page\n        }, /*#__PURE__*/React.createElement(PaginationPageEllipsis, {\n          disabled: disabled\n        }));\n\n      default:\n        {\n          var isCurrent = page === currentPage;\n          return /*#__PURE__*/React.createElement(\"li\", {\n            key: page\n          }, /*#__PURE__*/React.createElement(PaginationPageButton, {\n            getPageAriaLabel: getPageAriaLabel,\n            isCurrent: isCurrent,\n            onClick: handleClick,\n            disabled: disabled\n          }, page));\n        }\n    }\n  }, [currentPage, disabled, getPageAriaLabel, handleClick]);\n  return /*#__PURE__*/React.createElement(RootComponent, _object_spread({\n    Component: \"nav\",\n    role: \"navigation\",\n    \"aria-label\": \"Навигация по страницам\"\n  }, resetProps), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"vkuiPagination__list\"\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"vkuiPagination__prevButtonContainer\"\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"l\",\n    before: /*#__PURE__*/React.createElement(Icon24ChevronCompactLeft, {\n      width: 24\n    }),\n    appearance: \"accent\",\n    mode: \"tertiary\",\n    disabled: isFirstPage || disabled,\n    \"aria-label\": prevButtonAriaLabel,\n    onClick: handlePrevClick\n  })), pages.map(renderPages), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"vkuiPagination__nextButtonContainer\"\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"l\",\n    after: /*#__PURE__*/React.createElement(Icon24ChevronCompactRight, {\n      width: 24\n    }),\n    appearance: \"accent\",\n    mode: \"tertiary\",\n    disabled: isLastPage || disabled,\n    \"aria-label\": nextButtonAriaLabel,\n    onClick: handleNextClick\n  }))));\n};","map":{"version":3,"mappings":"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","names":["React","Icon24ChevronCompactLeft","Icon24ChevronCompactRight","usePagination","Button","RootComponent","PaginationPageButton","PaginationPageEllipsis","getPageAriaLabelDefault","Pagination","currentPage","_param_currentPage","_param_siblingCount","siblingCount","_param_boundaryCount","boundaryCount","_param_totalPages","totalPages","disabled","getPageAriaLabel","prevButtonAriaLabel","_param_prevButtonAriaLabel","_param_nextButtonAriaLabel","nextButtonAriaLabel","onChange","resetProps","pages","isFirstPage","isLastPage","handlePrevClick","useCallback","handleClick","event","page","currentTarget","dataset","Number","handleNextClick","renderPages","li","key","isCurrent","onClick","Component","role","aria-label","ul","className","size","before","width","appearance","mode","map","after"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\components\\Pagination\\Pagination.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Icon24ChevronCompactLeft, Icon24ChevronCompactRight } from '@vkontakte/icons';\nimport { PaginationPageType, usePagination } from '../../hooks/usePagination';\nimport type { HTMLAttributesWithRootRef } from '../../types';\nimport { Button } from '../Button/Button';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport { PaginationPageButton } from './PaginationPage/PaginationPageButton';\nimport { PaginationPageEllipsis } from './PaginationPage/PaginationPageEllipsis';\nimport { getPageAriaLabelDefault } from './utils';\nimport styles from './Pagination.module.css';\n\nexport interface PaginationProps extends Omit<HTMLAttributesWithRootRef<HTMLElement>, 'onChange'> {\n  /**\n   * Текущая страница.\n   */\n  currentPage?: number;\n  /**\n   * Кол-во всегда видимых страниц по краям текущей страницы.\n   */\n  siblingCount?: number;\n  /**\n   * Кол-во всегда видимых страниц в начале и в конце.\n   */\n  boundaryCount?: number;\n  /**\n   * Общее кол-во страниц.\n   */\n  totalPages?: number;\n  /**\n   * Блокировка всех кнопок.\n   */\n  disabled?: boolean;\n  /**\n   * Переопределение `aria-label` для кнопки навигации назад.\n   * По умолчанию используется текст на \"ru_RU\".\n   */\n  prevButtonAriaLabel?: string;\n  /**\n   * Переопределение `aria-label` для кнопки навигации вперёд.\n   * По умолчанию используется текст на \"ru_RU\".\n   */\n  nextButtonAriaLabel?: string;\n  /**\n   * Функция для переопределения и/или локализации `aria-label` атрибута.\n   * По умолчанию используется текст на \"ru_RU\".\n   */\n  getPageAriaLabel?(page: number, isCurrent: boolean): string;\n  onChange?(page: number): void;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Pagination\n */\nexport const Pagination = ({\n  currentPage = 1,\n  siblingCount = 1,\n  boundaryCount = 1,\n  totalPages = 1,\n  disabled,\n  getPageAriaLabel = getPageAriaLabelDefault,\n  prevButtonAriaLabel = 'Перейти на предыдущую страницу',\n  nextButtonAriaLabel = 'Перейти на следующую страницу',\n  onChange,\n  ...resetProps\n}: PaginationProps) => {\n  const pages = usePagination({\n    currentPage,\n    totalPages,\n    siblingCount,\n    boundaryCount,\n  });\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === totalPages;\n\n  const handlePrevClick = React.useCallback(() => {\n    if (onChange && !isFirstPage) {\n      onChange(currentPage - 1);\n    }\n  }, [currentPage, isFirstPage, onChange]);\n\n  const handleClick = React.useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      const page: string = event.currentTarget.dataset.page || '1';\n      onChange?.(Number(page));\n    },\n    [onChange],\n  );\n\n  const handleNextClick = React.useCallback(() => {\n    if (onChange && !isLastPage) {\n      onChange(currentPage + 1);\n    }\n  }, [currentPage, isLastPage, onChange]);\n\n  const renderPages = React.useCallback(\n    (page: PaginationPageType) => {\n      switch (page) {\n        case 'start-ellipsis':\n        case 'end-ellipsis':\n          return (\n            <li key={page}>\n              <PaginationPageEllipsis disabled={disabled} />\n            </li>\n          );\n        default: {\n          const isCurrent = page === currentPage;\n          return (\n            <li key={page}>\n              <PaginationPageButton\n                getPageAriaLabel={getPageAriaLabel}\n                isCurrent={isCurrent}\n                onClick={handleClick}\n                disabled={disabled}\n              >\n                {page}\n              </PaginationPageButton>\n            </li>\n          );\n        }\n      }\n    },\n    [currentPage, disabled, getPageAriaLabel, handleClick],\n  );\n\n  return (\n    <RootComponent\n      Component=\"nav\"\n      role=\"navigation\"\n      aria-label=\"Навигация по страницам\"\n      {...resetProps}\n    >\n      <ul className={styles['Pagination__list']}>\n        <li className={styles['Pagination__prevButtonContainer']}>\n          <Button\n            size=\"l\"\n            before={<Icon24ChevronCompactLeft width={24} />}\n            appearance=\"accent\"\n            mode=\"tertiary\"\n            disabled={isFirstPage || disabled}\n            aria-label={prevButtonAriaLabel}\n            onClick={handlePrevClick}\n          />\n        </li>\n        {pages.map(renderPages)}\n        <li className={styles['Pagination__nextButtonContainer']}>\n          <Button\n            size=\"l\"\n            after={<Icon24ChevronCompactRight width={24} />}\n            appearance=\"accent\"\n            mode=\"tertiary\"\n            disabled={isLastPage || disabled}\n            aria-label={nextButtonAriaLabel}\n            onClick={handleNextClick}\n          />\n        </li>\n      </ul>\n    </RootComponent>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}