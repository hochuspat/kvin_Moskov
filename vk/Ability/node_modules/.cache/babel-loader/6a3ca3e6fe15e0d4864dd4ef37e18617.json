{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport * as React from \"react\";\nimport { Icon24Dismiss } from \"@vkontakte/icons\";\nimport { classNames, hasReactNode } from \"@vkontakte/vkjs\";\nimport { useAdaptivityWithJSMediaQueries } from \"../../hooks/useAdaptivityWithJSMediaQueries\";\nimport { useKeyboard } from \"../../hooks/useKeyboard\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { SizeType } from \"../../lib/adaptivity\";\nimport { Platform } from \"../../lib/platform\";\nimport { AdaptivityContext } from \"../AdaptivityProvider/AdaptivityContext\";\nimport { ModalDismissButton } from \"../ModalDismissButton/ModalDismissButton\";\nimport { PanelHeaderButton } from \"../PanelHeaderButton/PanelHeaderButton\";\nimport { RootComponent } from \"../RootComponent/RootComponent\";\nimport { Subhead } from \"../Typography/Subhead/Subhead\";\nimport { Title } from \"../Typography/Title/Title\";\n/**\n * @see https://vkcom.github.io/VKUI/#/ModalCardBase\n */\n\nexport var ModalCardBase = function (_param) {\n  var icon = _param.icon,\n      header = _param.header,\n      subheader = _param.subheader,\n      children = _param.children,\n      actions = _param.actions,\n      onClose = _param.onClose,\n      _param_dismissLabel = _param.dismissLabel,\n      dismissLabel = _param_dismissLabel === void 0 ? \"Скрыть\" : _param_dismissLabel,\n      style = _param.style,\n      sizeProp = _param.size,\n      restProps = _object_without_properties(_param, [\"icon\", \"header\", \"subheader\", \"children\", \"actions\", \"onClose\", \"dismissLabel\", \"style\", \"size\"]);\n\n  var platform = usePlatform();\n  var isDesktop = useAdaptivityWithJSMediaQueries().isDesktop;\n  var isSoftwareKeyboardOpened = useKeyboard().isOpened;\n  var canShowCloseButtonIOS = platform === Platform.IOS && !isDesktop;\n  var size = isDesktop ? sizeProp : undefined;\n  return /*#__PURE__*/React.createElement(RootComponent, _object_spread_props(_object_spread({}, restProps), {\n    baseClassName: classNames(\"vkuiInternalModalCardBase\", platform === Platform.IOS && \"vkuiModalCardBase--ios\", isDesktop && \"vkuiModalCardBase--desktop\"),\n    style: _object_spread_props(_object_spread({}, style), {\n      maxWidth: size\n    })\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(\"vkuiModalCardBase__container\", isSoftwareKeyboardOpened && \"vkuiModalCardBase__container--softwareKeyboardOpened\")\n  }, hasReactNode(icon) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiModalCardBase__icon\"\n  }, icon), hasReactNode(header) && /*#__PURE__*/React.createElement(Title, {\n    level: \"2\",\n    weight: \"2\",\n    className: classNames(\"vkuiModalCardBase__header\", \"vkuiInternalModalCardBase__header\")\n  }, header), hasReactNode(subheader) && /*#__PURE__*/React.createElement(AdaptivityContext.Provider, {\n    value: {\n      sizeY: SizeType.REGULAR\n    }\n  }, /*#__PURE__*/React.createElement(Subhead, {\n    className: classNames(\"vkuiModalCardBase__subheader\", \"vkuiInternalModalCardBase__subheader\")\n  }, subheader)), children, hasReactNode(actions) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiModalCardBase__actions\"\n  }, actions), isDesktop && /*#__PURE__*/React.createElement(ModalDismissButton, {\n    onClick: onClose\n  }), canShowCloseButtonIOS && /*#__PURE__*/React.createElement(PanelHeaderButton, {\n    \"aria-label\": dismissLabel,\n    className: \"vkuiModalCardBase__dismiss\",\n    onClick: onClose\n  }, /*#__PURE__*/React.createElement(Icon24Dismiss, null))));\n};","map":{"version":3,"mappings":";;;AAAA,YAAYA,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,iBAAzC;AACA,SAASC,+BAAT,QAAgD,6CAAhD;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,SAASC,iBAAT,QAAkC,yCAAlC;AACA,SAASC,kBAAT,QAAmC,0CAAnC;AACA,SAASC,iBAAT,QAAkC,wCAAlC;AACA,SAASC,aAAT,QAA8B,gCAA9B;AACA,SAASC,OAAT,QAAwB,+BAAxB;AACA,SAASC,KAAT,QAAsB,2BAAtB;AA+CA;;;;AAGA,OAAO,IAAMC,gBAAgB;MAC3BC;MACAC;MACAC;MACAC;MACAC;MACAC;MAAAA,6BACAC;MAAAA,gDAAe,QAAfA,GAAeC;MACfC;MACAC,QAAMC,UAAND;MACGE,gDATHX,MASGW,EARHV,QAQGU,EAPHT,WAOGS,EANHR,UAMGQ,EALHP,SAKGO,EAJHN,SAIGM,EAHHL,cAGGK,EAFHH,OAEGG,EADHF,MACGE;;EAEH,IAAMC,WAAWtB,aAAjB;EACA,IAAMuB,SAAEA,GAAczB,kCAAdyB,SAAR;EACA,IAAMC,2BAA2BzB,cAAc0B,QAA/C;EAEA,IAAMC,wBAAwBJ,aAAapB,SAASyB,GAAtBL,IAA6B,CAACC,SAA5D;EAEA,IAAMJ,OAAOI,YAAYH,QAAZG,GAAuBK,SAApC;EAEA,oBACElC,oBAACY,aAAD,EAACA,wCACKe,SADLf,GACKe;IACJQ,eAAejC,WACb,2BADaA,EAEb0B,aAAapB,SAASyB,GAAtBL,IAAyB,wBAFZ1B,EAGb2B,yCAHa3B,CADXyB;IAMJH,OAAOY,wCACFZ,KADE,GACFA;MACHa,UAAUZ;IADPD,CADE;EANHG,CADLf,CAAD,eAYEZ,oBAACsC,KAAD,EAACA;IACCC,WAAWrC,2CAET4B,kFAFS5B;EADZoC,CAAD,EAMGnC,aAAaa,IAAbb,KAAaa,aAAShB,oBAACsC,KAAD,EAACA;IAAIC,SAAS;EAAbD,CAAD,EAAgDtB,IAAhD,CANzB,EAOGb,aAAac,MAAbd,KAAac,aACZjB,oBAACc,KAAD,EAACA;IACC0B,OAAM,GADP1B;IAEC2B,QAAO,GAFR3B;IAGCyB,WAAWrC,wCAET,mCAFSA;EAHZY,CAAD,EAQGG,MARH,CARJ,EAmBGd,aAAae,SAAbf,KAAae,aACZlB,oBAACS,kBAAkBiC,QAAnB,EAA2B;IAACC,OAAO;MAAEC,OAAOrC,SAASsC;IAAlB;EAAR,CAA3B,eACE7C,oBAACa,OAAD,EAACA;IACC0B,WAAWrC,2CAET,sCAFSA;EADZW,CAAD,EAMGK,SANH,CADF,CApBJ,EAgCGC,QAhCH,EAkCGhB,aAAaiB,OAAbjB,KAAaiB,aAAYpB,oBAACsC,KAAD,EAACA;IAAIC,SAAS;EAAbD,CAAD,EAAmDlB,OAAnD,CAlC5B,EAoCGS,0BAAa7B,oBAACU,kBAAD,EAACA;IAAmBoC,SAASzB;EAA5BX,CAAD,CApChB,EAqCGsB,sCACChC,oBAACW,iBAAD,EAACA;IACCoC,cAAYzB,YADbX;IAEC4B,SAAS,8BAFV5B;IAGCmC,SAASzB;EAHVV,CAAD,eAKEX,oBAACC,aAAD,EAACA,IAAD,CALF,CAtCJ,CAZF,CADF;AA8DF,CAlFO","names":["React","Icon24Dismiss","classNames","hasReactNode","useAdaptivityWithJSMediaQueries","useKeyboard","usePlatform","SizeType","Platform","AdaptivityContext","ModalDismissButton","PanelHeaderButton","RootComponent","Subhead","Title","ModalCardBase","icon","header","subheader","children","actions","onClose","dismissLabel","_param_dismissLabel","style","size","sizeProp","restProps","platform","isDesktop","isSoftwareKeyboardOpened","isOpened","canShowCloseButtonIOS","IOS","undefined","baseClassName","_object_spread_props","maxWidth","div","className","level","weight","Provider","value","sizeY","REGULAR","onClick","aria-label"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\components\\ModalCardBase\\ModalCardBase.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Icon24Dismiss } from '@vkontakte/icons';\nimport { classNames, hasReactNode } from '@vkontakte/vkjs';\nimport { useAdaptivityWithJSMediaQueries } from '../../hooks/useAdaptivityWithJSMediaQueries';\nimport { useKeyboard } from '../../hooks/useKeyboard';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { SizeType } from '../../lib/adaptivity';\nimport { Platform } from '../../lib/platform';\nimport { HTMLAttributesWithRootRef } from '../../types';\nimport { AdaptivityContext } from '../AdaptivityProvider/AdaptivityContext';\nimport { ModalDismissButton } from '../ModalDismissButton/ModalDismissButton';\nimport { PanelHeaderButton } from '../PanelHeaderButton/PanelHeaderButton';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport { Subhead } from '../Typography/Subhead/Subhead';\nimport { Title } from '../Typography/Title/Title';\nimport styles from './ModalCardBase.module.css';\n\nexport interface ModalCardBaseProps extends HTMLAttributesWithRootRef<HTMLDivElement> {\n  /**\n   * Иконка.\n   *\n   * Может быть компонентом иконки, например, `<Icon56MoneyTransferOutline />`, или `<Avatar size={72} src=\"\" />`\n   */\n  icon?: React.ReactNode;\n\n  /**\n   * Заголовок карточки\n   */\n  header?: React.ReactNode;\n\n  /**\n   * Подзаголовок\n   */\n  subheader?: React.ReactNode;\n\n  /**\n   * Кнопки-действия. Принимает [`Button`](https://vkcom.github.io/VKUI/#/Button) с параметрами:\n   *\n   * - `size=\"l\" mode=\"primary\" stretched`\n   * - `size=\"l\" mode=\"secondary\" stretched`\n   *\n   * Для набора кнопок используйте [`ButtonGroup`](https://vkcom.github.io/VKUI/#/ButtonGroup) с параметрами:\n   *\n   * - `gap=\"s\" mode=\"horizontal\" stretched`\n   * - `gap=\"m\" mode=\"vertical\" stretched`\n   */\n  actions?: React.ReactNode;\n\n  onClose?: VoidFunction;\n\n  /**\n   * `aria-label` для кнопки закрытия. Необходим, чтобы кнопка была доступной.\n   */\n  dismissLabel?: string;\n\n  /**\n   * Задаёт контенту максимальную ширину для десктопной версии.\n   */\n  size?: number;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/ModalCardBase\n */\nexport const ModalCardBase = ({\n  icon,\n  header,\n  subheader,\n  children,\n  actions,\n  onClose,\n  dismissLabel = 'Скрыть',\n  style,\n  size: sizeProp,\n  ...restProps\n}: ModalCardBaseProps) => {\n  const platform = usePlatform();\n  const { isDesktop } = useAdaptivityWithJSMediaQueries();\n  const isSoftwareKeyboardOpened = useKeyboard().isOpened;\n\n  const canShowCloseButtonIOS = platform === Platform.IOS && !isDesktop;\n\n  const size = isDesktop ? sizeProp : undefined;\n\n  return (\n    <RootComponent\n      {...restProps}\n      baseClassName={classNames(\n        'vkuiInternalModalCardBase',\n        platform === Platform.IOS && styles['ModalCardBase--ios'],\n        isDesktop && styles['ModalCardBase--desktop'],\n      )}\n      style={{\n        ...style,\n        maxWidth: size,\n      }}\n    >\n      <div\n        className={classNames(\n          styles['ModalCardBase__container'],\n          isSoftwareKeyboardOpened && styles['ModalCardBase__container--softwareKeyboardOpened'],\n        )}\n      >\n        {hasReactNode(icon) && <div className={styles['ModalCardBase__icon']}>{icon}</div>}\n        {hasReactNode(header) && (\n          <Title\n            level=\"2\"\n            weight=\"2\"\n            className={classNames(\n              styles['ModalCardBase__header'],\n              'vkuiInternalModalCardBase__header',\n            )}\n          >\n            {header}\n          </Title>\n        )}\n        {hasReactNode(subheader) && (\n          <AdaptivityContext.Provider value={{ sizeY: SizeType.REGULAR }}>\n            <Subhead\n              className={classNames(\n                styles['ModalCardBase__subheader'],\n                'vkuiInternalModalCardBase__subheader',\n              )}\n            >\n              {subheader}\n            </Subhead>\n          </AdaptivityContext.Provider>\n        )}\n\n        {children}\n\n        {hasReactNode(actions) && <div className={styles['ModalCardBase__actions']}>{actions}</div>}\n\n        {isDesktop && <ModalDismissButton onClick={onClose} />}\n        {canShowCloseButtonIOS && (\n          <PanelHeaderButton\n            aria-label={dismissLabel}\n            className={styles['ModalCardBase__dismiss']}\n            onClick={onClose}\n          >\n            <Icon24Dismiss />\n          </PanelHeaderButton>\n        )}\n      </div>\n    </RootComponent>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}