{"ast":null,"code":"import { _ as _define_property } from \"@swc/helpers/_/_define_property\";\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport * as React from \"react\";\nimport { classNames, noop } from \"@vkontakte/vkjs\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { SizeType } from \"../../lib/adaptivity\";\nimport { Removable } from \"../Removable/Removable\";\nimport { RootComponent } from \"../RootComponent/RootComponent\";\n\nvar sizeYClassNames = _define_property({\n  none: classNames(\"vkuiFormLayoutGroup--sizeY-none\", \"vkuiInternalFormLayoutGroup--sizeY-none\")\n}, SizeType.COMPACT, classNames(\"vkuiFormLayoutGroup--sizeY-compact\", \"vkuiInternalFormLayoutGroup--sizeY-compact\"));\n/**\n * @see https://vkcom.github.io/VKUI/#/FormLayoutGroup\n */\n\n\nexport var FormLayoutGroup = function (_param) {\n  var children = _param.children,\n      _param_mode = _param.mode,\n      mode = _param_mode === void 0 ? \"vertical\" : _param_mode,\n      removable = _param.removable,\n      segmented = _param.segmented,\n      _param_removePlaceholder = _param.removePlaceholder,\n      removePlaceholder = _param_removePlaceholder === void 0 ? \"Удалить\" : _param_removePlaceholder,\n      _param_onRemove = _param.onRemove,\n      onRemove = _param_onRemove === void 0 ? noop : _param_onRemove,\n      getRootRef = _param.getRootRef,\n      restProps = _object_without_properties(_param, [\"children\", \"mode\", \"removable\", \"segmented\", \"removePlaceholder\", \"onRemove\", \"getRootRef\"]);\n\n  var _useAdaptivity = useAdaptivity(),\n      _useAdaptivity_sizeY = _useAdaptivity.sizeY,\n      sizeY = _useAdaptivity_sizeY === void 0 ? \"none\" : _useAdaptivity_sizeY;\n\n  var isRemovable = removable && mode === \"horizontal\";\n  var rootEl = useExternRef(getRootRef);\n  return /*#__PURE__*/React.createElement(RootComponent, _object_spread({\n    getRootRef: rootEl,\n    baseClassName: classNames(sizeY !== SizeType.REGULAR && sizeYClassNames[sizeY], mode === \"horizontal\" && classNames(\"vkuiFormLayoutGroup--mode-horizontal\", \"vkuiInternalFormLayoutGroup--mode-horizontal\"), mode === \"vertical\" && classNames(\"vkuiFormLayoutGroup--mode-vertical\", \"vkuiInternalFormLayoutGroup--mode-vertical\"), isRemovable && classNames(\"vkuiFormLayoutGroup--removable\", \"vkuiInternalFormLayoutGroup--removable\"), segmented && classNames(\"vkuiFormLayoutGroup--segmented\", \"vkuiInternalFormLayoutGroup--segmented\"))\n  }, restProps), isRemovable ? /*#__PURE__*/React.createElement(Removable, {\n    className: \"vkuiFormLayoutGroup__removable\",\n    align: \"start\",\n    removePlaceholder: removePlaceholder,\n    onRemove: function (e) {\n      if (rootEl === null || rootEl === void 0 ? void 0 : rootEl.current) {\n        onRemove(e, rootEl.current);\n      }\n    },\n    indent: removable === \"indent\"\n  }, children) : /*#__PURE__*/React.createElement(React.Fragment, null, children, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"vkuiFormLayoutGroup__offset\",\n    \"aria-hidden\": true\n  })));\n};","map":{"version":3,"mappings":";;;AAAA,YAAYA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,iBAAjC;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,QAAT,QAAyB,sBAAzB;AAEA,SAASC,SAAT,QAA0C,wBAA1C;AACA,SAASC,aAAT,QAA8B,gCAA9B;;AAGA,IAAMC,kBAKJC;EAJAC,MAAMT,8CAEJ,yCAFIA;AAIN,GAACI,SAASM,OAAV,EAAoBV,iDAElB,4CAFkBA,CAApB,CALF;AA4BA;;;;;AAGA,OAAO,IAAMW,kBAAkB;MAC7BC;MAAAA,qBACAC;MAAAA,gCAAO,UAAPA,GAAOC;MACPC;MACAC;MAAAA,kCACAC;MAAAA,0DAAoB,SAApBA,GAAoBC;MAAAC,yBACpBC;MAAAA,wCAAWnB,IAAXmB,GAAWnB;MACXoB;MACGC,gDAPHV,UAOGU,EANHT,MAMGS,EALHP,WAKGO,EAJHN,WAIGM,EAHHL,mBAGGK,EAFHF,UAEGE,EADHD,YACGC;;EAEH,IAA2BpB,gCAA3B;EAAA,IAA2BA,sCAAnBqB,KAAR;EAAA,IAAQA,0CAAQ,MAARA,GAAQC,oBAAhB;;EACA,IAAMC,cAAcV,aAAaF,SAAS,YAA1C;EACA,IAAMa,SAASvB,aAAakB,UAAblB,CAAf;EAEA,oBACEJ,oBAACO,aAAD,EAACA;IACCe,YAAYK,MADbpB;IAECqB,eAAe3B,WACbuB,UAAUnB,SAASwB,OAAnBL,IAA8BhB,eAAe,CAACgB,KAAD,CADhCvB,EAEba,SAAS,YAATA,IACEb,mDAEE,8CAFFA,CAHWA,EAOba,SAAS,UAATA,IACEb,iDAEE,4CAFFA,CARWA,EAYbyB,eACEzB,6CAEE,wCAFFA,CAbWA,EAiBbgB,aACEhB,6CAEE,wCAFFA,CAlBWA;EAFhBM,GAyBKgB,SAzBLhB,CAAD,EA2BGmB,2BACC1B,oBAACM,SAAD,EAACA;IACCwB,SAAS,kCADVxB;IAECyB,OAAM,OAFPzB;IAGCY,mBAAmBA,iBAHpBZ;IAICe,UAAU,UAACW,CAAD,EAACA;MACT,IAAIL,uDAAQM,OAAZ,EAAqB;QACnBZ,SAASW,CAATX,EAAYM,OAAOM,OAAnBZ;MACF;IACF,CARDf;IASC4B,QAAQlB,cAAc;EATvBV,CAAD,EAWGO,QAXH,CADDa,GAYIb,aAGHb,oBAACA,MAAMmC,QAAP,EAAe,IAAf,EACGtB,QADH,EACGA,aACDb,oBAACoC,MAAD,EAACA;IAAKN,SAAS,+BAAdM;IAAmDC;EAAnDD,CAAD,CAFF,CA1CJ,CADF;AAkDF,CAhEO","names":["React","classNames","noop","useAdaptivity","useExternRef","SizeType","Removable","RootComponent","sizeYClassNames","_define_property","none","COMPACT","FormLayoutGroup","children","mode","_param_mode","removable","segmented","removePlaceholder","_param_removePlaceholder","_param_onRemove","onRemove","getRootRef","restProps","sizeY","_useAdaptivity_sizeY","isRemovable","rootEl","baseClassName","REGULAR","className","align","e","current","indent","Fragment","span","aria-hidden"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\components\\FormLayoutGroup\\FormLayoutGroup.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, noop } from '@vkontakte/vkjs';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { SizeType } from '../../lib/adaptivity';\nimport { HTMLAttributesWithRootRef } from '../../types';\nimport { Removable, RemovableProps } from '../Removable/Removable';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport styles from './FormLayoutGroup.module.css';\n\nconst sizeYClassNames = {\n  none: classNames(\n    styles['FormLayoutGroup--sizeY-none'],\n    'vkuiInternalFormLayoutGroup--sizeY-none',\n  ),\n  [SizeType.COMPACT]: classNames(\n    styles['FormLayoutGroup--sizeY-compact'],\n    'vkuiInternalFormLayoutGroup--sizeY-compact',\n  ),\n};\n\nexport interface FormLayoutGroupProps\n  extends HTMLAttributesWithRootRef<HTMLDivElement>,\n    RemovableProps {\n  mode?: 'vertical' | 'horizontal';\n  /**\n   * Только для режима horizontal. Дает возможность удалить всю группу `FormItem`.\n   *\n   * Режим `indent` предназначен для визуального отступа.\n   */\n  removable?: boolean | 'indent';\n\n  /**\n   * Дает возможность склеить несколько `FormItem`.\n   */\n  segmented?: boolean;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/FormLayoutGroup\n */\nexport const FormLayoutGroup = ({\n  children,\n  mode = 'vertical',\n  removable,\n  segmented,\n  removePlaceholder = 'Удалить',\n  onRemove = noop,\n  getRootRef,\n  ...restProps\n}: FormLayoutGroupProps) => {\n  const { sizeY = 'none' } = useAdaptivity();\n  const isRemovable = removable && mode === 'horizontal';\n  const rootEl = useExternRef(getRootRef);\n\n  return (\n    <RootComponent\n      getRootRef={rootEl}\n      baseClassName={classNames(\n        sizeY !== SizeType.REGULAR && sizeYClassNames[sizeY],\n        mode === 'horizontal' &&\n          classNames(\n            styles['FormLayoutGroup--mode-horizontal'],\n            'vkuiInternalFormLayoutGroup--mode-horizontal',\n          ),\n        mode === 'vertical' &&\n          classNames(\n            styles['FormLayoutGroup--mode-vertical'],\n            'vkuiInternalFormLayoutGroup--mode-vertical',\n          ),\n        isRemovable &&\n          classNames(\n            styles['FormLayoutGroup--removable'],\n            'vkuiInternalFormLayoutGroup--removable',\n          ),\n        segmented &&\n          classNames(\n            styles['FormLayoutGroup--segmented'],\n            'vkuiInternalFormLayoutGroup--segmented',\n          ),\n      )}\n      {...restProps}\n    >\n      {isRemovable ? (\n        <Removable\n          className={styles['FormLayoutGroup__removable']}\n          align=\"start\"\n          removePlaceholder={removePlaceholder}\n          onRemove={(e) => {\n            if (rootEl?.current) {\n              onRemove(e, rootEl.current);\n            }\n          }}\n          indent={removable === 'indent'}\n        >\n          {children}\n        </Removable>\n      ) : (\n        <React.Fragment>\n          {children}\n          <span className={styles['FormLayoutGroup__offset']} aria-hidden />\n        </React.Fragment>\n      )}\n    </RootComponent>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}