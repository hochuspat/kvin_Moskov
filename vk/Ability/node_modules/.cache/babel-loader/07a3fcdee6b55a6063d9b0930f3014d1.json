{"ast":null,"code":"import { _ as _sliced_to_array } from \"@swc/helpers/_/_sliced_to_array\";\nimport * as React from \"react\";\nimport vkBridge from \"@vkontakte/vk-bridge\";\nimport { noop } from \"@vkontakte/vkjs\";\nimport { resolveAppearance } from \"../helpers/appearance\";\nimport { useDOM } from \"../lib/dom\";\nimport { matchMediaListAddListener, matchMediaListRemoveListener } from \"../lib/matchMedia\";\n\nfunction autoDetectAppearanceByBridge(setAppearance, onDetectAppearanceByBridge) {\n  function updateAppearance(data) {\n    var initialAppearance = resolveAppearance(data);\n\n    if (initialAppearance) {\n      onDetectAppearanceByBridge();\n      setAppearance(initialAppearance);\n    }\n  }\n\n  function bridgeListener(e) {\n    var _e_detail = e.detail,\n        type = _e_detail.type,\n        data = _e_detail.data;\n\n    if (type !== \"VKWebAppUpdateConfig\") {\n      return;\n    }\n\n    updateAppearance(data);\n  }\n\n  vkBridge.subscribe(bridgeListener);\n  vkBridge.send(\"VKWebAppGetConfig\").then(updateAppearance).catch(console.error);\n  return function () {\n    return vkBridge.unsubscribe(bridgeListener);\n  };\n}\n\nfunction autoDetectAppearance(window, setAppearance) {\n  var mediaQuery = window && window.matchMedia && window.matchMedia(\"(prefers-color-scheme: dark)\");\n\n  if (mediaQuery === undefined) {\n    return noop;\n  }\n\n  var check = function (event) {\n    // eslint-disable-next-line no-restricted-properties\n    setAppearance(event.matches ? \"dark\" : \"light\");\n  };\n\n  check(mediaQuery);\n  matchMediaListAddListener(mediaQuery, check);\n  return function () {\n    return matchMediaListRemoveListener(mediaQuery, check);\n  };\n}\n/**\n * TODO [>=6]: удалить хук (#5049)\n * @deprecated v5.8.0\n */\n\n\nexport var useAutoDetectAppearance = function (appearanceProp, onDetectAppearanceByBridge) {\n  var window = useDOM().window;\n  var onceDetectAppearanceByBridge = React.useRef(function () {\n    onDetectAppearanceByBridge && onDetectAppearanceByBridge();\n    onceDetectAppearanceByBridge.current = noop;\n  });\n\n  var _React_useState = _sliced_to_array(React.useState(function () {\n    if (appearanceProp) {\n      return appearanceProp;\n    }\n\n    var mediaQuery = window && window.matchMedia && window.matchMedia(\"(prefers-color-scheme: dark)\"); // eslint-disable-next-line no-restricted-properties\n\n    return (mediaQuery === null || mediaQuery === void 0 ? void 0 : mediaQuery.matches) ? \"dark\" : \"light\";\n  }), 2),\n      appearance = _React_useState[0],\n      setAppearance = _React_useState[1];\n\n  React.useEffect(function () {\n    if (appearanceProp) {\n      setAppearance(appearanceProp);\n      return noop;\n    }\n\n    if (vkBridge.isEmbedded()) {\n      return autoDetectAppearanceByBridge(setAppearance, onceDetectAppearanceByBridge.current);\n    }\n\n    return autoDetectAppearance(window, setAppearance);\n  }, [window, appearanceProp]);\n  return appearance;\n};","map":{"version":3,"mappings":";AAAA,YAAYA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAIO,sBAJP;AAKA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,iBAAT,QAAsD,uBAAtD;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,yBAAT,EAAoCC,4BAApC,QAAwE,mBAAxE;;AAEA,SAASC,4BAAT,CACEC,aADF,EAEEC,0BAFF,EAEwC;EAEtC,SAASC,gBAAT,CAA0BC,IAA1B,EAAkD;IAChD,IAAMC,oBAAoBT,kBAAkBQ,IAAlBR,CAA1B;;IAEA,IAAIS,iBAAJ,EAAuB;MACrBH;MACAD,cAAcI,iBAAdJ;IACF;EACF;;EAEA,SAASK,cAAT,CAAwBC,CAAxB,EAA8D;IAC5D,IAAuBA,cAAEC,MAAzB;IAAA,IAAQC,OAAeF,UAAfE,IAAR;IAAA,IAAcL,OAASG,UAATH,IAAd;;IAEA,IAAIK,SAAS,sBAAb,EAAqC;MACnC;IACF;;IAEAN,iBAAiBC,IAAjBD;EACF;;EAEAT,SAASgB,SAAThB,CAAmBY,cAAnBZ;EACAA,SAASiB,IAATjB,CAAc,mBAAdA,EAAmCkB,IAAnClB,CAAwCS,gBAAxCT,EAA0DmB,KAA1DnB,CAAgEoB,QAAQC,KAAxErB;EAEA,OAAO;WAAMA,SAASsB,WAATtB,CAAqBY,cAArBZ;GAAb;AACF;;AAEA,SAASuB,oBAAT,CACEC,MADF,EAEEjB,aAFF,EAEgD;EAE9C,IAAMkB,aACJD,UAAUA,OAAOE,UAAjBF,IAA+BA,OAAOE,UAAPF,CAAkB,8BAAlBA,CADjC;;EAGA,IAAIC,eAAeE,SAAnB,EAA8B;IAC5B,OAAO1B,IAAP;EACF;;EAEA,IAAM2B,QAAQ,UAACC,KAAD,EAACA;IACb;IACAtB,cAAcsB,MAAMC,OAAND,GAAgB,MAAhBA,GAAyB,OAAvCtB;EACF,CAHA;;EAKAqB,MAAMH,UAANG;EACAxB,0BAA0BqB,UAA1BrB,EAAsCwB,KAAtCxB;EAEA,OAAO;WAAMC,6BAA6BoB,UAA7BpB,EAAyCuB,KAAzCvB;GAAb;AACF;AAEA;;;;;;AAIA,OAAO,IAAM0B,0BAA0B,UACrCC,cADqC,EAErCxB,0BAFqC,EAErCA;EAEA,IAAMgB,MAAEA,GAAWrB,SAAXqB,MAAR;EACA,IAAMS,+BAA+BlC,MAAMmC,MAANnC,CAAa;IAChDS,8BAA8BA,4BAA9BA;IACAyB,6BAA6BE,OAA7BF,GAAuChC,IAAvCgC;EACF,CAHqClC,CAArC;;EAKA,IAAoCA,yCAAMqC,QAANrC,CAA+B;IACjE,IAAIiC,cAAJ,EAAoB;MAClB,OAAOA,cAAP;IACF;;IAEA,IAAMP,aACJD,UAAUA,OAAOE,UAAjBF,IAA+BA,OAAOE,UAAPF,CAAkB,8BAAlBA,CADjC,CALiE,CAQjE;;IACA,OAAOC,oEAAYK,OAAZL,IAAsB,MAAtBA,GAA+B,OAAtC;EACF,CAVoC1B,GAUpC,CAVoCA,CAApC;EAAA,IAAOsC,aAA6BtC,kBAApC;EAAA,IAAmBQ,gBAAiBR,kBAApC;;EAYAA,MAAMuC,SAANvC,CAAgB;IACd,IAAIiC,cAAJ,EAAoB;MAClBzB,cAAcyB,cAAdzB;MACA,OAAON,IAAP;IACF;;IAEA,IAAID,SAASuC,UAATvC,EAAJ,EAA2B;MACzB,OAAOM,6BAA6BC,aAA7BD,EAA4C2B,6BAA6BE,OAAzE7B,CAAP;IACF;;IAEA,OAAOiB,qBAAqBC,MAArBD,EAA6BhB,aAA7BgB,CAAP;EACF,CAXAxB,EAWG,CAACyB,MAAD,EAASQ,cAAT,CAXHjC;EAaA,OAAOsC,UAAP;AACF,CApCO","names":["React","vkBridge","noop","resolveAppearance","useDOM","matchMediaListAddListener","matchMediaListRemoveListener","autoDetectAppearanceByBridge","setAppearance","onDetectAppearanceByBridge","updateAppearance","data","initialAppearance","bridgeListener","e","detail","type","subscribe","send","then","catch","console","error","unsubscribe","autoDetectAppearance","window","mediaQuery","matchMedia","undefined","check","event","matches","useAutoDetectAppearance","appearanceProp","onceDetectAppearanceByBridge","useRef","current","useState","appearance","useEffect","isEmbedded"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\hooks\\useAutoDetectAppearance.tsx"],"sourcesContent":["import * as React from 'react';\nimport vkBridge, {\n  AnyReceiveMethodName,\n  AppearanceType,\n  VKBridgeEvent,\n} from '@vkontakte/vk-bridge';\nimport { noop } from '@vkontakte/vkjs';\nimport { resolveAppearance, VKBridgeConfigData } from '../helpers/appearance';\nimport { useDOM } from '../lib/dom';\nimport { matchMediaListAddListener, matchMediaListRemoveListener } from '../lib/matchMedia';\n\nfunction autoDetectAppearanceByBridge(\n  setAppearance: (value: AppearanceType) => void,\n  onDetectAppearanceByBridge: () => void,\n) {\n  function updateAppearance(data: VKBridgeConfigData) {\n    const initialAppearance = resolveAppearance(data);\n\n    if (initialAppearance) {\n      onDetectAppearanceByBridge();\n      setAppearance(initialAppearance);\n    }\n  }\n\n  function bridgeListener(e: VKBridgeEvent<AnyReceiveMethodName>) {\n    const { type, data } = e.detail;\n\n    if (type !== 'VKWebAppUpdateConfig') {\n      return;\n    }\n\n    updateAppearance(data as VKBridgeConfigData);\n  }\n\n  vkBridge.subscribe(bridgeListener);\n  vkBridge.send('VKWebAppGetConfig').then(updateAppearance).catch(console.error);\n\n  return () => vkBridge.unsubscribe(bridgeListener);\n}\n\nfunction autoDetectAppearance(\n  window: Window | undefined,\n  setAppearance: (value: AppearanceType) => void,\n): () => void {\n  const mediaQuery =\n    window && window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)');\n\n  if (mediaQuery === undefined) {\n    return noop;\n  }\n\n  const check = (event: MediaQueryList | MediaQueryListEvent) => {\n    // eslint-disable-next-line no-restricted-properties\n    setAppearance(event.matches ? 'dark' : 'light');\n  };\n\n  check(mediaQuery);\n  matchMediaListAddListener(mediaQuery, check);\n\n  return () => matchMediaListRemoveListener(mediaQuery, check);\n}\n\n/**\n * TODO [>=6]: удалить хук (#5049)\n * @deprecated v5.8.0\n */\nexport const useAutoDetectAppearance = (\n  appearanceProp?: AppearanceType,\n  onDetectAppearanceByBridge?: () => void,\n): AppearanceType => {\n  const { window } = useDOM();\n  const onceDetectAppearanceByBridge = React.useRef(() => {\n    onDetectAppearanceByBridge && onDetectAppearanceByBridge();\n    onceDetectAppearanceByBridge.current = noop;\n  });\n\n  const [appearance, setAppearance] = React.useState<AppearanceType>(() => {\n    if (appearanceProp) {\n      return appearanceProp;\n    }\n\n    const mediaQuery =\n      window && window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)');\n\n    // eslint-disable-next-line no-restricted-properties\n    return mediaQuery?.matches ? 'dark' : 'light';\n  });\n\n  React.useEffect(() => {\n    if (appearanceProp) {\n      setAppearance(appearanceProp);\n      return noop;\n    }\n\n    if (vkBridge.isEmbedded()) {\n      return autoDetectAppearanceByBridge(setAppearance, onceDetectAppearanceByBridge.current);\n    }\n\n    return autoDetectAppearance(window, setAppearance);\n  }, [window, appearanceProp]);\n\n  return appearance;\n};\n"]},"metadata":{},"sourceType":"module"}