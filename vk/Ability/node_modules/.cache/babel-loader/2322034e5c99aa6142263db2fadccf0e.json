{"ast":null,"code":"/**\n * Удаляет ключи `keys` из объекта и возвращает его копию\n */\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nexport function deleteObjectKeys(object) {\n  var keys = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];\n\n  var newObject = _object_spread({}, object);\n\n  keys.forEach(function (key) {\n    return delete newObject[key];\n  });\n  return newObject;\n}","map":{"version":3,"mappings":"AAAA;;;AAEC;AACD,OAAO,SAASA,gBAAT,CACLC,MADK,EACI;MACTC,wEAAY;;EAEZ,IAAMC,YAAYC,mBAAKH,MAAL,CAAlB;;EACAC,KAAKG,OAALH,CAAa,UAACI,GAAD,EAACA;WAAQ,OAAOH,SAAS,CAACG,GAAD;GAAtCJ;EACA,OAAOC,SAAP;AACF","names":["deleteObjectKeys","object","keys","newObject","_object_spread","forEach","key"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkjs\\src\\objects.ts"],"sourcesContent":["/**\n * Удаляет ключи `keys` из объекта и возвращает его копию\n */\nexport function deleteObjectKeys<T extends Record<string, any>, K extends keyof T>(\n  object: T,\n  keys: K[] = [],\n): T {\n  const newObject = { ...object };\n  keys.forEach((key) => delete newObject[key]);\n  return newObject;\n}\n"]},"metadata":{},"sourceType":"module"}