{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { _ as _sliced_to_array } from \"@swc/helpers/_/_sliced_to_array\";\nimport * as React from \"react\";\nimport { useEventListener } from \"../../hooks/useEventListener\";\nimport { usePatchChildrenRef } from \"../../hooks/usePatchChildrenRef\";\nimport { useTimeout } from \"../../hooks/useTimeout\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { Popper } from \"../Popper/Popper\";\nexport var HoverPopper = function (_param) {\n  var getRef = _param.getRef,\n      content = _param.content,\n      children = _param.children,\n      onShownChange = _param.onShownChange,\n      _shown = _param.shown,\n      _param_showDelay = _param.showDelay,\n      showDelay = _param_showDelay === void 0 ? 150 : _param_showDelay,\n      _param_hideDelay = _param.hideDelay,\n      hideDelay = _param_hideDelay === void 0 ? 150 : _param_hideDelay,\n      restProps = _object_without_properties(_param, [\"getRef\", \"content\", \"children\", \"onShownChange\", \"shown\", \"showDelay\", \"hideDelay\"]);\n\n  var _React_useState = _sliced_to_array(React.useState(_shown || false), 2),\n      computedShown = _React_useState[0],\n      setComputedShown = _React_useState[1];\n\n  var shown = typeof _shown === \"boolean\" ? _shown : computedShown;\n\n  var setShown = function (value) {\n    if (typeof _shown !== \"boolean\") {\n      setComputedShown(value);\n    }\n\n    typeof onShownChange === \"function\" && onShownChange(value);\n  };\n\n  var showTimeout = useTimeout(function () {\n    setShown(true);\n  }, showDelay);\n  var hideTimeout = useTimeout(function () {\n    setShown(false);\n  }, hideDelay);\n\n  var _usePatchChildrenRef = _sliced_to_array(usePatchChildrenRef(children), 2),\n      childRef = _usePatchChildrenRef[0],\n      child = _usePatchChildrenRef[1];\n\n  var onTargetEnter = function () {\n    hideTimeout.clear();\n    showTimeout.set();\n  };\n\n  var onTargetLeave = function () {\n    showTimeout.clear();\n    hideTimeout.set();\n  };\n\n  var targetEnterListener = useEventListener(\"pointerenter\", onTargetEnter);\n  var targetLeaveListener = useEventListener(\"pointerleave\", onTargetLeave);\n  useIsomorphicLayoutEffect(function () {\n    if (childRef.current) {\n      targetEnterListener.add(childRef.current);\n      targetLeaveListener.add(childRef.current);\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, child, shown && /*#__PURE__*/React.createElement(Popper, _object_spread_props(_object_spread({}, restProps), {\n    onMouseOver: hideTimeout.clear,\n    onMouseOut: onTargetLeave,\n    getRef: getRef,\n    targetRef: childRef\n  }), content));\n};","map":{"version":3,"mappings":";;;;AAAA,YAAYA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,mBAAT,QAAoC,iCAApC;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,yBAAT,QAA0C,qCAA1C;AACA,SAASC,MAAT,QAA0C,kBAA1C;AA6BA,OAAO,IAAMC,cAAc;MACzBC;MACAC;MACAC;MACAC;MACAC,MAAOC,UAAPD;MAAAA,0BACAE;MAAAA,0CAAY,GAAZA,GAAYC;MAAAC,0BACZC;MAAAA,0CAAY,GAAZA,GAAYD;MACTE,gDAPHV,QAOGU,EANHT,SAMGS,EALHR,UAKGQ,EAJHP,eAIGO,EAHHN,OAGGM,EAFHJ,WAEGI,EADHD,WACGC;;EAEH,IAA0CjB,yCAAMkB,QAANlB,CAAeY,UAAU,KAAzBZ,GAAyB,CAAzBA,CAA1C;EAAA,IAAOmB,gBAAmCnB,kBAA1C;EAAA,IAAsBoB,mBAAoBpB,kBAA1C;;EAEA,IAAMW,QAAQ,OAAOC,MAAP,KAAkB,SAAlB,GAA8BA,MAA9B,GAAuCO,aAArD;;EAEA,IAAME,WAAW,UAACC,KAAD,EAACA;IAChB,IAAI,OAAOV,MAAP,KAAkB,SAAtB,EAAiC;MAC/BQ,iBAAiBE,KAAjBF;IACF;;IACA,OAAOV,aAAP,KAAyB,UAAzB,IAAuCA,cAAcY,KAAdZ,CAAvC;EACF,CALA;;EAOA,IAAMa,cAAcpB,WAAW;IAC7BkB,SAAS,IAATA;EACF,CAFoBlB,EAEjBU,SAFiBV,CAApB;EAIA,IAAMqB,cAAcrB,WAAW;IAC7BkB,SAAS,KAATA;EACF,CAFoBlB,EAEjBa,SAFiBb,CAApB;;EAIA,IAA0BD,4DAAoBO,QAApBP,GAAoBO,CAApBP,CAA1B;EAAA,IAAOuB,WAAmBvB,uBAA1B;EAAA,IAAiBwB,QAASxB,uBAA1B;;EAEA,IAAMyB,gBAAgB;IACpBH,YAAYI,KAAZJ;IACAD,YAAYM,GAAZN;EACF,CAHA;;EAKA,IAAMO,gBAAgB;IACpBP,YAAYK,KAAZL;IACAC,YAAYK,GAAZL;EACF,CAHA;;EAKA,IAAMO,sBAAsB9B,iBAAiB,cAAjBA,EAAiC0B,aAAjC1B,CAA5B;EACA,IAAM+B,sBAAsB/B,iBAAiB,cAAjBA,EAAiC6B,aAAjC7B,CAA5B;EAEAG,0BAA0B;IACxB,IAAIqB,SAASQ,OAAb,EAAsB;MACpBF,oBAAoBG,GAApBH,CAAwBN,SAASQ,OAAjCF;MACAC,oBAAoBE,GAApBF,CAAwBP,SAASQ,OAAjCD;IACF;EACF,CALA5B,EAKG,EALHA;EAOA,oBACEJ,oBAACA,MAAMmC,QAAP,EAAe,IAAf,EACGT,KADH,EAEGf,sBACCX,oBAACK,MAAD,EAACA,wCACKY,SADLZ,GACKY;IACJmB,aAAaZ,YAAYI,KADrBX;IAEJoB,YAAYP,aAFRb;IAGJV,QAAQA,MAHJU;IAIJqB,WAAWb;EAJPR,CADLZ,CAAD,EAOGG,OAPH,CAHJ,CADF;AAgBF,CAnEO","names":["React","useEventListener","usePatchChildrenRef","useTimeout","useIsomorphicLayoutEffect","Popper","HoverPopper","getRef","content","children","onShownChange","shown","_shown","showDelay","_param_showDelay","_param_hideDelay","hideDelay","restProps","useState","computedShown","setComputedShown","setShown","value","showTimeout","hideTimeout","childRef","child","onTargetEnter","clear","set","onTargetLeave","targetEnterListener","targetLeaveListener","current","add","Fragment","onMouseOver","onMouseOut","targetRef"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\components\\HoverPopper\\HoverPopper.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useEventListener } from '../../hooks/useEventListener';\nimport { usePatchChildrenRef } from '../../hooks/usePatchChildrenRef';\nimport { useTimeout } from '../../hooks/useTimeout';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { Popper, PopperCommonProps } from '../Popper/Popper';\n\nexport interface HoverPopperProps extends Omit<PopperCommonProps, 'content'> {\n  /**\n   * Содержимое тултипа\n   */\n  content?: React.ReactNode;\n  /**\n   * Если передан, то тултип будет показан/скрыт в зависимости от значения свойства\n   */\n  shown?: boolean;\n  /**\n   * Вызывается при каждом изменении видимости тултипа\n   */\n  onShownChange?: (shown: boolean) => void;\n  /**\n   * Количество миллисекунд, после которых произойдет показ дропдауна\n   */\n  showDelay?: number;\n  /**\n   * Количество миллисекунд, после которых произойдет скрытие дропдауна\n   */\n  hideDelay?: number;\n  /**\n   * Либо jsx-элемент (div, button, etc.), либо компонент со свойством `getRootRef`, которое применяется к корневому элементу компонента\n   */\n  children?: React.ReactElement;\n}\n\nexport const HoverPopper = ({\n  getRef,\n  content,\n  children,\n  onShownChange,\n  shown: _shown,\n  showDelay = 150,\n  hideDelay = 150,\n  ...restProps\n}: HoverPopperProps) => {\n  const [computedShown, setComputedShown] = React.useState(_shown || false);\n\n  const shown = typeof _shown === 'boolean' ? _shown : computedShown;\n\n  const setShown = (value: boolean) => {\n    if (typeof _shown !== 'boolean') {\n      setComputedShown(value);\n    }\n    typeof onShownChange === 'function' && onShownChange(value);\n  };\n\n  const showTimeout = useTimeout(() => {\n    setShown(true);\n  }, showDelay);\n\n  const hideTimeout = useTimeout(() => {\n    setShown(false);\n  }, hideDelay);\n\n  const [childRef, child] = usePatchChildrenRef(children);\n\n  const onTargetEnter = () => {\n    hideTimeout.clear();\n    showTimeout.set();\n  };\n\n  const onTargetLeave = () => {\n    showTimeout.clear();\n    hideTimeout.set();\n  };\n\n  const targetEnterListener = useEventListener('pointerenter', onTargetEnter);\n  const targetLeaveListener = useEventListener('pointerleave', onTargetLeave);\n\n  useIsomorphicLayoutEffect(() => {\n    if (childRef.current) {\n      targetEnterListener.add(childRef.current);\n      targetLeaveListener.add(childRef.current);\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      {child}\n      {shown && (\n        <Popper\n          {...restProps}\n          onMouseOver={hideTimeout.clear}\n          onMouseOut={onTargetLeave}\n          getRef={getRef}\n          targetRef={childRef}\n        >\n          {content}\n        </Popper>\n      )}\n    </React.Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}