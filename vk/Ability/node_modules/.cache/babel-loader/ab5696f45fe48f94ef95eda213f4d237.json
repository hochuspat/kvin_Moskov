{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { _ as _sliced_to_array } from \"@swc/helpers/_/_sliced_to_array\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { Clickable } from \"../Clickable/Clickable\";\nimport { ImageBaseBadge } from \"./ImageBaseBadge/ImageBaseBadge\";\nimport { ImageBaseOverlay } from \"./ImageBaseOverlay/ImageBaseOverlay\";\nimport { ImageBaseContext } from \"./context\";\nimport { validateFallbackIcon, validateSize } from \"./validators\";\nexport { getBadgeIconSizeByImageBaseSize, getFallbackIconSizeByImageBaseSize, getOverlayIconSizeByImageBaseSize } from \"./helpers\";\nexport { ImageBaseContext };\n/**\n * @see https://vkcom.github.io/VKUI/#/ImageBase\n */\n\nexport var ImageBase = function (_param) {\n  var alt = _param.alt,\n      crossOrigin = _param.crossOrigin,\n      decoding = _param.decoding,\n      loading = _param.loading,\n      referrerPolicy = _param.referrerPolicy,\n      sizes = _param.sizes,\n      src = _param.src,\n      srcSet = _param.srcSet,\n      useMap = _param.useMap,\n      getRef = _param.getRef,\n      _param_size = _param.size,\n      size = _param_size === void 0 ? 24 : _param_size,\n      width = _param.width,\n      height = _param.height,\n      style = _param.style,\n      _param_withBorder = _param.withBorder,\n      withBorder = _param_withBorder === void 0 ? true : _param_withBorder,\n      fallbackIconProp = _param.fallbackIcon,\n      children = _param.children,\n      onLoad = _param.onLoad,\n      onError = _param.onError,\n      restProps = _object_without_properties(_param, [\"alt\", \"crossOrigin\", \"decoding\", \"loading\", \"referrerPolicy\", \"sizes\", \"src\", \"srcSet\", \"useMap\", \"getRef\", \"size\", \"width\", \"height\", \"style\", \"withBorder\", \"fallbackIcon\", \"children\", \"onLoad\", \"onError\"]);\n\n  var _React_useState = _sliced_to_array(React.useState(false), 2),\n      loaded = _React_useState[0],\n      setLoaded = _React_useState[1];\n\n  var _React_useState1 = _sliced_to_array(React.useState(false), 2),\n      failed = _React_useState1[0],\n      setFailed = _React_useState1[1];\n\n  var hasSrc = src || srcSet;\n  var needShowFallbackIcon = (failed || !hasSrc) && /*#__PURE__*/React.isValidElement(fallbackIconProp);\n  var fallbackIcon = needShowFallbackIcon ? fallbackIconProp : null;\n\n  if (process.env.NODE_ENV === \"development\") {\n    validateSize(size);\n\n    if (fallbackIcon) {\n      validateFallbackIcon(size, {\n        name: \"fallbackIcon\",\n        value: fallbackIcon\n      });\n    }\n  }\n\n  var handleImageLoad = function (event) {\n    if (loaded) {\n      return;\n    }\n\n    setLoaded(true);\n    setFailed(false);\n    onLoad === null || onLoad === void 0 ? void 0 : onLoad(event);\n  };\n\n  var handleImageError = function (event) {\n    setLoaded(false);\n    setFailed(true);\n    onError === null || onError === void 0 ? void 0 : onError(event);\n  };\n\n  var imgRef = useExternRef(getRef);\n  var isOnLoadStatusCheckedRef = React.useRef(false);\n  React.useEffect(function dispatchLoadEventForAlreadyLoadedResourceIfReactInitializedLater() {\n    if (isOnLoadStatusCheckedRef.current) {\n      return;\n    }\n\n    isOnLoadStatusCheckedRef.current = true;\n\n    if (imgRef.current && imgRef.current.complete && !loaded) {\n      var event = new Event(\"load\");\n      imgRef.current.dispatchEvent(event);\n    }\n  }, [imgRef, loaded]);\n  return /*#__PURE__*/React.createElement(ImageBaseContext.Provider, {\n    value: {\n      size: size\n    }\n  }, /*#__PURE__*/React.createElement(Clickable, _object_spread({\n    style: _object_spread_props(_object_spread({}, style), {\n      width: size,\n      height: size\n    }),\n    baseClassName: classNames(\"vkuiImageBase\", loaded && \"vkuiImageBase--loaded\")\n  }, restProps), hasSrc && /*#__PURE__*/React.createElement(\"img\", {\n    ref: imgRef,\n    alt: alt,\n    className: \"vkuiImageBase__img\",\n    crossOrigin: crossOrigin,\n    decoding: decoding,\n    loading: loading,\n    referrerPolicy: referrerPolicy,\n    sizes: sizes,\n    src: src,\n    srcSet: srcSet,\n    useMap: useMap,\n    width: width,\n    height: height,\n    onLoad: handleImageLoad,\n    onError: handleImageError\n  }), fallbackIcon && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiImageBase__fallback\"\n  }, fallbackIcon), children, withBorder && /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-hidden\": true,\n    className: \"vkuiImageBase__border\"\n  })));\n};\nImageBase.Badge = ImageBaseBadge;\nImageBase.Overlay = ImageBaseOverlay;","map":{"version":3,"mappings":"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","names":["React","classNames","useExternRef","Clickable","ImageBaseBadge","ImageBaseOverlay","ImageBaseContext","validateFallbackIcon","validateSize","getBadgeIconSizeByImageBaseSize","getFallbackIconSizeByImageBaseSize","getOverlayIconSizeByImageBaseSize","ImageBase","alt","crossOrigin","decoding","loading","referrerPolicy","sizes","src","srcSet","useMap","getRef","size","_param_size","width","height","style","withBorder","_param_withBorder","fallbackIcon","fallbackIconProp","children","onLoad","onError","restProps","useState","loaded","setLoaded","failed","setFailed","hasSrc","needShowFallbackIcon","isValidElement","process","env","NODE_ENV","name","value","handleImageLoad","event","handleImageError","imgRef","isOnLoadStatusCheckedRef","useRef","useEffect","dispatchLoadEventForAlreadyLoadedResourceIfReactInitializedLater","current","complete","Event","dispatchEvent","Provider","_object_spread_props","baseClassName","img","ref","className","div","aria-hidden","Badge","Overlay"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\components\\ImageBase\\ImageBase.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport type { AnchorHTMLAttributesOnly, HasRef, HasRootRef, LiteralUnion } from '../../types';\nimport { Clickable } from '../Clickable/Clickable';\nimport { ImageBaseBadge, type ImageBaseBadgeProps } from './ImageBaseBadge/ImageBaseBadge';\nimport { ImageBaseOverlay, type ImageBaseOverlayProps } from './ImageBaseOverlay/ImageBaseOverlay';\nimport { ImageBaseContext } from './context';\nimport type { ImageBaseContextProps, ImageBaseExpectedIconProps, ImageBaseSize } from './types';\nimport { validateFallbackIcon, validateSize } from './validators';\nimport styles from './ImageBase.module.css';\n\nexport type {\n  ImageBaseSize,\n  ImageBaseExpectedIconProps,\n  ImageBaseBadgeProps,\n  ImageBaseOverlayProps,\n  ImageBaseContextProps,\n};\n\nexport {\n  getBadgeIconSizeByImageBaseSize,\n  getFallbackIconSizeByImageBaseSize,\n  getOverlayIconSizeByImageBaseSize,\n} from './helpers';\n\nexport { ImageBaseContext };\n\nexport interface ImageBaseProps\n  extends React.ImgHTMLAttributes<HTMLElement>,\n    AnchorHTMLAttributesOnly,\n    HasRootRef<HTMLDivElement>,\n    HasRef<HTMLImageElement> {\n  /**\n   * Задаёт размер картинки.\n   *\n   * Используйте размеры заданные дизайн-системой `16 | 20 | 24 | 28 | 32 | 36 | 40 | 44 | 48 | 56 | 64 | 72 | 80 | 88 | 96`.\n   *\n   * > ⚠️ Использование кастомного размера – это пограничный кейс.\n   */\n  size?: LiteralUnion<ImageBaseSize, number>;\n  /**\n   * Включает или отключает обводку.\n   */\n  withBorder?: boolean;\n  /**\n   * Фолбек на случай, если картинка не прогрузилась.\n   *\n   * > 📝 Нужный для `<ImageBase size={...} />` размер можно узнать из функции `getFallbackIconSizeByImageBaseSize()`.\n   *\n   * > Предпочтительней использовать иконки из `@vkontakte/icons`.\n   *\n   * > 📊️ Если вы хотите передать кастомную иконку, то следует именовать её по шаблону `Icon<size><name>`. Или же\n   * > чтобы в неё был передан параметр `width`. Тогда мы сможем выводить в консоль подсказку правильного ли размера вы\n   * > использовали иконку.\n   *\n   * > ⚠️ Может перекрывать `children`.\n   */\n  fallbackIcon?: React.ReactElement<ImageBaseExpectedIconProps>;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/ImageBase\n */\nexport const ImageBase = ({\n  alt,\n  crossOrigin,\n  decoding,\n  loading,\n  referrerPolicy,\n  sizes,\n  src,\n  srcSet,\n  useMap,\n  getRef,\n  size = 24,\n  width,\n  height,\n  style,\n  withBorder = true,\n  fallbackIcon: fallbackIconProp,\n  children,\n  onLoad,\n  onError,\n  ...restProps\n}: ImageBaseProps) => {\n  const [loaded, setLoaded] = React.useState(false);\n  const [failed, setFailed] = React.useState(false);\n\n  const hasSrc = src || srcSet;\n  const needShowFallbackIcon = (failed || !hasSrc) && React.isValidElement(fallbackIconProp);\n\n  const fallbackIcon = needShowFallbackIcon ? fallbackIconProp : null;\n\n  if (process.env.NODE_ENV === 'development') {\n    validateSize(size);\n    if (fallbackIcon) {\n      validateFallbackIcon(size, { name: 'fallbackIcon', value: fallbackIcon });\n    }\n  }\n\n  const handleImageLoad = (event: React.SyntheticEvent<HTMLImageElement>) => {\n    if (loaded) {\n      return;\n    }\n\n    setLoaded(true);\n    setFailed(false);\n    onLoad?.(event);\n  };\n\n  const handleImageError = (event: React.SyntheticEvent<HTMLImageElement>) => {\n    setLoaded(false);\n    setFailed(true);\n    onError?.(event);\n  };\n\n  const imgRef = useExternRef(getRef);\n  const isOnLoadStatusCheckedRef = React.useRef(false);\n  React.useEffect(\n    function dispatchLoadEventForAlreadyLoadedResourceIfReactInitializedLater() {\n      if (isOnLoadStatusCheckedRef.current) {\n        return;\n      }\n      isOnLoadStatusCheckedRef.current = true;\n\n      if (imgRef.current && imgRef.current.complete && !loaded) {\n        const event = new Event('load');\n        imgRef.current.dispatchEvent(event);\n      }\n    },\n    [imgRef, loaded],\n  );\n\n  return (\n    <ImageBaseContext.Provider value={{ size }}>\n      <Clickable\n        style={{ ...style, width: size, height: size }}\n        baseClassName={classNames(styles['ImageBase'], loaded && styles['ImageBase--loaded'])}\n        {...restProps}\n      >\n        {hasSrc && (\n          <img\n            ref={imgRef}\n            alt={alt}\n            className={styles['ImageBase__img']}\n            crossOrigin={crossOrigin}\n            decoding={decoding}\n            loading={loading}\n            referrerPolicy={referrerPolicy}\n            sizes={sizes}\n            src={src}\n            srcSet={srcSet}\n            useMap={useMap}\n            width={width}\n            height={height}\n            onLoad={handleImageLoad}\n            onError={handleImageError}\n          />\n        )}\n        {fallbackIcon && <div className={styles['ImageBase__fallback']}>{fallbackIcon}</div>}\n        {children}\n        {withBorder && <div aria-hidden className={styles['ImageBase__border']} />}\n      </Clickable>\n    </ImageBaseContext.Provider>\n  );\n};\n\nImageBase.Badge = ImageBaseBadge;\n\nImageBase.Overlay = ImageBaseOverlay;\n"]},"metadata":{},"sourceType":"module"}