{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport * as React from \"react\";\nimport { HorizontalScroll } from \"../HorizontalScroll/HorizontalScroll\";\nimport { RootComponent } from \"../RootComponent/RootComponent\";\n\nvar defaultScrollToLeft = function (x) {\n  return x - 240;\n};\n\nvar defaultScrollToRight = function (x) {\n  return x + 240;\n};\n/**\n * @see https://vkcom.github.io/VKUI/#/SubnavigationBar\n */\n\n\nexport var SubnavigationBar = function (_param) {\n  var _param_mode = _param.mode,\n      mode = _param_mode === void 0 ? \"overflow\" : _param_mode,\n      children = _param.children,\n      _param_showArrows = _param.showArrows,\n      showArrows = _param_showArrows === void 0 ? true : _param_showArrows,\n      _param_getScrollToLeft = _param.getScrollToLeft,\n      getScrollToLeft = _param_getScrollToLeft === void 0 ? defaultScrollToLeft : _param_getScrollToLeft,\n      _param_getScrollToRight = _param.getScrollToRight,\n      getScrollToRight = _param_getScrollToRight === void 0 ? defaultScrollToRight : _param_getScrollToRight,\n      scrollAnimationDuration = _param.scrollAnimationDuration,\n      restProps = _object_without_properties(_param, [\"mode\", \"children\", \"showArrows\", \"getScrollToLeft\", \"getScrollToRight\", \"scrollAnimationDuration\"]);\n\n  var ScrollWrapper;\n  var scrollWrapperProps = {};\n\n  if (mode === \"fixed\") {\n    ScrollWrapper = \"div\";\n  } else {\n    ScrollWrapper = HorizontalScroll;\n    scrollWrapperProps = {\n      showArrows: showArrows,\n      getScrollToLeft: getScrollToLeft,\n      getScrollToRight: getScrollToRight,\n      scrollAnimationDuration: scrollAnimationDuration\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(RootComponent, _object_spread({\n    // TODO: [>=6]\n    // Заменить у SubnavigationButton `display: inline-block` на `width: 100%`\n    // и удалить применение селектора в `SubnavigationButton.module.css`.\n    // 2. Заменить глобальный селектор на CSS Modules `styles['SubnavigationBar--mode-fixed']`\n    // mode !== 'fixed' && classNames('vkuiInternalSubnavigationBar--mode-fixed')\n    baseClassName: mode === \"fixed\" ? \"vkuiInternalSubnavigationBar--mode-fixed\" : undefined\n  }, restProps), /*#__PURE__*/React.createElement(ScrollWrapper, _object_spread({\n    className: \"vkuiSubnavigationBar__in\"\n  }, scrollWrapperProps), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"vkuiSubnavigationBar__scrollIn\"\n  }, React.Children.map(children, function (child, idx) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: idx,\n      className: \"vkuiSubnavigationBar__item\"\n    }, child);\n  }))));\n};","map":{"version":3,"mappings":";;AAAA,YAAYA,KAAZ,MAAuB,OAAvB;AAEA,SACEC,gBADF,QAIO,sCAJP;AAKA,SAASC,aAAT,QAA8B,gCAA9B;;AAYA,IAAMC,sBAA6C,UAACC,CAAD,EAACA;SAAMA,IAAI;CAA9D;;AAEA,IAAMC,uBAA8C,UAACD,CAAD,EAACA;SAAMA,IAAI;CAA/D;AAEA;;;;;AAGA,OAAO,IAAME,mBAAmB;2BAC9BC;MAAAA,gCAAO,UAAPA,GAAOC;MACPC;MAAAA,2BACAC;MAAAA,4CAAa,IAAbA,GAAaC;MAAAC,gCACbC;MAAAA,sDAAkBV,mBAAlBU,GAAkBV;MAAAA,iCAClBW;MAAAA,wDAAmBT,oBAAnBS,GAAmBT;MACnBU;MACGC,gDANHT,MAMGS,EALHP,UAKGO,EAJHN,YAIGM,EAHHH,iBAGGG,EAFHF,kBAEGE,EADHD,yBACGC;;EAEH,IAAIC,aAAJ;EACA,IAAIC,qBAAqB,EAAzB;;EAEA,IAAIX,SAAS,OAAb,EAAsB;IACpBU,gBAAgB,KAAhBA;EACF,CAFA,MAEO;IACLA,gBAAgBhB,gBAAhBgB;IACAC,qBAAqB;MACnBR,sBADmB;MAEnBG,gCAFmB;MAGnBC,kCAHmB;MAInBC;IAJmB,CAArBG;EAMF;;EAEA,oBACElB,oBAACE,aAAD,EAACA;IACC;IACA;IACA;IACA;IACA;IACAiB,eAAeZ,SAAS,OAATA,GAAmB,0CAAnBA,GAAgEa;EANhFlB,GAOKc,SAPLd,CAAD,EAOMc,aAEJhB,oBAACiB,aAAD,EAACA;IAAcI,SAAS;EAAvBJ,GAA6DC,kBAA7DD,CAAD,EAA8DC,aAC5DlB,oBAACsB,IAAD,EAACA;IAAGD,SAAS;EAAZC,CAAD,EACGtB,MAAMuB,QAANvB,CAAewB,GAAfxB,CAAmBS,QAAnBT,EAA6B,UAACyB,KAAD,EAAQC,GAAR,EAAQA;wBACpC1B,oBAAC2B,IAAD,EAACA;MAAGC,KAAKF,GAARC;MAAaN,SAAS;IAAtBM,CAAD,EACGF,KADH;GADDzB,CADH,CADF,CATF,CADF;AAqBF,CA7CO","names":["React","HorizontalScroll","RootComponent","defaultScrollToLeft","x","defaultScrollToRight","SubnavigationBar","mode","_param_mode","children","showArrows","_param_showArrows","_param_getScrollToLeft","getScrollToLeft","getScrollToRight","scrollAnimationDuration","restProps","ScrollWrapper","scrollWrapperProps","baseClassName","undefined","className","ul","Children","map","child","idx","li","key"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\components\\SubnavigationBar\\SubnavigationBar.tsx"],"sourcesContent":["import * as React from 'react';\nimport { HTMLAttributesWithRootRef } from '../../types';\nimport {\n  HorizontalScroll,\n  HorizontalScrollProps,\n  ScrollPositionHandler,\n} from '../HorizontalScroll/HorizontalScroll';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport styles from './SubnavigationBar.module.css';\n\nexport interface SubnavigationBarProps\n  extends HTMLAttributesWithRootRef<HTMLDivElement>,\n    Pick<\n      HorizontalScrollProps,\n      'showArrows' | 'getScrollToLeft' | 'getScrollToRight' | 'scrollAnimationDuration'\n    > {\n  mode?: 'fixed' | 'overflow';\n}\n\nconst defaultScrollToLeft: ScrollPositionHandler = (x) => x - 240;\n\nconst defaultScrollToRight: ScrollPositionHandler = (x) => x + 240;\n\n/**\n * @see https://vkcom.github.io/VKUI/#/SubnavigationBar\n */\nexport const SubnavigationBar = ({\n  mode = 'overflow',\n  children,\n  showArrows = true,\n  getScrollToLeft = defaultScrollToLeft,\n  getScrollToRight = defaultScrollToRight,\n  scrollAnimationDuration,\n  ...restProps\n}: SubnavigationBarProps) => {\n  let ScrollWrapper: React.ElementType;\n  let scrollWrapperProps = {};\n\n  if (mode === 'fixed') {\n    ScrollWrapper = 'div';\n  } else {\n    ScrollWrapper = HorizontalScroll;\n    scrollWrapperProps = {\n      showArrows,\n      getScrollToLeft,\n      getScrollToRight,\n      scrollAnimationDuration,\n    };\n  }\n\n  return (\n    <RootComponent\n      // TODO: [>=6]\n      // Заменить у SubnavigationButton `display: inline-block` на `width: 100%`\n      // и удалить применение селектора в `SubnavigationButton.module.css`.\n      // 2. Заменить глобальный селектор на CSS Modules `styles['SubnavigationBar--mode-fixed']`\n      // mode !== 'fixed' && classNames('vkuiInternalSubnavigationBar--mode-fixed')\n      baseClassName={mode === 'fixed' ? 'vkuiInternalSubnavigationBar--mode-fixed' : undefined}\n      {...restProps}\n    >\n      <ScrollWrapper className={styles['SubnavigationBar__in']} {...scrollWrapperProps}>\n        <ul className={styles['SubnavigationBar__scrollIn']}>\n          {React.Children.map(children, (child, idx) => (\n            <li key={idx} className={styles['SubnavigationBar__item']}>\n              {child}\n            </li>\n          ))}\n        </ul>\n      </ScrollWrapper>\n    </RootComponent>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}