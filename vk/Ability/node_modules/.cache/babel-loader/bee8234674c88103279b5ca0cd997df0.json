{"ast":null,"code":"import { querystring } from \"@vkontakte/vkjs\";\nimport { computeBrowserInfo } from \"./browser\";\nimport { canUseDOM } from \"./dom\";\nexport var Platform;\n\n(function (Platform) {\n  Platform[\"ANDROID\"] = \"android\";\n  Platform[\"IOS\"] = \"ios\";\n  Platform[\"VKCOM\"] = \"vkcom\";\n})(Platform || (Platform = {}));\n/**\n * TODO [>=6]: удалить из VKUI\n *\n * Значение, которое передаётся в качестве query-параметра при открытии VK Mini Apps\n * @see {@link https://dev.vk.com/mini-apps/development/launch-params#vk_platform vk_platform}\n *\n * @deprecated v5.8.0\n */\n\n\nfunction getPlatformByQueryString(queryString) {\n  var PLATFORM_ALIAS = {\n    desktop_web: \"vkcom\"\n  };\n\n  var isPlatformAlias = function (platformAlias) {\n    return platformAlias in PLATFORM_ALIAS;\n  };\n\n  try {\n    var parsedQuery = querystring.parse(queryString);\n    var platformAliasByQuery = parsedQuery[\"vk_platform\"];\n    return typeof platformAliasByQuery === \"string\" && isPlatformAlias(platformAliasByQuery) ? PLATFORM_ALIAS[platformAliasByQuery] : undefined;\n  } catch (e) {\n    console.warn(e);\n    return;\n  }\n}\n\nvar platformByQueryString = canUseDOM ? getPlatformByQueryString(location.search) : undefined;\nexport function platform(browserInfo) {\n  if (platformByQueryString) {\n    return platformByQueryString;\n  }\n\n  if (!browserInfo) {\n    browserInfo = computeBrowserInfo();\n  }\n\n  return browserInfo.system === \"ios\" ? \"ios\" : \"android\";\n}","map":{"version":3,"mappings":"AAAA,SAASA,WAAT,QAA4B,iBAA5B;AAEA,SAAsBC,kBAAtB,QAAgD,WAAhD;AACA,SAASC,SAAT,QAA0B,OAA1B;;;WAEYC;;;;GAAAA;AAMZ;;;;;;;;;;AAQA,SAASC,wBAAT,CAAkCC,WAAlC,EAAqD;EACnD,IAAMC,iBAAiB;IAAEC,WAAW;EAAb,CAAvB;;EACA,IAAMC,kBAAkB,UAACC,aAAD,EAACA;WACvBA,iBAAiBH;GADnB;;EAEA,IAAI;IACF,IAAMI,cAAcV,YAAYW,KAAZX,CAAkBK,WAAlBL,CAApB;IACA,IAAMY,uBAAuBF,WAAW,CAAC,aAAD,CAAxC;IACA,OAAO,OAAOE,oBAAP,KAAgC,QAAhC,IAA4CJ,gBAAgBI,oBAAhBJ,CAA5C,GACHF,cAAc,CAACM,oBAAD,CADX,GAEHC,SAFJ;EAGF,CANA,CAME,OAAOC,CAAP,EAAU;IACVC,QAAQC,IAARD,CAAaD,CAAbC;IACA;EACF;AACF;;AAEA,IAAME,wBAAwBf,YAAYE,yBAAyBc,SAASC,MAAlCf,CAAZF,GAAwDW,SAAtF;AAIA,OAAO,SAASO,QAAT,CAAkBC,WAAlB,EAA2C;EAChD,IAAIJ,qBAAJ,EAA2B;IACzB,OAAOA,qBAAP;EACF;;EAEA,IAAI,CAACI,WAAL,EAAkB;IAChBA,cAAcpB,oBAAdoB;EACF;;EAEA,OAAOA,YAAYC,MAAZD,KAAuB,KAAvBA,GAAuB,KAAvBA,GAAuB,SAA9B;AACF","names":["querystring","computeBrowserInfo","canUseDOM","Platform","getPlatformByQueryString","queryString","PLATFORM_ALIAS","desktop_web","isPlatformAlias","platformAlias","parsedQuery","parse","platformAliasByQuery","undefined","e","console","warn","platformByQueryString","location","search","platform","browserInfo","system"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\lib\\platform.ts"],"sourcesContent":["import { querystring } from '@vkontakte/vkjs';\nimport { LiteralUnion } from '../types';\nimport { BrowserInfo, computeBrowserInfo } from './browser';\nimport { canUseDOM } from './dom';\n\nexport enum Platform {\n  ANDROID = 'android',\n  IOS = 'ios',\n  VKCOM = 'vkcom',\n}\n\n/**\n * TODO [>=6]: удалить из VKUI\n *\n * Значение, которое передаётся в качестве query-параметра при открытии VK Mini Apps\n * @see {@link https://dev.vk.com/mini-apps/development/launch-params#vk_platform vk_platform}\n *\n * @deprecated v5.8.0\n */\nfunction getPlatformByQueryString(queryString: string): Platform | undefined {\n  const PLATFORM_ALIAS = { desktop_web: Platform.VKCOM };\n  const isPlatformAlias = (platformAlias: string): platformAlias is keyof typeof PLATFORM_ALIAS =>\n    platformAlias in PLATFORM_ALIAS;\n  try {\n    const parsedQuery = querystring.parse(queryString);\n    const platformAliasByQuery = parsedQuery['vk_platform'];\n    return typeof platformAliasByQuery === 'string' && isPlatformAlias(platformAliasByQuery)\n      ? PLATFORM_ALIAS[platformAliasByQuery]\n      : undefined;\n  } catch (e) {\n    console.warn(e);\n    return;\n  }\n}\n\nconst platformByQueryString = canUseDOM ? getPlatformByQueryString(location.search) : undefined;\n\nexport type PlatformType = LiteralUnion<'android' | 'ios' | 'vkcom', string>;\n\nexport function platform(browserInfo?: BrowserInfo): PlatformType {\n  if (platformByQueryString) {\n    return platformByQueryString;\n  }\n\n  if (!browserInfo) {\n    browserInfo = computeBrowserInfo();\n  }\n\n  return browserInfo.system === 'ios' ? Platform.IOS : Platform.ANDROID;\n}\n"]},"metadata":{},"sourceType":"module"}