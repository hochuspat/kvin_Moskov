{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport * as React from \"react\";\nimport { classNames, hasReactNode } from \"@vkontakte/vkjs\";\nimport { Card } from \"../Card/Card\";\nimport { Tappable } from \"../Tappable/Tappable\";\nimport { Caption } from \"../Typography/Caption/Caption\";\nimport { Footnote } from \"../Typography/Footnote/Footnote\";\nimport { Headline } from \"../Typography/Headline/Headline\";\nimport { Text } from \"../Typography/Text/Text\";\n/**\n * @see https://vkcom.github.io/VKUI/#/ContentCard\n */\n\nexport var ContentCard = function (_param) {\n  var subtitle = _param.subtitle,\n      header = _param.header,\n      text = _param.text,\n      caption = _param.caption,\n      // card props\n  className = _param.className,\n      _param_mode = _param.mode,\n      mode = _param_mode === void 0 ? \"shadow\" : _param_mode,\n      style = _param.style,\n      getRootRef = _param.getRootRef,\n      // img props\n  getRef = _param.getRef,\n      maxHeight = _param.maxHeight,\n      src = _param.src,\n      srcSet = _param.srcSet,\n      _param_alt = _param.alt,\n      alt = _param_alt === void 0 ? \"\" : _param_alt,\n      width = _param.width,\n      height = _param.height,\n      crossOrigin = _param.crossOrigin,\n      decoding = _param.decoding,\n      loading = _param.loading,\n      referrerPolicy = _param.referrerPolicy,\n      sizes = _param.sizes,\n      useMap = _param.useMap,\n      _param_hasHover = _param.hasHover,\n      hasHover = _param_hasHover === void 0 ? false : _param_hasHover,\n      _param_hasActive = _param.hasActive,\n      hasActive = _param_hasActive === void 0 ? false : _param_hasActive,\n      restProps = _object_without_properties(_param, [\"subtitle\", \"header\", \"text\", \"caption\", \"className\", \"mode\", \"style\", \"getRootRef\", \"getRef\", \"maxHeight\", \"src\", \"srcSet\", \"alt\", \"width\", \"height\", \"crossOrigin\", \"decoding\", \"loading\", \"referrerPolicy\", \"sizes\", \"useMap\", \"hasHover\", \"hasActive\"]);\n\n  return /*#__PURE__*/React.createElement(Card, {\n    mode: mode,\n    getRootRef: getRootRef,\n    style: style,\n    className: classNames(restProps.disabled && \"vkuiContentCard--disabled\", className)\n  }, /*#__PURE__*/React.createElement(Tappable, _object_spread_props(_object_spread({}, restProps), {\n    disabled: restProps.disabled || !restProps.onClick && !restProps.href,\n    hasHover: hasHover,\n    hasActive: hasActive,\n    className: \"vkuiContentCard__tappable\"\n  }), (src || srcSet) && /*#__PURE__*/React.createElement(\"img\", {\n    ref: getRef,\n    className: \"vkuiContentCard__img\",\n    src: src,\n    srcSet: srcSet,\n    alt: alt,\n    crossOrigin: crossOrigin,\n    decoding: decoding,\n    loading: loading,\n    referrerPolicy: referrerPolicy,\n    sizes: sizes,\n    useMap: useMap,\n    height: height,\n    style: {\n      maxHeight: maxHeight\n    },\n    width: \"100%\"\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiContentCard__body\"\n  }, hasReactNode(subtitle) && /*#__PURE__*/React.createElement(Caption, {\n    className: classNames(\"vkuiContentCard__text\", \"vkuiContentCard__subtitle\"),\n    weight: \"1\",\n    level: \"3\",\n    caps: true\n  }, subtitle), hasReactNode(header) && /*#__PURE__*/React.createElement(Headline, {\n    className: \"vkuiContentCard__text\",\n    weight: \"2\",\n    level: \"1\"\n  }, header), hasReactNode(text) && /*#__PURE__*/React.createElement(Text, {\n    className: \"vkuiContentCard__text\"\n  }, text), hasReactNode(caption) && /*#__PURE__*/React.createElement(Footnote, {\n    className: classNames(\"vkuiContentCard__text\", \"vkuiContentCard__caption\")\n  }, caption))));\n};","map":{"version":3,"mappings":"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","names":["React","classNames","hasReactNode","Card","Tappable","Caption","Footnote","Headline","Text","ContentCard","subtitle","header","text","caption","className","mode","_param_mode","style","getRootRef","getRef","maxHeight","src","srcSet","alt","_param_alt","width","height","crossOrigin","decoding","loading","referrerPolicy","sizes","useMap","hasHover","_param_hasHover","_param_hasActive","hasActive","restProps","disabled","onClick","href","img","ref","div","weight","level","caps"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\components\\ContentCard\\ContentCard.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, hasReactNode } from '@vkontakte/vkjs';\nimport { HasRef, HasRootRef } from '../../types';\nimport { Card, CardProps } from '../Card/Card';\nimport { Tappable, TappableProps } from '../Tappable/Tappable';\nimport { Caption } from '../Typography/Caption/Caption';\nimport { Footnote } from '../Typography/Footnote/Footnote';\nimport { Headline } from '../Typography/Headline/Headline';\nimport { Text } from '../Typography/Text/Text';\nimport styles from './ContentCard.module.css';\n\nexport interface ContentCardProps\n  extends HasRootRef<HTMLDivElement>,\n    Omit<TappableProps, 'getRootRef' | 'crossOrigin'>,\n    Omit<React.ImgHTMLAttributes<HTMLImageElement>, keyof React.HTMLAttributes<HTMLImageElement>>,\n    HasRef<HTMLImageElement> {\n  /**\n   Текст над заголовком\n   */\n  subtitle?: React.ReactNode;\n  /**\n   Заголовок\n   */\n  header?: React.ReactNode;\n  /**\n   Текст\n   */\n  text?: React.ReactNode;\n  /**\n   Нижний текст\n   */\n  caption?: React.ReactNode;\n  /**\n    Максимальная высота изображения\n   */\n  maxHeight?: number;\n  mode?: CardProps['mode'];\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/ContentCard\n */\nexport const ContentCard = ({\n  subtitle,\n  header,\n  text,\n  caption,\n  // card props\n  className,\n  mode = 'shadow',\n  style,\n  getRootRef,\n  // img props\n  getRef,\n  maxHeight,\n  src,\n  srcSet,\n  alt = '',\n  width,\n  height,\n  crossOrigin,\n  decoding,\n  loading,\n  referrerPolicy,\n  sizes,\n  useMap,\n  hasHover = false,\n  hasActive = false,\n  ...restProps\n}: ContentCardProps) => {\n  return (\n    <Card\n      mode={mode}\n      getRootRef={getRootRef}\n      style={style}\n      className={classNames(restProps.disabled && styles['ContentCard--disabled'], className)}\n    >\n      <Tappable\n        {...restProps}\n        disabled={restProps.disabled || (!restProps.onClick && !restProps.href)}\n        hasHover={hasHover}\n        hasActive={hasActive}\n        className={styles['ContentCard__tappable']}\n      >\n        {(src || srcSet) && (\n          <img\n            ref={getRef}\n            className={styles['ContentCard__img']}\n            src={src}\n            srcSet={srcSet}\n            alt={alt}\n            crossOrigin={crossOrigin}\n            decoding={decoding}\n            loading={loading}\n            referrerPolicy={referrerPolicy}\n            sizes={sizes}\n            useMap={useMap}\n            height={height}\n            style={{ maxHeight }}\n            width=\"100%\"\n          />\n        )}\n        <div className={styles['ContentCard__body']}>\n          {hasReactNode(subtitle) && (\n            <Caption\n              className={classNames(styles['ContentCard__text'], styles['ContentCard__subtitle'])}\n              weight=\"1\"\n              level=\"3\"\n              caps\n            >\n              {subtitle}\n            </Caption>\n          )}\n          {hasReactNode(header) && (\n            <Headline className={styles['ContentCard__text']} weight=\"2\" level=\"1\">\n              {header}\n            </Headline>\n          )}\n          {hasReactNode(text) && <Text className={styles['ContentCard__text']}>{text}</Text>}\n          {hasReactNode(caption) && (\n            <Footnote\n              className={classNames(styles['ContentCard__text'], styles['ContentCard__caption'])}\n            >\n              {caption}\n            </Footnote>\n          )}\n        </div>\n      </Tappable>\n    </Card>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}