{"ast":null,"code":"import { _ as _define_property } from \"@swc/helpers/_/_define_property\";\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport { useAutoFocus } from \"../../hooks/useAutoFocus\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { SizeType } from \"../../lib/adaptivity\";\nimport { getFormFieldModeFromSelectType } from \"../../lib/select\";\nimport { DropdownIcon } from \"../DropdownIcon/DropdownIcon\";\nimport { FormField } from \"../FormField/FormField\";\nimport { SelectTypography } from \"../SelectTypography/SelectTypography\";\n\nvar sizeYClassNames = _define_property({\n  none: \"vkuiSelect--sizeY-none\"\n}, SizeType.COMPACT, \"vkuiSelect--sizeY-compact\");\n/**\n * @see https://vkcom.github.io/VKUI/#/SelectMimicry\n */\n\n\nexport var SelectMimicry = function (_param) {\n  var _param_tabIndex = _param.tabIndex,\n      tabIndex = _param_tabIndex === void 0 ? 0 : _param_tabIndex,\n      placeholder = _param.placeholder,\n      children = _param.children,\n      align = _param.align,\n      getRootRef = _param.getRootRef,\n      multiline = _param.multiline,\n      disabled = _param.disabled,\n      onClick = _param.onClick,\n      before = _param.before,\n      _param_after = _param.after,\n      after = _param_after === void 0 ? /*#__PURE__*/React.createElement(DropdownIcon, null) : _param_after,\n      _param_selectType = _param.selectType,\n      selectType = _param_selectType === void 0 ? \"default\" : _param_selectType,\n      status = _param.status,\n      className = _param.className,\n      autoFocus = _param.autoFocus,\n      restProps = _object_without_properties(_param, [\"tabIndex\", \"placeholder\", \"children\", \"align\", \"getRootRef\", \"multiline\", \"disabled\", \"onClick\", \"before\", \"after\", \"selectType\", \"status\", \"className\", \"autoFocus\"]);\n\n  var rootRef = useExternRef(getRootRef);\n\n  var _useAdaptivity = useAdaptivity(),\n      _useAdaptivity_sizeY = _useAdaptivity.sizeY,\n      sizeY = _useAdaptivity_sizeY === void 0 ? \"none\" : _useAdaptivity_sizeY;\n\n  var title = children || placeholder;\n  useAutoFocus(rootRef, autoFocus);\n  return /*#__PURE__*/React.createElement(FormField, _object_spread_props(_object_spread({}, restProps), {\n    tabIndex: disabled ? undefined : tabIndex,\n    className: classNames(\"vkuiSelect\", sizeY !== SizeType.REGULAR && sizeYClassNames[sizeY], !children && \"vkuiSelect--empty\", multiline && \"vkuiSelect--multiline\", align === \"center\" && \"vkuiSelect--align-center\", align === \"right\" && \"vkuiSelect--align-right\", before && \"vkuiSelect--hasBefore\", className),\n    getRootRef: rootRef,\n    onClick: disabled ? undefined : onClick,\n    disabled: disabled,\n    before: before,\n    after: after,\n    mode: getFormFieldModeFromSelectType(selectType),\n    status: status\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiSelect__container\"\n  }, /*#__PURE__*/React.createElement(SelectTypography, {\n    selectType: selectType,\n    className: \"vkuiSelect__title\"\n  }, title)));\n};","map":{"version":3,"mappings":";;;;AAAA,YAAYA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,8BAAT,QAA+C,kBAA/C;AAEA,SAASC,YAAT,QAA6B,8BAA7B;AACA,SAASC,SAAT,QAA0C,wBAA1C;AAEA,SAASC,gBAAT,QAAiC,sCAAjC;;AAGA,IAAMC;EACJC,IAAI;AADAD,GAEHL,SAASO,OAFNF,EAEa,2BAFbA,CAAN;AAcA;;;;;AAGA,OAAO,IAAMG,gBAAgB;+BAC3BC;MAAAA,wCAAW,CAAXA,GAAWC;MACXC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MAAAA,sBACAC;MAAAA,+CAAQxB,oBAACO,YAAD,EAACA,IAAD,CAARiB,GAASjB;MAAAA,2BACTkB;MAAAA,4CAAa,SAAbA,GAAaC;MACbC;MACAC;MACAC;MACGC,gDAdHhB,UAcGgB,EAbHd,aAaGc,EAZHb,UAYGa,EAXHZ,OAWGY,EAVHX,YAUGW,EATHV,WASGU,EARHT,UAQGS,EAPHR,SAOGQ,EANHP,QAMGO,EALHN,OAKGM,EAJHL,YAIGK,EAHHH,QAGGG,EAFHF,WAEGE,EADHD,WACGC;;EAEH,IAAMC,UAAU3B,aAAae,UAAbf,CAAhB;;EAEA,IAA2BF,gCAA3B;EAAA,IAA2BA,sCAAnB8B,KAAR;EAAA,IAAQA,0CAAQ,MAARA,GAAQC,oBAAhB;;EACA,IAAMC,QAAQjB,YAAYD,WAA1B;EAEAb,aAAa4B,OAAb5B,EAAsB0B,SAAtB1B;EAEA,oBACEH,oBAACQ,SAAD,EAACA,wCACKsB,SADLtB,GACKsB;IACJhB,UAAUO,WAAWc,SAAXd,GAAuBP,QAD7BgB;IAEJF,WAAW3B,yBAET+B,UAAU3B,SAAS+B,OAAnBJ,IAA8BtB,eAAe,CAACsB,KAAD,CAFpC/B,EAGT,CAACgB,QAAD,IAACA,mBAHQhB,EAITmB,oCAJSnB,EAKTiB,UAAU,QAAVA,IAAU,0BALDjB,EAMTiB,UAAU,OAAVA,IAAU,yBANDjB,EAOTsB,iCAPStB,EAQT2B,SARS3B,CAFP6B;IAYJX,YAAYY,OAZRD;IAaJR,SAASD,WAAWc,SAAXd,GAAuBC,OAb5BQ;IAcJT,UAAUA,QAdNS;IAeJP,QAAQA,MAfJO;IAgBJN,OAAOA,KAhBHM;IAiBJO,MAAM/B,+BAA+BmB,UAA/BnB,CAjBFwB;IAkBJH,QAAQA;EAlBJG,CADLtB,CAAD,eAqBER,oBAACsC,KAAD,EAACA;IAAIV,SAAS;EAAbU,CAAD,eACEtC,oBAACS,gBAAD,EAACA;IAAiBgB,YAAYA,UAA7BhB;IAAyCmB,SAAS;EAAlDnB,CAAD,EACGyB,KADH,CADF,CArBF,CADF;AA6BF,CArDO","names":["React","classNames","useAdaptivity","useAutoFocus","useExternRef","SizeType","getFormFieldModeFromSelectType","DropdownIcon","FormField","SelectTypography","sizeYClassNames","none","COMPACT","SelectMimicry","tabIndex","_param_tabIndex","placeholder","children","align","getRootRef","multiline","disabled","onClick","before","after","selectType","_param_selectType","status","className","autoFocus","restProps","rootRef","sizeY","_useAdaptivity_sizeY","title","undefined","REGULAR","mode","div"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\components\\SelectMimicry\\SelectMimicry.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { useAutoFocus } from '../../hooks/useAutoFocus';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { SizeType } from '../../lib/adaptivity';\nimport { getFormFieldModeFromSelectType } from '../../lib/select';\nimport { HasAlign, HTMLAttributesWithRootRef } from '../../types';\nimport { DropdownIcon } from '../DropdownIcon/DropdownIcon';\nimport { FormField, FormFieldProps } from '../FormField/FormField';\nimport type { SelectType } from '../Select/Select';\nimport { SelectTypography } from '../SelectTypography/SelectTypography';\nimport styles from '../Select/Select.module.css';\n\nconst sizeYClassNames = {\n  none: styles['Select--sizeY-none'],\n  [SizeType.COMPACT]: styles['Select--sizeY-compact'],\n};\n\nexport interface SelectMimicryProps\n  extends HTMLAttributesWithRootRef<HTMLElement>,\n    HasAlign,\n    Pick<FormFieldProps, 'before' | 'after' | 'status'> {\n  multiline?: boolean;\n  disabled?: boolean;\n  selectType?: SelectType;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/SelectMimicry\n */\nexport const SelectMimicry = ({\n  tabIndex = 0,\n  placeholder,\n  children,\n  align,\n  getRootRef,\n  multiline,\n  disabled,\n  onClick,\n  before,\n  after = <DropdownIcon />,\n  selectType = 'default',\n  status,\n  className,\n  autoFocus,\n  ...restProps\n}: SelectMimicryProps) => {\n  const rootRef = useExternRef(getRootRef);\n\n  const { sizeY = 'none' } = useAdaptivity();\n  const title = children || placeholder;\n\n  useAutoFocus(rootRef, autoFocus);\n\n  return (\n    <FormField\n      {...restProps}\n      tabIndex={disabled ? undefined : tabIndex}\n      className={classNames(\n        styles['Select'],\n        sizeY !== SizeType.REGULAR && sizeYClassNames[sizeY],\n        !children && styles['Select--empty'],\n        multiline && styles['Select--multiline'],\n        align === 'center' && styles['Select--align-center'],\n        align === 'right' && styles['Select--align-right'],\n        before && styles['Select--hasBefore'],\n        className,\n      )}\n      getRootRef={rootRef}\n      onClick={disabled ? undefined : onClick}\n      disabled={disabled}\n      before={before}\n      after={after}\n      mode={getFormFieldModeFromSelectType(selectType)}\n      status={status}\n    >\n      <div className={styles['Select__container']}>\n        <SelectTypography selectType={selectType} className={styles['Select__title']}>\n          {title}\n        </SelectTypography>\n      </div>\n    </FormField>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}