{"ast":null,"code":"import { _ as _define_property } from \"@swc/helpers/_/_define_property\";\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { _ as _sliced_to_array } from \"@swc/helpers/_/_sliced_to_array\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport { useEnsuredControl } from \"../../hooks/useEnsuredControl\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { SizeType } from \"../../lib/adaptivity\";\nimport { getFormFieldModeFromSelectType } from \"../../lib/select\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { DropdownIcon } from \"../DropdownIcon/DropdownIcon\";\nimport { FormField } from \"../FormField/FormField\";\nimport { SelectTypography } from \"../SelectTypography/SelectTypography\";\n\nvar sizeYClassNames = _define_property({\n  none: \"vkuiSelect--sizeY-none\"\n}, SizeType.COMPACT, \"vkuiSelect--sizeY-compact\");\n/**\n * @see https://vkcom.github.io/VKUI/#/NativeSelect\n */\n\n\nvar NativeSelect = function (_param) {\n  var style = _param.style,\n      _param_defaultValue = _param.defaultValue,\n      defaultValue = _param_defaultValue === void 0 ? \"\" : _param_defaultValue,\n      align = _param.align,\n      placeholder = _param.placeholder,\n      children = _param.children,\n      className = _param.className,\n      getRef = _param.getRef,\n      getRootRef = _param.getRootRef,\n      disabled = _param.disabled,\n      multiline = _param.multiline,\n      _param_selectType = _param.selectType,\n      selectType = _param_selectType === void 0 ? \"default\" : _param_selectType,\n      status = _param.status,\n      _param_icon = _param.icon,\n      icon = _param_icon === void 0 ? /*#__PURE__*/React.createElement(DropdownIcon, null) : _param_icon,\n      before = _param.before,\n      onChangeProp = _param.onChange,\n      valueProp = _param.value,\n      restProps = _object_without_properties(_param, [\"style\", \"defaultValue\", \"align\", \"placeholder\", \"children\", \"className\", \"getRef\", \"getRootRef\", \"disabled\", \"multiline\", \"selectType\", \"status\", \"icon\", \"before\", \"onChange\", \"value\"]);\n\n  var _React_useState = _sliced_to_array(React.useState(\"\"), 2),\n      title = _React_useState[0],\n      setTitle = _React_useState[1];\n\n  var _React_useState1 = _sliced_to_array(React.useState(false), 2),\n      empty = _React_useState1[0],\n      setEmpty = _React_useState1[1];\n\n  var _useEnsuredControl = _sliced_to_array(useEnsuredControl({\n    defaultValue: defaultValue,\n    disabled: disabled,\n    onChange: onChangeProp,\n    value: valueProp\n  }), 2),\n      value = _useEnsuredControl[0],\n      onChange = _useEnsuredControl[1];\n\n  var selectRef = useExternRef(getRef);\n\n  var _useAdaptivity = useAdaptivity(),\n      _useAdaptivity_sizeY = _useAdaptivity.sizeY,\n      sizeY = _useAdaptivity_sizeY === void 0 ? \"none\" : _useAdaptivity_sizeY;\n\n  useIsomorphicLayoutEffect(function () {\n    var _selectRef_current;\n\n    var selectedOption = (_selectRef_current = selectRef.current) === null || _selectRef_current === void 0 ? void 0 : _selectRef_current.options[selectRef.current.selectedIndex];\n\n    if (selectedOption) {\n      setTitle(selectedOption.text);\n      setEmpty(selectedOption.value === \"\" && placeholder != null);\n    }\n  }, [value, children]);\n  return /*#__PURE__*/React.createElement(FormField, {\n    Component: \"label\",\n    className: classNames(\"vkuiSelect\", \"vkuiInternalNativeSelect\", before && \"vkuiSelect--hasBefore\", empty && \"vkuiSelect--empty\", multiline && \"vkuiSelect--multiline\", align === \"center\" && \"vkuiSelect--align-center\", align === \"right\" && \"vkuiSelect--align-right\", sizeY !== SizeType.REGULAR && sizeYClassNames[sizeY], className),\n    style: style,\n    getRootRef: getRootRef,\n    disabled: disabled,\n    before: before,\n    after: icon,\n    status: status,\n    mode: getFormFieldModeFromSelectType(selectType)\n  }, /*#__PURE__*/React.createElement(\"select\", _object_spread_props(_object_spread({}, restProps), {\n    disabled: disabled,\n    className: \"vkuiSelect__el\",\n    onChange: onChange,\n    value: value,\n    ref: selectRef\n  }), placeholder && /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\"\n  }, placeholder), children), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiSelect__container\",\n    \"aria-hidden\": true\n  }, /*#__PURE__*/React.createElement(SelectTypography, {\n    className: \"vkuiSelect__title\",\n    selectType: selectType\n  }, title)));\n};\n\nexport { NativeSelect };","map":{"version":3,"mappings":"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","names":["React","classNames","useAdaptivity","useEnsuredControl","useExternRef","SizeType","getFormFieldModeFromSelectType","useIsomorphicLayoutEffect","DropdownIcon","FormField","SelectTypography","sizeYClassNames","none","COMPACT","NativeSelect","style","defaultValue","_param_defaultValue","align","placeholder","children","className","getRef","getRootRef","disabled","multiline","selectType","_param_selectType","status","icon","before","onChange","onChangeProp","value","valueProp","restProps","useState","title","setTitle","empty","setEmpty","selectRef","sizeY","_useAdaptivity_sizeY","selectedOption","current","options","selectedIndex","text","Component","REGULAR","after","mode","select","ref","option","div","aria-hidden"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\components\\NativeSelect\\NativeSelect.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { useEnsuredControl } from '../../hooks/useEnsuredControl';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { SizeType } from '../../lib/adaptivity';\nimport { getFormFieldModeFromSelectType } from '../../lib/select';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { HasAlign, HasRef, HasRootRef } from '../../types';\nimport { DropdownIcon } from '../DropdownIcon/DropdownIcon';\nimport { FormField, FormFieldProps } from '../FormField/FormField';\nimport type { SelectType } from '../Select/Select';\nimport { SelectTypography } from '../SelectTypography/SelectTypography';\nimport styles from '../Select/Select.module.css';\n\nconst sizeYClassNames = {\n  none: styles['Select--sizeY-none'],\n  [SizeType.COMPACT]: styles['Select--sizeY-compact'],\n};\n\nexport interface NativeSelectProps\n  extends Omit<React.SelectHTMLAttributes<HTMLSelectElement>, 'multiple'>,\n    HasRef<HTMLSelectElement>,\n    HasRootRef<HTMLLabelElement>,\n    HasAlign,\n    Pick<FormFieldProps, 'before' | 'status'> {\n  placeholder?: string;\n  multiline?: boolean;\n  selectType?: SelectType;\n  /**\n   * Иконка раскрывающегося списка\n   */\n  icon?: React.ReactNode;\n}\n\nexport interface SelectState {\n  value?: React.SelectHTMLAttributes<HTMLSelectElement>['value'];\n  title?: string;\n  notSelected?: boolean;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/NativeSelect\n */\nconst NativeSelect = ({\n  style,\n  defaultValue = '',\n  align,\n  placeholder,\n  children,\n  className,\n  getRef,\n  getRootRef,\n  disabled,\n  multiline,\n  selectType = 'default',\n  status,\n  icon = <DropdownIcon />,\n  before,\n  onChange: onChangeProp,\n  value: valueProp,\n  ...restProps\n}: NativeSelectProps) => {\n  const [title, setTitle] = React.useState('');\n  const [empty, setEmpty] = React.useState(false);\n  const [value, onChange] = useEnsuredControl({\n    defaultValue,\n    disabled,\n    onChange: onChangeProp,\n    value: valueProp,\n  });\n  const selectRef = useExternRef(getRef);\n  const { sizeY = 'none' } = useAdaptivity();\n\n  useIsomorphicLayoutEffect(() => {\n    const selectedOption = selectRef.current?.options[selectRef.current.selectedIndex];\n    if (selectedOption) {\n      setTitle(selectedOption.text);\n      setEmpty(selectedOption.value === '' && placeholder != null);\n    }\n  }, [value, children]);\n\n  return (\n    <FormField\n      Component=\"label\"\n      className={classNames(\n        styles['Select'],\n        'vkuiInternalNativeSelect',\n        before && styles['Select--hasBefore'],\n        empty && styles['Select--empty'],\n        multiline && styles['Select--multiline'],\n        align === 'center' && styles['Select--align-center'],\n        align === 'right' && styles['Select--align-right'],\n        sizeY !== SizeType.REGULAR && sizeYClassNames[sizeY],\n        className,\n      )}\n      style={style}\n      getRootRef={getRootRef}\n      disabled={disabled}\n      before={before}\n      after={icon}\n      status={status}\n      mode={getFormFieldModeFromSelectType(selectType)}\n    >\n      <select\n        {...restProps}\n        disabled={disabled}\n        className={styles['Select__el']}\n        onChange={onChange}\n        value={value}\n        ref={selectRef}\n      >\n        {placeholder && <option value=\"\">{placeholder}</option>}\n        {children}\n      </select>\n      <div className={styles['Select__container']} aria-hidden>\n        <SelectTypography className={styles['Select__title']} selectType={selectType}>\n          {title}\n        </SelectTypography>\n      </div>\n    </FormField>\n  );\n};\n\nexport { NativeSelect };\n"]},"metadata":{},"sourceType":"module"}