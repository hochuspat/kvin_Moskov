{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { ENABLE_KEYBOARD_INPUT_EVENT_NAME } from \"../../hooks/useKeyboardInputTracker\";\nimport { useConfigProvider } from \"../ConfigProvider/ConfigProviderContext\";\nimport { Tappable } from \"../Tappable/Tappable\";\nexport var CalendarDay = /*#__PURE__*/React.memo(function (_param) {\n  var day = _param.day,\n      today = _param.today,\n      selected = _param.selected,\n      onChange = _param.onChange,\n      hidden = _param.hidden,\n      disabled = _param.disabled,\n      active = _param.active,\n      selectionStart = _param.selectionStart,\n      selectionEnd = _param.selectionEnd,\n      focused = _param.focused,\n      onEnter = _param.onEnter,\n      onLeave = _param.onLeave,\n      hinted = _param.hinted,\n      hintedSelectionStart = _param.hintedSelectionStart,\n      hintedSelectionEnd = _param.hintedSelectionEnd,\n      sameMonth = _param.sameMonth,\n      size = _param.size,\n      className = _param.className,\n      props = _object_without_properties(_param, [\"day\", \"today\", \"selected\", \"onChange\", \"hidden\", \"disabled\", \"active\", \"selectionStart\", \"selectionEnd\", \"focused\", \"onEnter\", \"onLeave\", \"hinted\", \"hintedSelectionStart\", \"hintedSelectionEnd\", \"sameMonth\", \"size\", \"className\"]);\n\n  var locale = useConfigProvider().locale;\n  var ref = React.useRef(null);\n  var onClick = React.useCallback(function () {\n    return onChange(day);\n  }, [day, onChange]);\n  var handleEnter = React.useCallback(function () {\n    return onEnter === null || onEnter === void 0 ? void 0 : onEnter(day);\n  }, [day, onEnter]);\n  var handleLeave = React.useCallback(function () {\n    return onLeave === null || onLeave === void 0 ? void 0 : onLeave(day);\n  }, [day, onLeave]);\n  React.useEffect(function () {\n    if (focused && ref.current) {\n      ref.current.dispatchEvent(new Event(ENABLE_KEYBOARD_INPUT_EVENT_NAME, {\n        bubbles: true\n      }));\n      ref.current.focus();\n    }\n  }, [focused]);\n\n  if (hidden) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"vkuiCalendarDay__hidden\"\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Tappable, _object_spread({\n    className: classNames(\"vkuiCalendarDay\", size === \"s\" && \"vkuiCalendarDay--size-s\", today && \"vkuiCalendarDay--today\", selected && !disabled && \"vkuiCalendarDay--selected\", selectionStart && \"vkuiCalendarDay--selection-start\", selectionEnd && \"vkuiCalendarDay--selection-end\", disabled && \"vkuiCalendarDay--disabled\", !sameMonth && \"vkuiCalendarDay--not-same-month\", className),\n    hoverMode: active ? \"\" : \"vkuiCalendarDay--hover\",\n    hasActive: false,\n    onClick: onClick,\n    disabled: disabled,\n    \"aria-label\": new Intl.DateTimeFormat(locale, {\n      weekday: \"long\",\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\"\n    }).format(day),\n    tabIndex: -1,\n    getRootRef: ref,\n    focusVisibleMode: active ? \"outside\" : \"inside\",\n    onEnter: handleEnter,\n    onLeave: handleLeave\n  }, props), /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(\"vkuiCalendarDay__hinted\", hinted && \"vkuiCalendarDay__hinted--active\", hintedSelectionStart && \"vkuiCalendarDay__hinted--selection-start\", hintedSelectionEnd && \"vkuiCalendarDay__hinted--selection-end\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(\"vkuiCalendarDay__inner\", active && !disabled && \"vkuiCalendarDay__inner--active\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiCalendarDay__day-number\"\n  }, day.getDate()))));\n});\nCalendarDay.displayName = \"CalendarDay\";","map":{"version":3,"mappings":"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","names":["React","classNames","ENABLE_KEYBOARD_INPUT_EVENT_NAME","useConfigProvider","Tappable","CalendarDay","memo","day","today","selected","onChange","hidden","disabled","active","selectionStart","selectionEnd","focused","onEnter","onLeave","hinted","hintedSelectionStart","hintedSelectionEnd","sameMonth","size","className","props","locale","ref","useRef","onClick","useCallback","handleEnter","handleLeave","useEffect","current","dispatchEvent","Event","bubbles","focus","div","hoverMode","hasActive","aria-label","Intl","DateTimeFormat","weekday","year","month","format","tabIndex","getRootRef","focusVisibleMode","getDate","displayName"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\components\\CalendarDay\\CalendarDay.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { ENABLE_KEYBOARD_INPUT_EVENT_NAME } from '../../hooks/useKeyboardInputTracker';\nimport { useConfigProvider } from '../ConfigProvider/ConfigProviderContext';\nimport { Tappable, TappableElementProps } from '../Tappable/Tappable';\nimport styles from './CalendarDay.module.css';\n\nexport type CalendarDayElementProps = Omit<\n  TappableElementProps,\n  'onChange' | 'size' | 'disabled' | 'selected'\n>;\n\nexport interface CalendarDayProps extends CalendarDayElementProps {\n  day: Date;\n  today?: boolean;\n  selected?: boolean;\n  selectionStart?: boolean;\n  selectionEnd?: boolean;\n  hintedSelectionStart?: boolean;\n  hintedSelectionEnd?: boolean;\n  active?: boolean;\n  hidden?: boolean;\n  disabled?: boolean;\n  focused?: boolean;\n  hinted?: boolean;\n  sameMonth?: boolean;\n  size?: 's' | 'm';\n  onChange(value: Date): void;\n  onEnter?(value: Date): void;\n  onLeave?(value: Date): void;\n}\n\nexport const CalendarDay = React.memo(\n  ({\n    day,\n    today,\n    selected,\n    onChange,\n    hidden,\n    disabled,\n    active,\n    selectionStart,\n    selectionEnd,\n    focused,\n    onEnter,\n    onLeave,\n    hinted,\n    hintedSelectionStart,\n    hintedSelectionEnd,\n    sameMonth,\n    size,\n    className,\n    ...props\n  }: CalendarDayProps) => {\n    const { locale } = useConfigProvider();\n    const ref = React.useRef<HTMLElement>(null);\n    const onClick = React.useCallback(() => onChange(day), [day, onChange]);\n    const handleEnter = React.useCallback(() => onEnter?.(day), [day, onEnter]);\n    const handleLeave = React.useCallback(() => onLeave?.(day), [day, onLeave]);\n\n    React.useEffect(() => {\n      if (focused && ref.current) {\n        ref.current.dispatchEvent(new Event(ENABLE_KEYBOARD_INPUT_EVENT_NAME, { bubbles: true }));\n        ref.current.focus();\n      }\n    }, [focused]);\n\n    if (hidden) {\n      return <div className={styles['CalendarDay__hidden']}></div>;\n    }\n\n    return (\n      <Tappable\n        className={classNames(\n          styles['CalendarDay'],\n          size === 's' && styles['CalendarDay--size-s'],\n          today && styles['CalendarDay--today'],\n          selected && !disabled && styles['CalendarDay--selected'],\n          selectionStart && styles['CalendarDay--selection-start'],\n          selectionEnd && styles['CalendarDay--selection-end'],\n          disabled && styles['CalendarDay--disabled'],\n          !sameMonth && styles['CalendarDay--not-same-month'],\n          className,\n        )}\n        hoverMode={active ? '' : styles['CalendarDay--hover']}\n        hasActive={false}\n        onClick={onClick}\n        disabled={disabled}\n        aria-label={new Intl.DateTimeFormat(locale, {\n          weekday: 'long',\n          year: 'numeric',\n          month: 'long',\n          day: 'numeric',\n        }).format(day)}\n        tabIndex={-1}\n        getRootRef={ref}\n        focusVisibleMode={active ? 'outside' : 'inside'}\n        onEnter={handleEnter}\n        onLeave={handleLeave}\n        {...props}\n      >\n        <div\n          className={classNames(\n            styles['CalendarDay__hinted'],\n            hinted && styles['CalendarDay__hinted--active'],\n            hintedSelectionStart && styles['CalendarDay__hinted--selection-start'],\n            hintedSelectionEnd && styles['CalendarDay__hinted--selection-end'],\n          )}\n        >\n          <div\n            className={classNames(\n              styles['CalendarDay__inner'],\n              active && !disabled && styles['CalendarDay__inner--active'],\n            )}\n          >\n            <div className={styles['CalendarDay__day-number']}>{day.getDate()}</div>\n          </div>\n        </div>\n      </Tappable>\n    );\n  },\n);\n\nCalendarDay.displayName = 'CalendarDay';\n"]},"metadata":{},"sourceType":"module"}