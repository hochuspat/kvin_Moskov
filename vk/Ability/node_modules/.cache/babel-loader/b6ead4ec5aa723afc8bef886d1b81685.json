{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { _ as _to_consumable_array } from \"@swc/helpers/_/_to_consumable_array\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { useDOM } from \"../../lib/dom\";\nimport { HorizontalScroll } from \"../HorizontalScroll/HorizontalScroll\";\nimport { RootComponent } from \"../RootComponent/RootComponent\";\nvar stylesSize = {\n  s: \"vkuiInternalCardScroll--size-s\",\n  m: \"vkuiInternalCardScroll--size-m\",\n  l: \"vkuiInternalCardScroll--size-l\"\n};\n/**\n * @see https://vkcom.github.io/VKUI/#/CardScroll\n */\n\nexport var CardScroll = function (_param) {\n  var getScrollToLeft = function getScrollToLeft(offset) {\n    if (!refContainer.current || !gapRef.current) {\n      return offset;\n    }\n\n    var containerWidth = refContainer.current.offsetWidth;\n\n    var slideIndex = _to_consumable_array(refContainer.current.children).findIndex(function (el) {\n      return el.offsetLeft + el.offsetWidth + parseInt(window.getComputedStyle(el).marginRight) - offset >= 0;\n    });\n\n    if (slideIndex === -1) {\n      return offset;\n    }\n\n    if (slideIndex === 0) {\n      return 0;\n    }\n\n    var slide = refContainer.current.children[slideIndex];\n    var scrollTo = slide.offsetLeft - (containerWidth - slide.offsetWidth) + gapRef.current.offsetWidth;\n\n    if (scrollTo <= 2 * gapRef.current.offsetWidth) {\n      return 0;\n    }\n\n    return scrollTo;\n  };\n\n  var getScrollToRight = function getScrollToRight(offset) {\n    if (!refContainer.current || !gapRef.current) {\n      return offset;\n    }\n\n    var containerWidth = refContainer.current.offsetWidth;\n    var slide = Array.prototype.find.call(refContainer.current.children, function (el) {\n      return el.offsetLeft + el.offsetWidth - offset > containerWidth;\n    });\n\n    if (!slide) {\n      return offset;\n    }\n\n    return slide.offsetLeft - gapRef.current.offsetWidth;\n  };\n\n  var children = _param.children,\n      _param_size = _param.size,\n      size = _param_size === void 0 ? \"s\" : _param_size,\n      _param_showArrows = _param.showArrows,\n      showArrows = _param_showArrows === void 0 ? true : _param_showArrows,\n      _param_withSpaces = _param.withSpaces,\n      withSpaces = _param_withSpaces === void 0 ? true : _param_withSpaces,\n      restProps = _object_without_properties(_param, [\"children\", \"size\", \"showArrows\", \"withSpaces\"]);\n\n  var refContainer = React.useRef(null);\n  var gapRef = React.useRef(null);\n  var window = useDOM().window;\n  return /*#__PURE__*/React.createElement(RootComponent, _object_spread_props(_object_spread({}, restProps), {\n    baseClassName: classNames(\"vkuiCardScroll\", \"vkuiInternalCardScroll\", size !== false && stylesSize[size], withSpaces && \"vkuiCardScroll--withSpaces\")\n  }), /*#__PURE__*/React.createElement(HorizontalScroll, {\n    getScrollToLeft: getScrollToLeft,\n    getScrollToRight: getScrollToRight,\n    showArrows: showArrows\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiCardScroll__in\",\n    ref: refContainer\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"vkuiCardScroll__gap\",\n    ref: gapRef\n  }), children, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"vkuiCardScroll__gap\"\n  }))));\n};","map":{"version":3,"mappings":"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","names":["React","classNames","useDOM","HorizontalScroll","RootComponent","stylesSize","s","m","l","CardScroll","getScrollToLeft","offset","refContainer","current","gapRef","containerWidth","offsetWidth","slideIndex","_to_consumable_array","children","findIndex","el","offsetLeft","parseInt","window","getComputedStyle","marginRight","slide","scrollTo","getScrollToRight","Array","prototype","find","call","size","_param_size","_param_showArrows","showArrows","_param_withSpaces","withSpaces","restProps","useRef","baseClassName","div","className","ref","span"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\components\\CardScroll\\CardScroll.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useDOM } from '../../lib/dom';\nimport { HTMLAttributesWithRootRef } from '../../types';\nimport { HorizontalScroll, HorizontalScrollProps } from '../HorizontalScroll/HorizontalScroll';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport styles from './CardScroll.module.css';\n\nconst stylesSize = {\n  s: 'vkuiInternalCardScroll--size-s',\n  m: 'vkuiInternalCardScroll--size-m',\n  l: 'vkuiInternalCardScroll--size-l',\n};\n\nexport interface CardScrollProps extends HTMLAttributesWithRootRef<HTMLDivElement> {\n  /**\n   * При `size=false` ширина `Card` будет регулироваться контентом внутри. В остальных случаях — будет явно задана в процентах.\n   */\n  size?: 's' | 'm' | 'l' | false;\n  showArrows?: HorizontalScrollProps['showArrows'];\n  withSpaces?: boolean;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/CardScroll\n */\nexport const CardScroll = ({\n  children,\n  size = 's',\n  showArrows = true,\n  withSpaces = true,\n  ...restProps\n}: CardScrollProps) => {\n  const refContainer = React.useRef<HTMLDivElement>(null);\n  const gapRef = React.useRef<HTMLDivElement>(null);\n\n  const { window } = useDOM();\n\n  function getScrollToLeft(offset: number): number {\n    if (!refContainer.current || !gapRef.current) {\n      return offset;\n    }\n    const containerWidth = refContainer.current.offsetWidth;\n    const slideIndex = ([...refContainer.current.children] as HTMLElement[]).findIndex(\n      (el: HTMLElement) =>\n        el.offsetLeft +\n          el.offsetWidth +\n          parseInt(window!.getComputedStyle(el).marginRight) -\n          offset >=\n        0,\n    );\n\n    if (slideIndex === -1) {\n      return offset;\n    }\n\n    if (slideIndex === 0) {\n      return 0;\n    }\n\n    const slide = refContainer.current.children[slideIndex] as HTMLElement;\n\n    const scrollTo =\n      slide.offsetLeft - (containerWidth - slide.offsetWidth) + gapRef.current.offsetWidth;\n\n    if (scrollTo <= 2 * gapRef.current.offsetWidth) {\n      return 0;\n    }\n\n    return scrollTo;\n  }\n\n  function getScrollToRight(offset: number): number {\n    if (!refContainer.current || !gapRef.current) {\n      return offset;\n    }\n\n    const containerWidth = refContainer.current.offsetWidth;\n    const slide = Array.prototype.find.call(\n      refContainer.current.children,\n      (el: HTMLElement) => el.offsetLeft + el.offsetWidth - offset > containerWidth,\n    ) as HTMLElement;\n\n    if (!slide) {\n      return offset;\n    }\n\n    return slide.offsetLeft - gapRef.current.offsetWidth;\n  }\n\n  return (\n    <RootComponent\n      {...restProps}\n      baseClassName={classNames(\n        styles['CardScroll'],\n        'vkuiInternalCardScroll',\n        size !== false && stylesSize[size],\n        withSpaces && styles['CardScroll--withSpaces'],\n      )}\n    >\n      <HorizontalScroll\n        getScrollToLeft={getScrollToLeft}\n        getScrollToRight={getScrollToRight}\n        showArrows={showArrows}\n      >\n        <div className={styles['CardScroll__in']} ref={refContainer}>\n          <span className={styles['CardScroll__gap']} ref={gapRef} />\n          {children}\n          <span className={styles['CardScroll__gap']} />\n        </div>\n      </HorizontalScroll>\n    </RootComponent>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}