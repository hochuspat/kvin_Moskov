{"ast":null,"code":"import { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { _ as _sliced_to_array } from \"@swc/helpers/_/_sliced_to_array\";\nimport * as React from \"react\";\nexport function useEnsuredControl(_param) {\n  var onChangeProp = _param.onChange,\n      disabled = _param.disabled,\n      props = _object_without_properties(_param, [\"onChange\", \"disabled\"]);\n\n  var _useCustomEnsuredControl = _sliced_to_array(useCustomEnsuredControl(props), 2),\n      value = _useCustomEnsuredControl[0],\n      onChangeValue = _useCustomEnsuredControl[1];\n\n  var onChange = React.useCallback(function (e) {\n    if (disabled) {\n      return;\n    }\n\n    onChangeValue(e.target.value);\n    onChangeProp && onChangeProp(e);\n  }, [onChangeValue, onChangeProp, disabled]);\n  return [value, onChange];\n}\nexport function useCustomEnsuredControl(param) {\n  var disabled = param.disabled,\n      onChangeProp = param.onChange,\n      defaultValue = param.defaultValue,\n      value = param.value;\n  var isControlled = value !== undefined;\n\n  var _React_useState = _sliced_to_array(React.useState(defaultValue), 2),\n      localValue = _React_useState[0],\n      setLocalValue = _React_useState[1];\n\n  var onChange = React.useCallback(function (v) {\n    if (disabled) {\n      return;\n    }\n\n    !isControlled && setLocalValue(v);\n    onChangeProp && onChangeProp(v);\n  }, [disabled, isControlled, onChangeProp]);\n  return [isControlled ? value : localValue, onChange];\n}","map":{"version":3,"mappings":";;AAAA,YAAYA,KAAZ,MAAuB,OAAvB;AASA,OAAO,SAASC,iBAAT,CAAgEC,MAAhE,EAAgE;MACrEC,YAAUC,GAD2DF,OACrEC;MACAE,WAFqEH,OAErEG;MACGC,mCAHkEJ,MAGlEI,EAHkE,CACrEH,UADqE,EAErEE,UAFqE,CAGlEC;;EAEH,IAA+BC,oEAAwBD,KAAxBC,GAAwBD,CAAxBC,CAA/B;EAAA,IAAOC,QAAwBD,2BAA/B;EAAA,IAAcE,gBAAiBF,2BAA/B;;EAEA,IAAMJ,WAAWH,MAAMU,WAANV,CACf,UAACW,CAAD,EAACA;IACC,IAAIN,QAAJ,EAAc;MACZ;IACF;;IAEAI,cAAcE,EAAEC,MAAFD,CAASH,KAAvBC;IACAL,gBAAgBA,aAAaO,CAAbP,CAAhBA;EACF,CAReJ,EASf,CAACS,aAAD,EAAgBL,YAAhB,EAA8BC,QAA9B,CATeL,CAAjB;EAYA,OAAO,CAACQ,KAAD,EAAQL,QAAR,CAAP;AACF;AASA,OAAO,SAASI,uBAAT,CAAoCM,KAApC,EAK2B;MAJhCR,WADyCQ,MACzCR;MACAF,YAAUC,GAF+BS,MAEzCV;MACAW,eAHyCD,MAGzCC;MACAN,QAJyCK,MAIzCL;EAEA,IAAMO,eAAeP,UAAUQ,SAA/B;;EACA,IAAoChB,yCAAMiB,QAANjB,CAAec,YAAfd,GAAec,CAAfd,CAApC;EAAA,IAAOkB,aAA6BlB,kBAApC;EAAA,IAAmBmB,gBAAiBnB,kBAApC;;EAEA,IAAMG,WAAWH,MAAMU,WAANV,CACf,UAACoB,CAAD,EAACA;IACC,IAAIf,QAAJ,EAAc;MACZ;IACF;;IAEA,CAACU,YAAD,IAAiBI,cAAcC,CAAdD,CAAjB;IACAf,gBAAgBA,aAAagB,CAAbhB,CAAhBA;EACF,CAReJ,EASf,CAACK,QAAD,EAAWU,YAAX,EAAyBX,YAAzB,CATeJ,CAAjB;EAYA,OAAO,CAACe,eAAeP,KAAfO,GAAuBG,UAAxB,EAAoCf,QAApC,CAAP;AACF","names":["React","useEnsuredControl","_param","onChange","onChangeProp","disabled","props","useCustomEnsuredControl","value","onChangeValue","useCallback","e","target","param","defaultValue","isControlled","undefined","useState","localValue","setLocalValue","v"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\hooks\\useEnsuredControl.ts"],"sourcesContent":["import * as React from 'react';\n\ninterface UseEnsuredControlProps<V, E extends React.ChangeEvent<any>> {\n  value?: V;\n  onChange?: (e: E) => any;\n  defaultValue: V;\n  disabled?: boolean | undefined;\n}\n\nexport function useEnsuredControl<V, E extends React.ChangeEvent<any>>({\n  onChange: onChangeProp,\n  disabled,\n  ...props\n}: UseEnsuredControlProps<V, E>): [V | undefined, (e: E) => any] {\n  const [value, onChangeValue] = useCustomEnsuredControl(props);\n\n  const onChange = React.useCallback(\n    (e: E) => {\n      if (disabled) {\n        return;\n      }\n\n      onChangeValue(e.target.value);\n      onChangeProp && onChangeProp(e);\n    },\n    [onChangeValue, onChangeProp, disabled],\n  );\n\n  return [value, onChange];\n}\n\ninterface UseCustomEnsuredControlProps<V> {\n  value?: V;\n  onChange?: (v: V) => any;\n  defaultValue: V;\n  disabled?: boolean | undefined;\n}\n\nexport function useCustomEnsuredControl<V>({\n  disabled,\n  onChange: onChangeProp,\n  defaultValue,\n  value,\n}: UseCustomEnsuredControlProps<V>): [V | undefined, (e: V) => any] {\n  const isControlled = value !== undefined;\n  const [localValue, setLocalValue] = React.useState(defaultValue);\n\n  const onChange = React.useCallback(\n    (v: V) => {\n      if (disabled) {\n        return;\n      }\n\n      !isControlled && setLocalValue(v);\n      onChangeProp && onChangeProp(v);\n    },\n    [disabled, isControlled, onChangeProp],\n  );\n\n  return [isControlled ? value : localValue, onChange];\n}\n"]},"metadata":{},"sourceType":"module"}