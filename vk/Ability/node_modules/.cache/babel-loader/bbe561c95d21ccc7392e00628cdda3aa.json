{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport React from \"react\";\nimport { BrowserSymbol } from \"./browser-symbol\";\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from \"./sprite\";\nimport { warnOnce } from \"./warnOnce\";\n\nvar SvgIcon = function (_param) {\n  var _param_width = _param.width,\n      width = _param_width === void 0 ? 0 : _param_width,\n      _param_height = _param.height,\n      height = _param_height === void 0 ? 0 : _param_height,\n      viewBox = _param.viewBox,\n      id = _param.id,\n      _param_className = _param.className,\n      className = _param_className === void 0 ? \"\" : _param_className,\n      fill = _param.fill,\n      getRootRef = _param.getRootRef,\n      tmp = _param.style,\n      propsStyle = tmp === void 0 ? {} : tmp,\n      title = _param.title,\n      children = _param.children,\n      restProps = _object_without_properties(_param, [\"width\", \"height\", \"viewBox\", \"id\", \"className\", \"fill\", \"getRootRef\", \"style\", \"title\", \"children\"]);\n\n  var size = Math.max(width, height);\n\n  var style = _object_spread({\n    width: width,\n    height: height\n  }, propsStyle);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _object_spread_props(_object_spread({\n    \"aria-hidden\": \"true\",\n    display: \"block\"\n  }, restProps), {\n    className: [\"vkuiIcon\", \"vkuiIcon--\".concat(size), \"vkuiIcon--w-\".concat(width), \"vkuiIcon--h-\".concat(height), \"vkuiIcon--\".concat(id), className].join(\" \").trim(),\n    viewBox: viewBox,\n    width: width,\n    height: height,\n    style: style,\n    ref: getRootRef\n  }), title && /*#__PURE__*/React.createElement(\"title\", null, title), /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#\".concat(id),\n    style: {\n      fill: \"currentColor\",\n      color: fill\n    }\n  }, children));\n};\n\nexport function makeIcon(componentName, id, viewBox, content, width, height, deprecated, replacement) {\n  var mountIcon = function mountIcon() {\n    if (!isMounted) {\n      addSpriteSymbol(new BrowserSymbol({\n        content: content\n      }));\n      isMounted = true;\n    }\n  };\n\n  var isMounted = false;\n  var warn = warnOnce(componentName);\n\n  var Icon = function (props) {\n    useIsomorphicLayoutEffect(mountIcon, []);\n\n    if (deprecated) {\n      var replacementNotice = replacement ? \". Замените на \".concat(replacement) : \"\";\n      warn(\"Иконка устарела\" + replacementNotice);\n    }\n\n    return /*#__PURE__*/React.createElement(SvgIcon, _object_spread_props(_object_spread({}, props), {\n      viewBox: viewBox,\n      id: id,\n      width: props.width !== undefined && !isNaN(props.width) ? +props.width : width,\n      height: props.height !== undefined && !isNaN(props.height) ? +props.height : height\n    }));\n  };\n\n  Icon.mountIcon = mountIcon;\n  Icon.displayName = componentName;\n  return Icon;\n}","map":{"version":3,"mappings":"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","names":["React","BrowserSymbol","addSpriteSymbol","useIsomorphicLayoutEffect","warnOnce","SvgIcon","width","_param_width","_param_height","height","viewBox","id","className","_param_className","fill","getRootRef","propsStyle","style","title","children","restProps","size","Math","max","_object_spread","svg","aria-hidden","display","concat","join","trim","ref","use","xlinkHref","color","makeIcon","componentName","content","deprecated","replacement","mountIcon","isMounted","warn","Icon","props","replacementNotice","undefined","isNaN","displayName"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\icons-sprite\\src\\SvgIcon.tsx"],"sourcesContent":["import React from 'react';\nimport { BrowserSymbol } from './browser-symbol';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from './sprite';\nimport { warnOnce } from './warnOnce';\n\nexport interface SvgIconProps extends React.SVGProps<SVGSVGElement> {\n  width?: number;\n  height?: number;\n  getRootRef?: React.Ref<SVGSVGElement>;\n  title?: string;\n}\n\nconst SvgIcon = ({\n  width = 0,\n  height = 0,\n  viewBox,\n  id,\n  className = '',\n  fill,\n  getRootRef,\n  style: propsStyle = {},\n  title,\n  children,\n  ...restProps\n}: SvgIconProps) => {\n  const size = Math.max(width, height);\n\n  const style = {\n    width,\n    height,\n    ...propsStyle,\n  };\n\n  return (\n    <svg\n      aria-hidden=\"true\"\n      display=\"block\"\n      {...restProps}\n      className={[\n        'vkuiIcon',\n        `vkuiIcon--${size}`,\n        `vkuiIcon--w-${width}`,\n        `vkuiIcon--h-${height}`,\n        `vkuiIcon--${id}`,\n        className,\n      ]\n        .join(' ')\n        .trim()}\n      viewBox={viewBox}\n      width={width}\n      height={height}\n      style={style}\n      ref={getRootRef}\n    >\n      {title && <title>{title}</title>}\n      <use xlinkHref={`#${id}`} style={{ fill: 'currentColor', color: fill }}>\n        {children}\n      </use>\n    </svg>\n  );\n};\n\nexport function makeIcon<Props extends SvgIconProps = SvgIconProps>(\n  componentName: string,\n  id: string,\n  viewBox: string,\n  content: string,\n  width: number,\n  height: number,\n  deprecated?: boolean,\n  replacement?: string,\n): React.FC<Props> {\n  let isMounted = false;\n  function mountIcon() {\n    if (!isMounted) {\n      addSpriteSymbol(new BrowserSymbol({ content }));\n      isMounted = true;\n    }\n  }\n\n  const warn = warnOnce(componentName);\n  const Icon = (props: Props) => {\n    useIsomorphicLayoutEffect(mountIcon, []);\n\n    if (deprecated) {\n      const replacementNotice = replacement ? `. Замените на ${replacement}` : '';\n\n      warn('Иконка устарела' + replacementNotice);\n    }\n\n    return (\n      <SvgIcon\n        {...props}\n        viewBox={viewBox}\n        id={id}\n        width={props.width !== undefined && !isNaN(props.width) ? +props.width : width}\n        height={props.height !== undefined && !isNaN(props.height) ? +props.height : height}\n      />\n    );\n  };\n\n  (Icon as any).mountIcon = mountIcon;\n  Icon.displayName = componentName;\n\n  return Icon;\n}\n"]},"metadata":{},"sourceType":"module"}