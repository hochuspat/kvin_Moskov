{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { _ as _sliced_to_array } from \"@swc/helpers/_/_sliced_to_array\";\nimport * as React from \"react\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { useGlobalEventListener } from \"../../hooks/useGlobalEventListener\";\nimport { useTimeout } from \"../../hooks/useTimeout\";\nimport { FOCUSABLE_ELEMENTS_LIST, Keys, pressedKey } from \"../../lib/accessibility\";\nimport { useDOM } from \"../../lib/dom\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { AppRootContext } from \"../AppRoot/AppRootContext\";\nvar FOCUSABLE_ELEMENTS = FOCUSABLE_ELEMENTS_LIST.join();\n/**\n * @see https://vkcom.github.io/VKUI/#/FocusTrap\n */\n\nexport var FocusTrap = function (_param) {\n  var _param_Component = _param.Component,\n      Component = _param_Component === void 0 ? \"div\" : _param_Component,\n      onClose = _param.onClose,\n      _param_restoreFocus = _param.restoreFocus,\n      restoreFocus = _param_restoreFocus === void 0 ? true : _param_restoreFocus,\n      _param_timeout = _param.timeout,\n      timeout = _param_timeout === void 0 ? 0 : _param_timeout,\n      getRootRef = _param.getRootRef,\n      children = _param.children,\n      restProps = _object_without_properties(_param, [\"Component\", \"onClose\", \"restoreFocus\", \"timeout\", \"getRootRef\", \"children\"]);\n\n  var ref = useExternRef(getRootRef);\n\n  var _useDOM = useDOM(),\n      document = _useDOM.document,\n      window = _useDOM.window;\n\n  var _React_useState = _sliced_to_array(React.useState(null), 2),\n      focusableNodes = _React_useState[0],\n      setFocusableNodes = _React_useState[1];\n\n  var _React_useState1 = _sliced_to_array(React.useState(null), 2),\n      restoreFocusTo = _React_useState1[0],\n      setRestoreFocusTo = _React_useState1[1]; // HANDLE TRAP MOUNT\n\n\n  var keyboardInput = React.useContext(AppRootContext).keyboardInput;\n  var focusOnTrapMount = useTimeout(function () {\n    var _ref_current;\n\n    if (keyboardInput && !((_ref_current = ref.current) === null || _ref_current === void 0 ? void 0 : _ref_current.contains(document.activeElement)) && (focusableNodes === null || focusableNodes === void 0 ? void 0 : focusableNodes.length)) {\n      focusableNodes[0].focus();\n    }\n  }, timeout);\n  useIsomorphicLayoutEffect(function () {\n    focusOnTrapMount.set();\n  }, []); // HANDLE FOCUSABLE NODES\n\n  useIsomorphicLayoutEffect(function () {\n    if (!ref.current) {\n      return;\n    }\n\n    var nodes = [];\n    Array.prototype.forEach.call( // eslint-disable-next-line no-restricted-properties\n    ref.current.querySelectorAll(FOCUSABLE_ELEMENTS), function (focusableEl) {\n      var _window_getComputedStyle = window.getComputedStyle(focusableEl),\n          display = _window_getComputedStyle.display,\n          visibility = _window_getComputedStyle.visibility;\n\n      if (display !== \"none\" && visibility !== \"hidden\") {\n        nodes.push(focusableEl);\n      }\n    });\n\n    if (nodes.length === 0) {\n      // Чтобы фокус был хотя бы на родителе\n      nodes.push(ref.current);\n    }\n\n    setFocusableNodes(nodes);\n  }, [children]); // HANDLE TRAP UNMOUNT\n\n  var focusOnTrapUnmount = useTimeout(function () {\n    if (restoreFocusTo) {\n      restoreFocusTo.focus();\n    }\n  }, timeout);\n  useIsomorphicLayoutEffect(function () {\n    if (restoreFocus && document.activeElement) {\n      setRestoreFocusTo(document.activeElement);\n      return function () {\n        focusOnTrapUnmount.set();\n      };\n    }\n\n    return;\n  }, [restoreFocus]);\n\n  var onDocumentKeydown = function (e) {\n    if (pressedKey(e) === Keys.TAB && (focusableNodes === null || focusableNodes === void 0 ? void 0 : focusableNodes.length)) {\n      var lastIdx = focusableNodes.length - 1;\n      var targetIdx = focusableNodes.findIndex(function (node) {\n        return node === e.target;\n      });\n      var shouldFocusFirstNode = targetIdx === -1 || targetIdx === lastIdx && !e.shiftKey;\n\n      if (shouldFocusFirstNode || targetIdx === 0 && e.shiftKey) {\n        e.preventDefault();\n        var node = focusableNodes[shouldFocusFirstNode ? 0 : lastIdx];\n\n        if (node !== document.activeElement) {\n          node.focus();\n        }\n\n        return false;\n      }\n    }\n\n    if (onClose && pressedKey(e) === Keys.ESCAPE) {\n      onClose();\n    }\n\n    return true;\n  };\n\n  useGlobalEventListener(document, \"keydown\", onDocumentKeydown, {\n    capture: true\n  });\n  return /*#__PURE__*/React.createElement(Component, _object_spread({\n    tabIndex: -1,\n    ref: ref\n  }, restProps), children);\n};","map":{"version":3,"mappings":"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","names":["React","useExternRef","useGlobalEventListener","useTimeout","FOCUSABLE_ELEMENTS_LIST","Keys","pressedKey","useDOM","useIsomorphicLayoutEffect","AppRootContext","FOCUSABLE_ELEMENTS","join","FocusTrap","Component","_param_Component","onClose","restoreFocus","_param_restoreFocus","_param_timeout","timeout","getRootRef","children","restProps","ref","document","window","useState","focusableNodes","setFocusableNodes","restoreFocusTo","setRestoreFocusTo","keyboardInput","useContext","focusOnTrapMount","current","contains","activeElement","length","focus","set","nodes","Array","prototype","forEach","call","querySelectorAll","focusableEl","getComputedStyle","display","visibility","push","focusOnTrapUnmount","onDocumentKeydown","e","TAB","lastIdx","targetIdx","findIndex","node","target","shouldFocusFirstNode","shiftKey","preventDefault","ESCAPE","capture","tabIndex"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\components\\FocusTrap\\FocusTrap.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useGlobalEventListener } from '../../hooks/useGlobalEventListener';\nimport { useTimeout } from '../../hooks/useTimeout';\nimport { FOCUSABLE_ELEMENTS_LIST, Keys, pressedKey } from '../../lib/accessibility';\nimport { useDOM } from '../../lib/dom';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { HasComponent, HasRootRef } from '../../types';\nimport { AppRootContext } from '../AppRoot/AppRootContext';\n\nconst FOCUSABLE_ELEMENTS: string = FOCUSABLE_ELEMENTS_LIST.join();\nexport interface FocusTrapProps<T extends HTMLElement = HTMLElement>\n  extends React.AllHTMLAttributes<T>,\n    HasRootRef<T>,\n    HasComponent {\n  restoreFocus?: boolean;\n  timeout?: number;\n  onClose?(): void;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/FocusTrap\n */\nexport const FocusTrap = <T extends HTMLElement = HTMLElement>({\n  Component = 'div',\n  onClose,\n  restoreFocus = true,\n  timeout = 0,\n  getRootRef,\n  children,\n  ...restProps\n}: FocusTrapProps<T>) => {\n  const ref = useExternRef<T>(getRootRef);\n\n  const { document, window } = useDOM();\n\n  const [focusableNodes, setFocusableNodes] = React.useState<HTMLElement[] | null>(null);\n  const [restoreFocusTo, setRestoreFocusTo] = React.useState<HTMLElement | null>(null);\n\n  // HANDLE TRAP MOUNT\n\n  const { keyboardInput } = React.useContext(AppRootContext);\n  const focusOnTrapMount = useTimeout(() => {\n    if (\n      keyboardInput &&\n      !ref.current?.contains(document!.activeElement) &&\n      focusableNodes?.length\n    ) {\n      focusableNodes[0].focus();\n    }\n  }, timeout);\n  useIsomorphicLayoutEffect(() => {\n    focusOnTrapMount.set();\n  }, []);\n\n  // HANDLE FOCUSABLE NODES\n\n  useIsomorphicLayoutEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n\n    const nodes: HTMLElement[] = [];\n    Array.prototype.forEach.call(\n      // eslint-disable-next-line no-restricted-properties\n      ref.current.querySelectorAll(FOCUSABLE_ELEMENTS),\n      (focusableEl: Element) => {\n        const { display, visibility } = window!.getComputedStyle(focusableEl);\n\n        if (display !== 'none' && visibility !== 'hidden') {\n          nodes.push(focusableEl as HTMLElement);\n        }\n      },\n    );\n\n    if (nodes.length === 0) {\n      // Чтобы фокус был хотя бы на родителе\n      nodes.push(ref.current);\n    }\n\n    setFocusableNodes(nodes);\n  }, [children]);\n\n  // HANDLE TRAP UNMOUNT\n\n  const focusOnTrapUnmount = useTimeout(() => {\n    if (restoreFocusTo) {\n      restoreFocusTo.focus();\n    }\n  }, timeout);\n  useIsomorphicLayoutEffect(() => {\n    if (restoreFocus && document!.activeElement) {\n      setRestoreFocusTo(document!.activeElement as HTMLElement);\n\n      return () => {\n        focusOnTrapUnmount.set();\n      };\n    }\n\n    return;\n  }, [restoreFocus]);\n\n  const onDocumentKeydown = (e: KeyboardEvent) => {\n    if (pressedKey(e) === Keys.TAB && focusableNodes?.length) {\n      const lastIdx = focusableNodes.length - 1;\n      const targetIdx = focusableNodes.findIndex((node) => node === e.target);\n\n      const shouldFocusFirstNode = targetIdx === -1 || (targetIdx === lastIdx && !e.shiftKey);\n\n      if (shouldFocusFirstNode || (targetIdx === 0 && e.shiftKey)) {\n        e.preventDefault();\n\n        const node = focusableNodes[shouldFocusFirstNode ? 0 : lastIdx];\n\n        if (node !== document!.activeElement) {\n          node.focus();\n        }\n\n        return false;\n      }\n    }\n\n    if (onClose && pressedKey(e) === Keys.ESCAPE) {\n      onClose();\n    }\n\n    return true;\n  };\n  useGlobalEventListener(document, 'keydown', onDocumentKeydown, {\n    capture: true,\n  });\n\n  return (\n    <Component tabIndex={-1} ref={ref} {...restProps}>\n      {children}\n    </Component>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}