{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { Tappable } from \"../../Tappable/Tappable\";\nimport { Text } from \"../../Typography/Text/Text\";\nimport { getPageAriaLabelDefault } from \"../utils\";\nimport { usePaginationPageClassNames } from \"./usePaginationPageClasses\";\nexport var PaginationPageButton = function (_param) {\n  var _param_isCurrent = _param.isCurrent,\n      isCurrent = _param_isCurrent === void 0 ? false : _param_isCurrent,\n      _param_getPageAriaLabel = _param.getPageAriaLabel,\n      getPageAriaLabel = _param_getPageAriaLabel === void 0 ? getPageAriaLabelDefault : _param_getPageAriaLabel,\n      children = _param.children,\n      className = _param.className,\n      disabled = _param.disabled,\n      restProps = _object_without_properties(_param, [\"isCurrent\", \"getPageAriaLabel\", \"children\", \"className\", \"disabled\"]);\n\n  var paginationClassNames = usePaginationPageClassNames({\n    isCurrent: isCurrent,\n    disabled: disabled\n  });\n  return /*#__PURE__*/React.createElement(Tappable, _object_spread({\n    className: classNames(paginationClassNames, className),\n    activeMode: \"vkuiPaginationPage--state-active\",\n    hoverMode: \"vkuiPaginationPage--state-hover\",\n    hasActive: !isCurrent,\n    hasHover: !isCurrent,\n    focusVisibleMode: \"outside\",\n    \"data-page\": children,\n    \"aria-current\": isCurrent ? true : undefined,\n    \"aria-label\": getPageAriaLabel(children, isCurrent),\n    disabled: disabled\n  }, restProps), /*#__PURE__*/React.createElement(Text, {\n    normalize: false\n  }, children));\n};","map":{"version":3,"mappings":";;AAAA,YAAYA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AAEA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAASC,IAAT,QAAqB,4BAArB;AACA,SAASC,uBAAT,QAAwC,UAAxC;AACA,SAASC,2BAAT,QAA4C,4BAA5C;AAeA,OAAO,IAAMC,uBAAuB;gCAClCC;MAAAA,0CAAY,KAAZA,GAAYC;MAAAC,iCACZC;MAAAA,wDAAmBN,uBAAnBM,GAAmBN;MACnBO;MACAC;MACAC;MACGC,gDALHP,WAKGO,EAJHJ,kBAIGI,EAHHH,UAGGG,EAFHF,WAEGE,EADHD,UACGC;;EAEH,IAAMC,uBAAuBV,4BAA4B;IAAEE,oBAAF;IAAaM;EAAb,CAA5BR,CAA7B;EAEA,oBACEL,oBAACE,QAAD,EAACA;IACCU,WAAWX,WAAWc,oBAAXd,EAAiCW,SAAjCX,CADZC;IAECc,UAAU,oCAFXd;IAGCe,SAAS,mCAHVf;IAICgB,WAAW,CAACX,SAJbL;IAKCiB,UAAU,CAACZ,SALZL;IAMCkB,kBAAiB,SANlBlB;IAOCmB,aAAWV,QAPZT;IAQCoB,gBAAcf,YAAY,IAAZA,GAAmBgB,SARlCrB;IASCsB,cAAYd,iBAAiBC,QAAjBD,EAA2BH,SAA3BG,CATbR;IAUCW,UAAUA;EAVXX,GAWKY,SAXLZ,CAAD,EAWMY,aAEJd,oBAACG,IAAD,EAACA;IAAKsB,WAAW;EAAhBtB,CAAD,EAAyBQ,QAAzB,CAbF,CADF;AAiBF,CA3BO","names":["React","classNames","Tappable","Text","getPageAriaLabelDefault","usePaginationPageClassNames","PaginationPageButton","isCurrent","_param_isCurrent","_param_getPageAriaLabel","getPageAriaLabel","children","className","disabled","restProps","paginationClassNames","activeMode","hoverMode","hasActive","hasHover","focusVisibleMode","data-page","aria-current","undefined","aria-label","normalize"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\components\\Pagination\\PaginationPage\\PaginationPageButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport type { HasRootRef } from '../../../types';\nimport { Tappable } from '../../Tappable/Tappable';\nimport { Text } from '../../Typography/Text/Text';\nimport { getPageAriaLabelDefault } from '../utils';\nimport { usePaginationPageClassNames } from './usePaginationPageClasses';\nimport styles from './PaginationPage.module.css';\n\nexport interface PaginationPageButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HasRootRef<HTMLButtonElement> {\n  isCurrent?: boolean;\n  /**\n   * Функция для переопределения и/или локализации `aria-label` атрибута.\n   * По умолчанию используется текст на \"ru_RU\".\n   */\n  getPageAriaLabel?(page: number, isCurrent: boolean): string;\n  children: number;\n}\n\nexport const PaginationPageButton = ({\n  isCurrent = false,\n  getPageAriaLabel = getPageAriaLabelDefault,\n  children,\n  className,\n  disabled,\n  ...restProps\n}: PaginationPageButtonProps) => {\n  const paginationClassNames = usePaginationPageClassNames({ isCurrent, disabled });\n\n  return (\n    <Tappable\n      className={classNames(paginationClassNames, className)}\n      activeMode={styles['PaginationPage--state-active']}\n      hoverMode={styles['PaginationPage--state-hover']}\n      hasActive={!isCurrent}\n      hasHover={!isCurrent}\n      focusVisibleMode=\"outside\"\n      data-page={children}\n      aria-current={isCurrent ? true : undefined}\n      aria-label={getPageAriaLabel(children, isCurrent)}\n      disabled={disabled}\n      {...restProps}\n    >\n      <Text normalize={false}>{children}</Text>\n    </Tappable>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}