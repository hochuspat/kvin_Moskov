{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { useCalendar } from \"../../hooks/useCalendar\";\nimport { isFirstDay, isLastDay, navigateDate, setTimeEqual } from \"../../lib/calendar\";\nimport { isSameDay, isSameMonth } from \"../../lib/date\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { CalendarDays } from \"../CalendarDays/CalendarDays\";\nimport { CalendarHeader } from \"../CalendarHeader/CalendarHeader\";\nimport { CalendarTime } from \"../CalendarTime/CalendarTime\";\nimport { RootComponent } from \"../RootComponent/RootComponent\";\nvar warn = warnOnce(\"Calendar\");\n/**\n * @see https://vkcom.github.io/VKUI/#/Calendar\n */\n\nexport var Calendar = function (_param) {\n  var value = _param.value,\n      onChange = _param.onChange,\n      disablePast = _param.disablePast,\n      disableFuture = _param.disableFuture,\n      shouldDisableDate = _param.shouldDisableDate,\n      onClose = _param.onClose,\n      _param_enableTime = _param.enableTime,\n      enableTime = _param_enableTime === void 0 ? false : _param_enableTime,\n      doneButtonText = _param.doneButtonText,\n      _param_weekStartsOn = _param.weekStartsOn,\n      weekStartsOn = _param_weekStartsOn === void 0 ? 1 : _param_weekStartsOn,\n      disablePickers = _param.disablePickers,\n      changeHoursAriaLabel = _param.changeHoursAriaLabel,\n      changeMinutesAriaLabel = _param.changeMinutesAriaLabel,\n      prevMonthAriaLabel = _param.prevMonthAriaLabel,\n      nextMonthAriaLabel = _param.nextMonthAriaLabel,\n      changeMonthAriaLabel = _param.changeMonthAriaLabel,\n      changeYearAriaLabel = _param.changeYearAriaLabel,\n      showNeighboringMonth = _param.showNeighboringMonth,\n      _param_changeDayAriaLabel = _param.changeDayAriaLabel,\n      changeDayAriaLabel = _param_changeDayAriaLabel === void 0 ? \"Изменить день\" : _param_changeDayAriaLabel,\n      _param_size = _param.size,\n      size = _param_size === void 0 ? \"m\" : _param_size,\n      externalViewDate = _param.viewDate,\n      onHeaderChange = _param.onHeaderChange,\n      onNextMonth = _param.onNextMonth,\n      onPrevMonth = _param.onPrevMonth,\n      prevMonthIcon = _param.prevMonthIcon,\n      nextMonthIcon = _param.nextMonthIcon,\n      prevMonthProps = _param.prevMonthProps,\n      nextMonthProps = _param.nextMonthProps,\n      dayProps = _param.dayProps,\n      listenDayChangesForUpdate = _param.listenDayChangesForUpdate,\n      props = _object_without_properties(_param, [\"value\", \"onChange\", \"disablePast\", \"disableFuture\", \"shouldDisableDate\", \"onClose\", \"enableTime\", \"doneButtonText\", \"weekStartsOn\", \"disablePickers\", \"changeHoursAriaLabel\", \"changeMinutesAriaLabel\", \"prevMonthAriaLabel\", \"nextMonthAriaLabel\", \"changeMonthAriaLabel\", \"changeYearAriaLabel\", \"showNeighboringMonth\", \"changeDayAriaLabel\", \"size\", \"viewDate\", \"onHeaderChange\", \"onNextMonth\", \"onPrevMonth\", \"prevMonthIcon\", \"nextMonthIcon\", \"prevMonthProps\", \"nextMonthProps\", \"dayProps\", \"listenDayChangesForUpdate\"]);\n\n  var _useCalendar = useCalendar({\n    value: value,\n    disableFuture: disableFuture,\n    disablePast: disablePast,\n    shouldDisableDate: shouldDisableDate,\n    onHeaderChange: onHeaderChange,\n    onNextMonth: onNextMonth,\n    onPrevMonth: onPrevMonth\n  }),\n      viewDate = _useCalendar.viewDate,\n      setViewDate = _useCalendar.setViewDate,\n      setPrevMonth = _useCalendar.setPrevMonth,\n      setNextMonth = _useCalendar.setNextMonth,\n      focusedDay = _useCalendar.focusedDay,\n      setFocusedDay = _useCalendar.setFocusedDay,\n      isDayFocused = _useCalendar.isDayFocused,\n      isDayDisabled = _useCalendar.isDayDisabled,\n      resetSelectedDay = _useCalendar.resetSelectedDay;\n\n  useIsomorphicLayoutEffect(function () {\n    if (value) {\n      setViewDate(value);\n    }\n  }, [value]);\n\n  if (process.env.NODE_ENV === \"development\" && !disablePickers && size === \"s\") {\n    warn(\"Нельзя включить селекты выбора месяца/года, если размер календаря 's'\", \"error\");\n  }\n\n  if (process.env.NODE_ENV === \"development\" && enableTime && size === \"s\") {\n    warn(\"Нельзя включить выбор времени, если размер календаря 's'\", \"error\");\n  }\n\n  var handleKeyDown = React.useCallback(function (event) {\n    if ([\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].includes(event.key)) {\n      event.preventDefault();\n    }\n\n    var newFocusedDay = navigateDate(focusedDay !== null && focusedDay !== void 0 ? focusedDay : value, event.key);\n\n    if (newFocusedDay && !isSameMonth(newFocusedDay, viewDate)) {\n      setViewDate(newFocusedDay);\n    }\n\n    setFocusedDay(newFocusedDay);\n  }, [focusedDay, setFocusedDay, setViewDate, value, viewDate]);\n  var onDayChange = React.useCallback(function (date) {\n    onChange === null || onChange === void 0 ? void 0 : onChange(setTimeEqual(date, value));\n  }, [value, onChange]);\n  var isDayActive = React.useCallback(function (day) {\n    return Boolean(value && isSameDay(day, value));\n  }, [value]);\n  return /*#__PURE__*/React.createElement(RootComponent, _object_spread_props(_object_spread({}, props), {\n    baseClassName: classNames(\"vkuiCalendar\", size === \"s\" && \"vkuiCalendar--size-s\")\n  }), /*#__PURE__*/React.createElement(CalendarHeader, {\n    viewDate: externalViewDate || viewDate,\n    onChange: setViewDate,\n    onNextMonth: setNextMonth,\n    onPrevMonth: setPrevMonth,\n    disablePickers: disablePickers || size === \"s\",\n    className: \"vkuiCalendar__header\",\n    prevMonthAriaLabel: prevMonthAriaLabel,\n    nextMonthAriaLabel: nextMonthAriaLabel,\n    changeMonthAriaLabel: changeMonthAriaLabel,\n    changeYearAriaLabel: changeYearAriaLabel,\n    prevMonthIcon: prevMonthIcon,\n    nextMonthIcon: nextMonthIcon,\n    prevMonthProps: prevMonthProps,\n    nextMonthProps: nextMonthProps\n  }), /*#__PURE__*/React.createElement(CalendarDays, {\n    viewDate: externalViewDate || viewDate,\n    value: value,\n    weekStartsOn: weekStartsOn,\n    isDayFocused: isDayFocused,\n    tabIndex: 0,\n    \"aria-label\": changeDayAriaLabel,\n    onKeyDown: handleKeyDown,\n    onDayChange: onDayChange,\n    isDayActive: isDayActive,\n    isDaySelectionStart: isFirstDay,\n    isDaySelectionEnd: isLastDay,\n    isDayDisabled: isDayDisabled,\n    onBlur: resetSelectedDay,\n    showNeighboringMonth: showNeighboringMonth,\n    size: size,\n    dayProps: dayProps,\n    listenDayChangesForUpdate: listenDayChangesForUpdate\n  }), enableTime && value && size !== \"s\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiCalendar__time\"\n  }, /*#__PURE__*/React.createElement(CalendarTime, {\n    value: value,\n    onChange: onChange,\n    onClose: onClose,\n    doneButtonText: doneButtonText,\n    changeHoursAriaLabel: changeHoursAriaLabel,\n    changeMinutesAriaLabel: changeMinutesAriaLabel\n  })));\n};","map":{"version":3,"mappings":"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","names":["React","classNames","useCalendar","isFirstDay","isLastDay","navigateDate","setTimeEqual","isSameDay","isSameMonth","useIsomorphicLayoutEffect","warnOnce","CalendarDays","CalendarHeader","CalendarTime","RootComponent","warn","Calendar","value","onChange","disablePast","disableFuture","shouldDisableDate","onClose","enableTime","_param_enableTime","doneButtonText","weekStartsOn","_param_weekStartsOn","disablePickers","changeHoursAriaLabel","changeMinutesAriaLabel","prevMonthAriaLabel","nextMonthAriaLabel","changeMonthAriaLabel","changeYearAriaLabel","showNeighboringMonth","changeDayAriaLabel","_param_changeDayAriaLabel","_param_size","size","viewDate","externalViewDate","onHeaderChange","onNextMonth","onPrevMonth","prevMonthIcon","nextMonthIcon","prevMonthProps","nextMonthProps","dayProps","listenDayChangesForUpdate","props","setViewDate","setPrevMonth","setNextMonth","focusedDay","setFocusedDay","isDayFocused","isDayDisabled","resetSelectedDay","process","env","NODE_ENV","handleKeyDown","useCallback","event","includes","key","preventDefault","newFocusedDay","onDayChange","date","isDayActive","day","Boolean","baseClassName","className","tabIndex","aria-label","onKeyDown","isDaySelectionStart","isDaySelectionEnd","onBlur","div"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\components\\Calendar\\Calendar.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useCalendar } from '../../hooks/useCalendar';\nimport { isFirstDay, isLastDay, navigateDate, setTimeEqual } from '../../lib/calendar';\nimport { isSameDay, isSameMonth } from '../../lib/date';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { HTMLAttributesWithRootRef } from '../../types';\nimport { CalendarDays, CalendarDaysProps } from '../CalendarDays/CalendarDays';\nimport { CalendarHeader, CalendarHeaderProps } from '../CalendarHeader/CalendarHeader';\nimport { CalendarTime, CalendarTimeProps } from '../CalendarTime/CalendarTime';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport styles from './Calendar.module.css';\n\nexport interface CalendarProps\n  extends Omit<HTMLAttributesWithRootRef<HTMLDivElement>, 'onChange'>,\n    Pick<CalendarTimeProps, 'changeHoursAriaLabel' | 'changeMinutesAriaLabel'>,\n    Pick<\n      CalendarHeaderProps,\n      | 'prevMonthAriaLabel'\n      | 'nextMonthAriaLabel'\n      | 'changeMonthAriaLabel'\n      | 'changeYearAriaLabel'\n      | 'onNextMonth'\n      | 'onPrevMonth'\n      | 'prevMonthIcon'\n      | 'nextMonthIcon'\n      | 'prevMonthProps'\n      | 'nextMonthProps'\n    >,\n    Pick<CalendarDaysProps, 'dayProps' | 'listenDayChangesForUpdate'> {\n  value?: Date;\n  disablePast?: boolean;\n  disableFuture?: boolean;\n  enableTime?: boolean;\n  disablePickers?: boolean;\n  doneButtonText?: string;\n  changeDayAriaLabel?: string;\n  weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n  showNeighboringMonth?: boolean;\n  size?: 's' | 'm';\n  onChange?(value?: Date): void;\n  shouldDisableDate?(value: Date): boolean;\n  onClose?(): void;\n  /**\n   * Дата отображаемого месяца.\n   * При использовании обновление даты должно происходить вне компонента.\n   */\n  viewDate?: Date;\n  /**\n   * Изменение даты в шапке календаря.\n   */\n  onHeaderChange?(value: Date): void;\n}\n\nconst warn = warnOnce('Calendar');\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Calendar\n */\nexport const Calendar = ({\n  value,\n  onChange,\n  disablePast,\n  disableFuture,\n  shouldDisableDate,\n  onClose,\n  enableTime = false,\n  doneButtonText,\n  weekStartsOn = 1,\n  disablePickers,\n  changeHoursAriaLabel,\n  changeMinutesAriaLabel,\n  prevMonthAriaLabel,\n  nextMonthAriaLabel,\n  changeMonthAriaLabel,\n  changeYearAriaLabel,\n  showNeighboringMonth,\n  changeDayAriaLabel = 'Изменить день',\n  size = 'm',\n  viewDate: externalViewDate,\n  onHeaderChange,\n  onNextMonth,\n  onPrevMonth,\n  prevMonthIcon,\n  nextMonthIcon,\n  prevMonthProps,\n  nextMonthProps,\n  dayProps,\n  listenDayChangesForUpdate,\n  ...props\n}: CalendarProps) => {\n  const {\n    viewDate,\n    setViewDate,\n    setPrevMonth,\n    setNextMonth,\n    focusedDay,\n    setFocusedDay,\n    isDayFocused,\n    isDayDisabled,\n    resetSelectedDay,\n  } = useCalendar({\n    value,\n    disableFuture,\n    disablePast,\n    shouldDisableDate,\n    onHeaderChange,\n    onNextMonth,\n    onPrevMonth,\n  });\n\n  useIsomorphicLayoutEffect(() => {\n    if (value) {\n      setViewDate(value);\n    }\n  }, [value]);\n\n  if (process.env.NODE_ENV === 'development' && !disablePickers && size === 's') {\n    warn(\"Нельзя включить селекты выбора месяца/года, если размер календаря 's'\", 'error');\n  }\n\n  if (process.env.NODE_ENV === 'development' && enableTime && size === 's') {\n    warn(\"Нельзя включить выбор времени, если размер календаря 's'\", 'error');\n  }\n\n  const handleKeyDown = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      if (['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(event.key)) {\n        event.preventDefault();\n      }\n\n      const newFocusedDay = navigateDate(focusedDay ?? value, event.key);\n\n      if (newFocusedDay && !isSameMonth(newFocusedDay, viewDate)) {\n        setViewDate(newFocusedDay);\n      }\n      setFocusedDay(newFocusedDay);\n    },\n    [focusedDay, setFocusedDay, setViewDate, value, viewDate],\n  );\n\n  const onDayChange = React.useCallback(\n    (date: Date) => {\n      onChange?.(setTimeEqual(date, value as Date | undefined | null));\n    },\n    [value, onChange],\n  );\n\n  const isDayActive = React.useCallback(\n    (day: Date) => Boolean(value && isSameDay(day, value)),\n    [value],\n  );\n\n  return (\n    <RootComponent\n      {...props}\n      baseClassName={classNames(styles['Calendar'], size === 's' && styles['Calendar--size-s'])}\n    >\n      <CalendarHeader\n        viewDate={externalViewDate || viewDate}\n        onChange={setViewDate}\n        onNextMonth={setNextMonth}\n        onPrevMonth={setPrevMonth}\n        disablePickers={disablePickers || size === 's'}\n        className={styles['Calendar__header']}\n        prevMonthAriaLabel={prevMonthAriaLabel}\n        nextMonthAriaLabel={nextMonthAriaLabel}\n        changeMonthAriaLabel={changeMonthAriaLabel}\n        changeYearAriaLabel={changeYearAriaLabel}\n        prevMonthIcon={prevMonthIcon}\n        nextMonthIcon={nextMonthIcon}\n        prevMonthProps={prevMonthProps}\n        nextMonthProps={nextMonthProps}\n      />\n      <CalendarDays\n        viewDate={externalViewDate || viewDate}\n        value={value}\n        weekStartsOn={weekStartsOn}\n        isDayFocused={isDayFocused}\n        tabIndex={0}\n        aria-label={changeDayAriaLabel}\n        onKeyDown={handleKeyDown}\n        onDayChange={onDayChange}\n        isDayActive={isDayActive}\n        isDaySelectionStart={isFirstDay}\n        isDaySelectionEnd={isLastDay}\n        isDayDisabled={isDayDisabled}\n        onBlur={resetSelectedDay}\n        showNeighboringMonth={showNeighboringMonth}\n        size={size}\n        dayProps={dayProps}\n        listenDayChangesForUpdate={listenDayChangesForUpdate}\n      />\n      {enableTime && value && size !== 's' && (\n        <div className={styles['Calendar__time']}>\n          <CalendarTime\n            value={value}\n            onChange={onChange}\n            onClose={onClose}\n            doneButtonText={doneButtonText}\n            changeHoursAriaLabel={changeHoursAriaLabel}\n            changeMinutesAriaLabel={changeMinutesAriaLabel}\n          />\n        </div>\n      )}\n    </RootComponent>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}