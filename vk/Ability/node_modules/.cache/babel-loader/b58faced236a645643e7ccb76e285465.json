{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport * as React from \"react\";\nimport { classNames, isPrimitiveReactNode } from \"@vkontakte/vkjs\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { Platform } from \"../../lib/platform\";\nimport { getTitleFromChildren } from \"../../lib/utils\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { Tappable } from \"../Tappable/Tappable\";\nimport { Text } from \"../Typography/Text/Text\";\nimport { Title } from \"../Typography/Title/Title\";\nvar platformClassNames = {\n  ios: \"vkuiPanelHeaderButton--ios\",\n  android: \"vkuiPanelHeaderButton--android\",\n  vkcom: \"vkuiPanelHeaderButton--vkcom\"\n};\n\nvar ButtonTypography = function (param) {\n  var primary = param.primary,\n      children = param.children;\n  var platform = usePlatform();\n\n  if (platform === Platform.IOS) {\n    return /*#__PURE__*/React.createElement(Title, {\n      Component: \"span\",\n      level: \"3\",\n      weight: primary ? \"1\" : \"3\"\n    }, children);\n  }\n\n  return /*#__PURE__*/React.createElement(Text, {\n    weight: platform === Platform.VKCOM ? undefined : \"2\"\n  }, children);\n};\n\nvar warn = warnOnce(\"PanelHeaderButton\");\n/**\n * @see https://vkcom.github.io/VKUI/#/PanelHeaderButton\n */\n\nexport var PanelHeaderButton = function (_param) {\n  var children = _param.children,\n      _param_primary = _param.primary,\n      primary = _param_primary === void 0 ? false : _param_primary,\n      label = _param.label,\n      className = _param.className,\n      restProps = _object_without_properties(_param, [\"children\", \"primary\", \"label\", \"className\"]);\n\n  var isPrimitive = isPrimitiveReactNode(children);\n  var isPrimitiveLabel = isPrimitiveReactNode(label);\n  var platform = usePlatform();\n  var hoverMode;\n  var activeMode;\n\n  switch (platform) {\n    case Platform.IOS:\n      hoverMode = \"background\";\n      activeMode = \"opacity\";\n      break;\n\n    case Platform.VKCOM:\n      hoverMode = \"vkuiPanelHeaderButton--hover\";\n      activeMode = \"vkuiPanelHeaderButton--active\";\n      break;\n\n    default:\n      hoverMode = \"background\";\n      activeMode = \"background\";\n  }\n\n  if (process.env.NODE_ENV === \"development\") {\n    var hasAccessibleName = Boolean(getTitleFromChildren(children) || getTitleFromChildren(label) || restProps[\"aria-label\"] || restProps[\"aria-labelledby\"]);\n\n    if (!hasAccessibleName) {\n      warn(\"a11y: У кнопки нет названия, которое может прочитать скринридер, и она недоступна для части пользователей. Замените содержимое на текст или добавьте описание действия с помощью пропа aria-label.\", \"error\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Tappable, _object_spread_props(_object_spread({\n    Component: restProps.href ? \"a\" : \"button\"\n  }, restProps), {\n    hoverMode: hoverMode,\n    activeEffectDelay: 200,\n    activeMode: activeMode,\n    className: classNames(\"vkuiInternalPanelHeaderButton\", \"vkuiPanelHeaderButton\", platformClassNames.hasOwnProperty(platform) ? platformClassNames[platform] : platformClassNames.android, isPrimitive && \"vkuiPanelHeaderButton--primitive\", !isPrimitive && !isPrimitiveLabel && \"vkuiPanelHeaderButton--notPrimitive\", className)\n  }), isPrimitive ? /*#__PURE__*/React.createElement(ButtonTypography, {\n    primary: primary\n  }, children) : children, isPrimitiveLabel ? /*#__PURE__*/React.createElement(ButtonTypography, {\n    primary: primary,\n    className: \"vkuiPanelHeaderButton__label\"\n  }, label) : label);\n};","map":{"version":3,"mappings":"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","names":["React","classNames","isPrimitiveReactNode","usePlatform","Platform","getTitleFromChildren","warnOnce","Tappable","Text","Title","platformClassNames","ios","android","vkcom","ButtonTypography","primary","children","platform","IOS","Component","level","weight","VKCOM","undefined","warn","PanelHeaderButton","_param_primary","label","className","restProps","isPrimitive","isPrimitiveLabel","hoverMode","activeMode","process","env","NODE_ENV","hasAccessibleName","Boolean","href","activeEffectDelay","hasOwnProperty"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\components\\PanelHeaderButton\\PanelHeaderButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, isPrimitiveReactNode } from '@vkontakte/vkjs';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { Platform } from '../../lib/platform';\nimport { getTitleFromChildren } from '../../lib/utils';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { Tappable, TappableProps } from '../Tappable/Tappable';\nimport { Text } from '../Typography/Text/Text';\nimport { Title } from '../Typography/Title/Title';\nimport styles from './PanelHeaderButton.module.css';\n\nconst platformClassNames = {\n  ios: styles['PanelHeaderButton--ios'],\n  android: styles['PanelHeaderButton--android'],\n  vkcom: styles['PanelHeaderButton--vkcom'],\n};\n\nexport interface PanelHeaderButtonProps extends Omit<TappableProps, 'label'> {\n  primary?: boolean;\n  label?: React.ReactNode;\n}\n\ninterface ButtonTypographyProps extends React.AllHTMLAttributes<HTMLElement> {\n  primary?: PanelHeaderButtonProps['primary'];\n}\n\nconst ButtonTypography = ({ primary, children }: ButtonTypographyProps) => {\n  const platform = usePlatform();\n\n  if (platform === Platform.IOS) {\n    return (\n      <Title Component=\"span\" level=\"3\" weight={primary ? '1' : '3'}>\n        {children}\n      </Title>\n    );\n  }\n\n  return <Text weight={platform === Platform.VKCOM ? undefined : '2'}>{children}</Text>;\n};\n\nconst warn = warnOnce('PanelHeaderButton');\n\n/**\n * @see https://vkcom.github.io/VKUI/#/PanelHeaderButton\n */\nexport const PanelHeaderButton = ({\n  children,\n  primary = false,\n  label,\n  className,\n  ...restProps\n}: PanelHeaderButtonProps) => {\n  const isPrimitive = isPrimitiveReactNode(children);\n  const isPrimitiveLabel = isPrimitiveReactNode(label);\n  const platform = usePlatform();\n\n  let hoverMode;\n  let activeMode;\n\n  switch (platform) {\n    case Platform.IOS:\n      hoverMode = 'background';\n      activeMode = 'opacity';\n      break;\n    case Platform.VKCOM:\n      hoverMode = styles['PanelHeaderButton--hover'];\n      activeMode = styles['PanelHeaderButton--active'];\n      break;\n    default:\n      hoverMode = 'background';\n      activeMode = 'background';\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    const hasAccessibleName = Boolean(\n      getTitleFromChildren(children) ||\n        getTitleFromChildren(label) ||\n        restProps['aria-label'] ||\n        restProps['aria-labelledby'],\n    );\n\n    if (!hasAccessibleName) {\n      warn(\n        'a11y: У кнопки нет названия, которое может прочитать скринридер, и она недоступна для части пользователей. Замените содержимое на текст или добавьте описание действия с помощью пропа aria-label.',\n        'error',\n      );\n    }\n  }\n\n  return (\n    <Tappable\n      Component={restProps.href ? 'a' : 'button'}\n      {...restProps}\n      hoverMode={hoverMode}\n      activeEffectDelay={200}\n      activeMode={activeMode}\n      className={classNames(\n        'vkuiInternalPanelHeaderButton',\n        styles['PanelHeaderButton'],\n        platformClassNames.hasOwnProperty(platform)\n          ? platformClassNames[platform]\n          : platformClassNames.android,\n        isPrimitive && styles['PanelHeaderButton--primitive'],\n        !isPrimitive && !isPrimitiveLabel && styles['PanelHeaderButton--notPrimitive'],\n        className,\n      )}\n    >\n      {isPrimitive ? <ButtonTypography primary={primary}>{children}</ButtonTypography> : children}\n      {isPrimitiveLabel ? (\n        <ButtonTypography primary={primary} className={styles['PanelHeaderButton__label']}>\n          {label}\n        </ButtonTypography>\n      ) : (\n        label\n      )}\n    </Tappable>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}