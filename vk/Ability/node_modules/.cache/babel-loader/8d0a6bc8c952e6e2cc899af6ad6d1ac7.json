{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport * as React from \"react\";\nimport { Icon28ChevronRightCircle } from \"@vkontakte/icons\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { Tappable } from \"../Tappable/Tappable\";\nimport { Subhead } from \"../Typography/Subhead/Subhead\";\nvar sizeClassNames = {\n  s: \"vkuiHorizontalCellShowMore--size-s\",\n  m: \"vkuiHorizontalCellShowMore--size-m\",\n  l: \"vkuiHorizontalCellShowMore--size-l\"\n};\nexport var HorizontalCellShowMore = function (_param) {\n  var className = _param.className,\n      style = _param.style,\n      getRef = _param.getRef,\n      getRootRef = _param.getRootRef,\n      compensateLastCellIndent = _param.compensateLastCellIndent,\n      height = _param.height,\n      _param_size = _param.size,\n      size = _param_size === void 0 ? \"s\" : _param_size,\n      _param_children = _param.children,\n      children = _param_children === void 0 ? size === \"s\" ? \"Все\" : \"Показать все\" : _param_children,\n      restProps = _object_without_properties(_param, [\"className\", \"style\", \"getRef\", \"getRootRef\", \"compensateLastCellIndent\", \"height\", \"size\", \"children\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: style,\n    className: classNames(\"vkuiHorizontalCellShowMore\", compensateLastCellIndent && \"vkuiHorizontalCellShowMore--compensate-last-cell-indent\", sizeClassNames[size], className),\n    ref: getRootRef\n  }, /*#__PURE__*/React.createElement(Tappable, _object_spread({\n    style: size === \"s\" ? undefined : {\n      height: height\n    },\n    className: \"vkuiHorizontalCellShowMore__body\",\n    getRootRef: getRef,\n    activeMode: \"opacity\",\n    hoverMode: \"opacity\"\n  }, restProps), /*#__PURE__*/React.createElement(Icon28ChevronRightCircle, {\n    className: \"vkuiHorizontalCellShowMore__icon\",\n    fill: \"currentColor\"\n  }), /*#__PURE__*/React.createElement(Subhead, {\n    className: \"vkuiHorizontalCellShowMore__text\",\n    weight: \"2\"\n  }, children)));\n};","map":{"version":3,"mappings":";;AAAA,YAAYA,KAAZ,MAAuB,OAAvB;AACA,SAASC,wBAAT,QAAyC,kBAAzC;AACA,SAASC,UAAT,QAA2B,iBAA3B;AAGA,SAASC,QAAT,QAAwC,sBAAxC;AACA,SAASC,OAAT,QAAsC,+BAAtC;AAGA,IAAMC,iBAAiB;EACrBC,CAAC,sCADoB;EAErBC,CAAC,sCAFoB;EAGrBC,CAAC;AAHoB,CAAvB;AAuCA,OAAO,IAAMC,yBAAyB;MACpCC;MACAC;MACAC;MACAC;MACAC;MACAC;MAAAA,qBACAC;MAAAA,gCAAO,GAAPA,GAAOC;MAAAC,yBACPC;MAAAA,wCAAWH,SAAS,GAATA,GAAe,KAAfA,GAAuB,cAAlCG,GAAkCD;MAC/BE,gDARHV,WAQGU,EAPHT,OAOGS,EANHR,QAMGQ,EALHP,YAKGO,EAJHN,0BAIGM,EAHHL,QAGGK,EAFHJ,MAEGI,EADHD,UACGC;;EAEH,oBACEpB,oBAACqB,KAAD,EAACA;IACCV,OAAOA,KADRU;IAECX,WAAWR,yCAETY,qFAFSZ,EAGTG,cAAc,CAACW,IAAD,CAHLd,EAITQ,SAJSR,CAFZmB;IAQCC,KAAKT;EARNQ,CAAD,eAUErB,oBAACG,QAAD,EAACA;IACCQ,OAAOK,SAAS,GAATA,GAAeO,SAAfP,GAA2B;MAAED;IAAF,CADnCZ;IAECO,SAAS,oCAFVP;IAGCU,YAAYD,MAHbT;IAICqB,YAAW,SAJZrB;IAKCsB,WAAU;EALXtB,GAMKiB,SANLjB,CAAD,EAMMiB,aAEJpB,oBAACC,wBAAD,EAACA;IACCS,SAAS,oCADVT;IAECyB,MAAK;EAFNzB,CAAD,CARF,eAaED,oBAACI,OAAD,EAACA;IAAQM,SAAS,oCAAjBN;IAA2DuB,QAAO;EAAlEvB,CAAD,EACGe,QADH,CAbF,CAVF,CADF;AA8BF,CAzCO","names":["React","Icon28ChevronRightCircle","classNames","Tappable","Subhead","sizeClassNames","s","m","l","HorizontalCellShowMore","className","style","getRef","getRootRef","compensateLastCellIndent","height","size","_param_size","_param_children","children","restProps","div","ref","undefined","activeMode","hoverMode","fill","weight"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\components\\HorizontalCellShowMore\\HorizontalCellShowMore.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Icon28ChevronRightCircle } from '@vkontakte/icons';\nimport { classNames } from '@vkontakte/vkjs';\nimport { HasRef, HasRootRef, LiteralUnion } from '../../types';\nimport type { ImageBaseSize } from '../ImageBase/ImageBase';\nimport { Tappable, TappableProps } from '../Tappable/Tappable';\nimport { Subhead, SubheadProps } from '../Typography/Subhead/Subhead';\nimport styles from './HorizontalCellShowMore.module.css';\n\nconst sizeClassNames = {\n  s: styles['HorizontalCellShowMore--size-s'],\n  m: styles['HorizontalCellShowMore--size-m'],\n  l: styles['HorizontalCellShowMore--size-l'],\n};\n\nexport interface HorizontalCellShowMoreProps\n  extends Omit<TappableProps, 'getRootRef' | 'size'>,\n    HasRef<HTMLElement>,\n    HasRootRef<HTMLDivElement> {\n  /**\n   * Задаёт высоту компонента. Должeн соответствовать размеру картинок\n   * внутри соседних `HorizontalCell` компонентов.\n   *\n   * Используйте размеры заданные дизайн-системой (см. типы).\n   *\n   * > ⚠️ Использование кастомного размера – это пограничный кейс.\n   *\n   * Игнорируется если `size='s'`.\n   */\n  height?: LiteralUnion<ImageBaseSize, number>;\n  /**\n   * Задаёт размер компонента. Аналогичен такому же пропу у [HorizontalCell](https://vkcom.github.io/VKUI/#/HorizontalCellShowMore?id=props).\n   * Должен соответствовать значению пропа `size` соседних `HorizontalCell`.\n   */\n  size?: 's' | 'm' | 'l';\n  /**\n   * Предназначен для отрисовки текста.\n   * По умолчанию для `size='s'` содержит текст `Все` для других размеров `Показать все`.\n   * */\n  children?: SubheadProps['children'];\n  /**\n   * Позволяет компенсировать особый правый отступ у предшевствующего элементa `HorizontalCell`,\n   * в том случае, если тот элемент последний в родителе.\n   * Если `HorizontalCellShowMore` находится на одном уровне с остальными `HorizontalCell`, то этот проп использовать не нужно.\n   */\n  compensateLastCellIndent?: boolean;\n}\n\nexport const HorizontalCellShowMore = ({\n  className,\n  style,\n  getRef,\n  getRootRef,\n  compensateLastCellIndent,\n  height,\n  size = 's',\n  children = size === 's' ? 'Все' : 'Показать все',\n  ...restProps\n}: HorizontalCellShowMoreProps) => {\n  return (\n    <div\n      style={style}\n      className={classNames(\n        styles['HorizontalCellShowMore'],\n        compensateLastCellIndent && styles['HorizontalCellShowMore--compensate-last-cell-indent'],\n        sizeClassNames[size],\n        className,\n      )}\n      ref={getRootRef}\n    >\n      <Tappable\n        style={size === 's' ? undefined : { height }}\n        className={styles['HorizontalCellShowMore__body']}\n        getRootRef={getRef}\n        activeMode=\"opacity\"\n        hoverMode=\"opacity\"\n        {...restProps}\n      >\n        <Icon28ChevronRightCircle\n          className={styles['HorizontalCellShowMore__icon']}\n          fill=\"currentColor\"\n        />\n\n        <Subhead className={styles['HorizontalCellShowMore__text']} weight=\"2\">\n          {children}\n        </Subhead>\n      </Tappable>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}