{"ast":null,"code":"import { canUseDOM } from \"./dom\";\n/*\n * Получает координату по оси абсцисс из touch- или mouse-события\n */\n\nvar coordX = function (e) {\n  if (e.clientX != null) {\n    return e.clientX;\n  }\n\n  return e.changedTouches && e.changedTouches[0].clientX;\n};\n/*\n * Получает координату по оси ординат из touch- или mouse-события\n */\n\n\nvar coordY = function (e) {\n  if (e.clientY != null) {\n    return e.clientY;\n  }\n\n  return e.changedTouches && e.changedTouches[0].clientY;\n}; // eslint-disable-next-line no-restricted-globals\n\n\nvar touchEnabled = function () {\n  return canUseDOM && \"ontouchstart\" in window;\n};\n/*\n * Возвращает массив поддерживаемых событий\n * Если браузер поддерживает pointer events или подключена handjs, вернет события указателя.\n * Если нет, используем события мыши\n */\n\n\nfunction getSupportedEvents() {\n  if (touchEnabled()) {\n    return [\"touchstart\", \"touchmove\", \"touchend\", \"touchcancel\"];\n  }\n\n  return [\"mousedown\", \"mousemove\", \"mouseup\", \"mouseleave\"];\n}\n/*\n * Рассчитывает \"сопротивление\" для iOS тач-событий\n */\n\n\nfunction rubber(offset, dimension, resistanceRate, isAndroid) {\n  if (isAndroid || offset < 0) {\n    return offset;\n  }\n\n  var offsettedResistance = offset * resistanceRate;\n  return offsettedResistance * dimension / (offsettedResistance + dimension);\n}\n\nexport { getSupportedEvents, coordX, coordY, touchEnabled, rubber };","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AAKA;;;;AAGA,IAAMC,SAAS,UAACC,CAAD,EAACA;EACd,IAAIA,EAAEC,OAAFD,IAAa,IAAjB,EAAuB;IACrB,OAAOA,EAAEC,OAAT;EACF;;EACA,OAAOD,EAAEE,cAAFF,IAAoBA,EAAEE,cAAFF,CAAiB,CAAjBA,EAAoBC,OAA/C;AACF,CALA;AAOA;;;;;AAGA,IAAME,SAAS,UAACH,CAAD,EAACA;EACd,IAAIA,EAAEI,OAAFJ,IAAa,IAAjB,EAAuB;IACrB,OAAOA,EAAEI,OAAT;EACF;;EACA,OAAOJ,EAAEE,cAAFF,IAAoBA,EAAEE,cAAFF,CAAiB,CAAjBA,EAAoBI,OAA/C;AACF,CALA,C,CAOA;;;AACA,IAAMC,eAAe;SAAMP,aAAa,kBAAkBQ;CAA1D;AAEA;;;;;;;AAKA,SAASC,kBAAT,GAASA;EACP,IAAIF,cAAJ,EAAoB;IAClB,OAAO,CAAC,YAAD,EAAe,WAAf,EAA4B,UAA5B,EAAwC,aAAxC,CAAP;EACF;;EAEA,OAAO,CAAC,WAAD,EAAc,WAAd,EAA2B,SAA3B,EAAsC,YAAtC,CAAP;AACF;AAEA;;;;;AAGA,SAASG,MAAT,CACEC,MADF,EAEEC,SAFF,EAGEC,cAHF,EAIEC,SAJF,EAIoB;EAElB,IAAIA,aAAaH,SAAS,CAA1B,EAA6B;IAC3B,OAAOA,MAAP;EACF;;EAEA,IAAMI,sBAAsBJ,SAASE,cAArC;EACA,OAAOE,mBAACA,GAAsBH,SAAvB,IAAqCG,sBAAsBH,SAA3D,CAAP;AACF;;AAEA,SAASH,kBAAT,EAA6BR,MAA7B,EAAqCI,MAArC,EAA6CE,YAA7C,EAA2DG,MAA3D","names":["canUseDOM","coordX","e","clientX","changedTouches","coordY","clientY","touchEnabled","window","getSupportedEvents","rubber","offset","dimension","resistanceRate","isAndroid","offsettedResistance"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\lib\\touch.ts"],"sourcesContent":["import { canUseDOM } from './dom';\n\nexport interface VKUITouchEvent extends MouseEvent, TouchEvent {}\nexport type VKUITouchEventHandler = (e: VKUITouchEvent) => void;\n\n/*\n * Получает координату по оси абсцисс из touch- или mouse-события\n */\nconst coordX = (e: VKUITouchEvent): number => {\n  if (e.clientX != null) {\n    return e.clientX;\n  }\n  return e.changedTouches && e.changedTouches[0].clientX;\n};\n\n/*\n * Получает координату по оси ординат из touch- или mouse-события\n */\nconst coordY = (e: VKUITouchEvent): number => {\n  if (e.clientY != null) {\n    return e.clientY;\n  }\n  return e.changedTouches && e.changedTouches[0].clientY;\n};\n\n// eslint-disable-next-line no-restricted-globals\nconst touchEnabled = () => canUseDOM && 'ontouchstart' in window;\n\n/*\n * Возвращает массив поддерживаемых событий\n * Если браузер поддерживает pointer events или подключена handjs, вернет события указателя.\n * Если нет, используем события мыши\n */\nfunction getSupportedEvents(): string[] {\n  if (touchEnabled()) {\n    return ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n  }\n\n  return ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\n}\n\n/*\n * Рассчитывает \"сопротивление\" для iOS тач-событий\n */\nfunction rubber(\n  offset: number,\n  dimension: number,\n  resistanceRate: number,\n  isAndroid: boolean,\n): number {\n  if (isAndroid || offset < 0) {\n    return offset;\n  }\n\n  const offsettedResistance = offset * resistanceRate;\n  return (offsettedResistance * dimension) / (offsettedResistance + dimension);\n}\n\nexport { getSupportedEvents, coordX, coordY, touchEnabled, rubber };\n"]},"metadata":{},"sourceType":"module"}