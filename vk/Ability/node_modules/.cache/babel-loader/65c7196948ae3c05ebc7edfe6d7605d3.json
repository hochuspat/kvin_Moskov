{"ast":null,"code":"import { _ as _sliced_to_array } from \"@swc/helpers/_/_sliced_to_array\";\nimport * as React from \"react\";\nimport { addMonths, endOfDay, isAfter, isBefore, isSameDay, startOfDay, subMonths } from \"../lib/date\";\nexport function useCalendar(param) {\n  var value = param.value,\n      disablePast = param.disablePast,\n      disableFuture = param.disableFuture,\n      shouldDisableDate = param.shouldDisableDate,\n      onHeaderChange = param.onHeaderChange,\n      onNextMonth = param.onNextMonth,\n      onPrevMonth = param.onPrevMonth;\n\n  var _ref;\n\n  var _React_useState = _sliced_to_array(React.useState((_ref = Array.isArray(value) ? value[0] : value) !== null && _ref !== void 0 ? _ref : new Date()), 2),\n      viewDate = _React_useState[0],\n      setViewDate = _React_useState[1];\n\n  var _React_useState1 = _sliced_to_array(React.useState(), 2),\n      focusedDay = _React_useState1[0],\n      setFocusedDay = _React_useState1[1];\n\n  var setPrevMonth = React.useCallback(function () {\n    onPrevMonth === null || onPrevMonth === void 0 ? void 0 : onPrevMonth();\n    setViewDate(subMonths(viewDate, 1));\n  }, [viewDate, onPrevMonth]);\n  var setNextMonth = React.useCallback(function () {\n    onNextMonth === null || onNextMonth === void 0 ? void 0 : onNextMonth();\n    setViewDate(addMonths(viewDate, 1));\n  }, [viewDate, onNextMonth]);\n  var handleSetViewDate = React.useCallback(function (value) {\n    onHeaderChange === null || onHeaderChange === void 0 ? void 0 : onHeaderChange(value);\n    setViewDate(value);\n  }, [onHeaderChange]);\n  var isDayFocused = React.useCallback(function (day) {\n    return Boolean(focusedDay && isSameDay(day, focusedDay));\n  }, [focusedDay]);\n  var isDayDisabled = React.useCallback(function (day) {\n    var now = new Date();\n    var disabled = false;\n\n    if (disablePast) {\n      disabled = isBefore(endOfDay(day), now);\n    }\n\n    if (disableFuture) {\n      disabled = isAfter(startOfDay(day), now);\n    }\n\n    if (shouldDisableDate) {\n      disabled = shouldDisableDate(day);\n    }\n\n    return disabled;\n  }, [disableFuture, disablePast, shouldDisableDate]);\n  var resetSelectedDay = React.useCallback(function () {\n    setFocusedDay(undefined);\n  }, [setFocusedDay]);\n  return {\n    viewDate: viewDate,\n    setViewDate: handleSetViewDate,\n    setPrevMonth: setPrevMonth,\n    setNextMonth: setNextMonth,\n    focusedDay: focusedDay,\n    setFocusedDay: setFocusedDay,\n    isDayFocused: isDayFocused,\n    isDayDisabled: isDayDisabled,\n    resetSelectedDay: resetSelectedDay\n  };\n}","map":{"version":3,"mappings":";AAAA,YAAYA,KAAZ,MAAuB,OAAvB;AAEA,SACEC,SADF,EAEEC,QAFF,EAGEC,OAHF,EAIEC,QAJF,EAKEC,SALF,EAMEC,UANF,EAOEC,SAPF,QAQO,aARP;AAkBA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAQmB;MAPxBC,QAD0BD,MAC1BC;MACAC,cAF0BF,MAE1BE;MACAC,gBAH0BH,MAG1BG;MACAC,oBAJ0BJ,MAI1BI;MACAC,iBAL0BL,MAK1BK;MACAC,cAN0BN,MAM1BM;MACAC,cAP0BP,MAO1BO;;MAGGC;;EADH,IAAgCjB,yCAAMkB,QAANlB,CAC9B,CAACiB,aAAME,OAANF,CAAcP,KAAdO,IAAuBP,KAAK,CAAC,CAAD,CAA5BO,GAAkCP,KAAnC,MAAmCA,IAAnC,IAACO,eAAD,GAACA,IAAD,GAA6C,IAAIG,IAAJ,EADfpB,GACmBoB,CADnBpB,CAAhC;EAAA,IAAOqB,WAAyBrB,kBAAhC;EAAA,IAAiBsB,cAAetB,kBAAhC;;EAGA,IAAoCA,0CAAMkB,QAANlB,IAAc,CAAdA,CAApC;EAAA,IAAOuB,aAA6BvB,mBAApC;EAAA,IAAmBwB,gBAAiBxB,mBAApC;;EAEA,IAAMyB,eAAezB,MAAM0B,WAAN1B,CAAkB;IACrCgB;IACAM,YAAYf,UAAUc,QAAVd,EAAoB,CAApBA,CAAZe;EACF,CAHqBtB,EAGlB,CAACqB,QAAD,EAAWL,WAAX,CAHkBhB,CAArB;EAIA,IAAM2B,eAAe3B,MAAM0B,WAAN1B,CAAkB;IACrCe;IACAO,YAAYrB,UAAUoB,QAAVpB,EAAoB,CAApBA,CAAZqB;EACF,CAHqBtB,EAGlB,CAACqB,QAAD,EAAWN,WAAX,CAHkBf,CAArB;EAKA,IAAM4B,oBAAoB5B,MAAM0B,WAAN1B,CACxB,UAACU,KAAD,EAACA;IACCI,+EAAiBJ,KAAjBI;IACAQ,YAAYZ,KAAZY;EACF,CAJwBtB,EAKxB,CAACc,cAAD,CALwBd,CAA1B;EAQA,IAAM6B,eAAe7B,MAAM0B,WAAN1B,CACnB,UAAC8B,GAAD,EAACA;WAAcC,QAAQR,cAAclB,UAAUyB,GAAVzB,EAAekB,UAAflB,CAAtB0B;GADI/B,EAEnB,CAACuB,UAAD,CAFmBvB,CAArB;EAKA,IAAMgC,gBAAgBhC,MAAM0B,WAAN1B,CACpB,UAAC8B,GAAD,EAACA;IACC,IAAMG,MAAM,IAAIb,IAAJ,EAAZ;IACA,IAAIc,WAAW,KAAf;;IACA,IAAIvB,WAAJ,EAAiB;MACfuB,WAAW9B,SAASF,SAAS4B,GAAT5B,CAATE,EAAwB6B,GAAxB7B,CAAX8B;IACF;;IACA,IAAItB,aAAJ,EAAmB;MACjBsB,WAAW/B,QAAQG,WAAWwB,GAAXxB,CAARH,EAAyB8B,GAAzB9B,CAAX+B;IACF;;IACA,IAAIrB,iBAAJ,EAAuB;MACrBqB,WAAWrB,kBAAkBiB,GAAlBjB,CAAXqB;IACF;;IAEA,OAAOA,QAAP;EACF,CAfoBlC,EAgBpB,CAACY,aAAD,EAAgBD,WAAhB,EAA6BE,iBAA7B,CAhBoBb,CAAtB;EAmBA,IAAMmC,mBAAmBnC,MAAM0B,WAAN1B,CAAkB;IACzCwB,cAAcY,SAAdZ;EACF,CAFyBxB,EAEtB,CAACwB,aAAD,CAFsBxB,CAAzB;EAIA,OAAO;IACLqB,kBADK;IAELC,aAAaM,iBAFR;IAGLH,0BAHK;IAILE,0BAJK;IAKLJ,sBALK;IAMLC,4BANK;IAOLK,0BAPK;IAQLG,4BARK;IASLG;EATK,CAAP;AAWF","names":["React","addMonths","endOfDay","isAfter","isBefore","isSameDay","startOfDay","subMonths","useCalendar","param","value","disablePast","disableFuture","shouldDisableDate","onHeaderChange","onNextMonth","onPrevMonth","Array","useState","isArray","Date","viewDate","setViewDate","focusedDay","setFocusedDay","setPrevMonth","useCallback","setNextMonth","handleSetViewDate","isDayFocused","day","Boolean","isDayDisabled","now","disabled","resetSelectedDay","undefined"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\hooks\\useCalendar.ts"],"sourcesContent":["import * as React from 'react';\nimport { CalendarProps } from '../components/Calendar/Calendar';\nimport {\n  addMonths,\n  endOfDay,\n  isAfter,\n  isBefore,\n  isSameDay,\n  startOfDay,\n  subMonths,\n} from '../lib/date';\n\nexport interface UseCalendarDependencies\n  extends Pick<CalendarProps, 'onHeaderChange' | 'onNextMonth' | 'onPrevMonth'> {\n  value?: Array<Date | null> | Date;\n  disablePast?: boolean;\n  disableFuture?: boolean;\n  shouldDisableDate?(value: Date): boolean;\n}\n\nexport function useCalendar({\n  value,\n  disablePast,\n  disableFuture,\n  shouldDisableDate,\n  onHeaderChange,\n  onNextMonth,\n  onPrevMonth,\n}: UseCalendarDependencies) {\n  const [viewDate, setViewDate] = React.useState(\n    (Array.isArray(value) ? value[0] : value) ?? new Date(),\n  );\n  const [focusedDay, setFocusedDay] = React.useState<Date>();\n\n  const setPrevMonth = React.useCallback(() => {\n    onPrevMonth?.();\n    setViewDate(subMonths(viewDate, 1));\n  }, [viewDate, onPrevMonth]);\n  const setNextMonth = React.useCallback(() => {\n    onNextMonth?.();\n    setViewDate(addMonths(viewDate, 1));\n  }, [viewDate, onNextMonth]);\n\n  const handleSetViewDate = React.useCallback(\n    (value: Date) => {\n      onHeaderChange?.(value);\n      setViewDate(value);\n    },\n    [onHeaderChange],\n  );\n\n  const isDayFocused = React.useCallback(\n    (day: Date) => Boolean(focusedDay && isSameDay(day, focusedDay)),\n    [focusedDay],\n  );\n\n  const isDayDisabled = React.useCallback(\n    (day: Date) => {\n      const now = new Date();\n      let disabled = false;\n      if (disablePast) {\n        disabled = isBefore(endOfDay(day), now);\n      }\n      if (disableFuture) {\n        disabled = isAfter(startOfDay(day), now);\n      }\n      if (shouldDisableDate) {\n        disabled = shouldDisableDate(day);\n      }\n\n      return disabled;\n    },\n    [disableFuture, disablePast, shouldDisableDate],\n  );\n\n  const resetSelectedDay = React.useCallback(() => {\n    setFocusedDay(undefined);\n  }, [setFocusedDay]);\n\n  return {\n    viewDate,\n    setViewDate: handleSetViewDate,\n    setPrevMonth,\n    setNextMonth,\n    focusedDay,\n    setFocusedDay,\n    isDayFocused,\n    isDayDisabled,\n    resetSelectedDay,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}