{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { _ as _sliced_to_array } from \"@swc/helpers/_/_sliced_to_array\";\nimport { _ as _to_consumable_array } from \"@swc/helpers/_/_to_consumable_array\";\nimport * as React from \"react\";\nimport { classNames, noop } from \"@vkontakte/vkjs\";\nimport mitt from \"mitt\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport { useAdaptivityHasPointer } from \"../../hooks/useAdaptivityHasPointer\";\nimport { useBooleanState } from \"../../hooks/useBooleanState\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { useFocusVisible } from \"../../hooks/useFocusVisible\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { useTimeout } from \"../../hooks/useTimeout\";\nimport { shouldTriggerClickOnEnterOrSpace } from \"../../lib/accessibility\";\nimport { SizeType } from \"../../lib/adaptivity\";\nimport { callMultiple } from \"../../lib/callMultiple\";\nimport { getOffsetRect } from \"../../lib/offset\";\nimport { Platform } from \"../../lib/platform\";\nimport { coordX, coordY } from \"../../lib/touch\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { FocusVisible } from \"../FocusVisible/FocusVisible\";\nimport { Touch } from \"../Touch/Touch\";\nimport TouchRootContext from \"../Touch/TouchContext\";\nvar sizeXClassNames = {\n  none: \"vkuiTappable--sizeX-none\",\n  compact: \"vkuiTappable--sizeX-compact\"\n};\nvar stylesHoverMode = {\n  background: \"vkuiTappable--hover-background\",\n  opacity: \"vkuiTappable--hover-opacity\"\n};\nvar stylesActiveMode = {\n  background: \"vkuiTappable--active-background\",\n  opacity: \"vkuiTappable--active-opacity\"\n};\nvar WAVE_LIVE = 225;\nexport var ACTIVE_DELAY = 70;\nexport var ACTIVE_EFFECT_DELAY = 600;\nvar activeBus = mitt();\nvar TapState = {\n  none: 0,\n  pending: 1,\n  active: 2,\n  exiting: 3\n};\nvar TappableContext = /*#__PURE__*/React.createContext({\n  onHoverChange: noop\n});\n\nfunction isPresetStateMode(stateMode) {\n  switch (stateMode) {\n    case \"opacity\":\n    case \"background\":\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nfunction useActivity(hasActive, stopDelay) {\n  var id = React.useMemo(function () {\n    return Math.round(Math.random() * 1e8).toString(16);\n  }, []);\n\n  var _React_useState = _sliced_to_array(React.useState(TapState.none), 2),\n      activity = _React_useState[0],\n      setActivity = _React_useState[1];\n\n  var _stop = function () {\n    return setActivity(TapState.none);\n  };\n\n  var start = function () {\n    return hasActive && setActivity(TapState.active);\n  };\n\n  var delayStart = function () {\n    hasActive && setActivity(TapState.pending);\n  };\n\n  var activeTimeout = useTimeout(start, ACTIVE_DELAY);\n  var stopTimeout = useTimeout(_stop, stopDelay);\n  useIsomorphicLayoutEffect(function () {\n    if (activity === TapState.pending) {\n      activeTimeout.set();\n      return activeTimeout.clear;\n    }\n\n    if (activity === TapState.exiting) {\n      return stopTimeout.clear;\n    }\n\n    if (activity === TapState.active) {\n      activeBus.emit(\"active\", id);\n    }\n\n    return noop;\n  }, [activity]);\n  useIsomorphicLayoutEffect(function () {\n    if (activity === TapState.none) {\n      return noop;\n    }\n\n    var onActiveChange = function (activeId) {\n      activeId !== id && _stop();\n    };\n\n    activeBus.on(\"active\", onActiveChange);\n    return function () {\n      return activeBus.off(\"active\", onActiveChange);\n    };\n  }, [activity === TapState.none]);\n  useIsomorphicLayoutEffect(function () {\n    !hasActive && _stop();\n  }, [hasActive]);\n\n  var stop = function (delay) {\n    if (delay) {\n      setActivity(TapState.exiting);\n      return stopTimeout.set(delay);\n    }\n\n    _stop();\n  };\n\n  return [activity, {\n    delayStart: delayStart,\n    start: start,\n    stop: stop\n  }];\n}\n/**\n * @see https://vkcom.github.io/VKUI/#/Tappable\n */\n\n\nexport var Tappable = function (_param) {\n  var onKeyDown =\n  /*\n  * [a11y]\n  * Обрабатывает событие onkeydown\n  * для кастомных доступных элементов:\n  * - role=\"link\" (активация по Enter)\n  * - role=\"button\" (активация по Space и Enter)\n  */\n  function onKeyDown(e) {\n    if (isCustomElement && shouldTriggerClickOnEnterOrSpace(e)) {\n      var _containerRef_current;\n\n      e.preventDefault();\n      (_containerRef_current = containerRef.current) === null || _containerRef_current === void 0 ? void 0 : _containerRef_current.click();\n    }\n  };\n\n  var addClick = function addClick(x, y) {\n    var dateNow = Date.now();\n    var filteredClicks = clicks.filter(function (click) {\n      return click.id + WAVE_LIVE > dateNow;\n    });\n    setClicks(_to_consumable_array(filteredClicks).concat([{\n      x: x,\n      y: y,\n      id: dateNow\n    }]));\n    clearClicks.set();\n  };\n\n  var onStart = function onStart(param) {\n    var originalEvent = param.originalEvent;\n\n    if (hasActive) {\n      if (originalEvent.touches && originalEvent.touches.length > 1) {\n        // r сожалению я так и не понял, что это делает и можно ли упихнуть его в Touch\n        return stop();\n      }\n\n      if (needWaves) {\n        var _getOffsetRect = getOffsetRect(containerRef.current),\n            top = _getOffsetRect.top,\n            left = _getOffsetRect.left;\n\n        var x = coordX(originalEvent) - (left !== null && left !== void 0 ? left : 0);\n        var y = coordY(originalEvent) - (top !== null && top !== void 0 ? top : 0);\n        addClick(x, y);\n      }\n\n      delayStart();\n    }\n  };\n\n  var onMove = function onMove(param) {\n    var isSlide = param.isSlide;\n\n    if (isSlide) {\n      stop();\n    }\n  };\n\n  var onEnd = function onEnd(param) {\n    var duration = param.duration;\n\n    if (activity === TapState.none) {\n      return;\n    }\n\n    if (activity === TapState.pending) {\n      // активировать при коротком тапе\n      start();\n    } // отключить без задержки при длинном тапе\n\n\n    var activeDuration = duration - ACTIVE_DELAY;\n    stop(activeDuration >= 100 ? 0 : activeEffectDelay - activeDuration);\n  };\n\n  var children = _param.children,\n      Component = _param.Component,\n      onClick = _param.onClick,\n      _onKeyDown = _param.onKeyDown,\n      _param_activeEffectDelay = _param.activeEffectDelay,\n      activeEffectDelay = _param_activeEffectDelay === void 0 ? ACTIVE_EFFECT_DELAY : _param_activeEffectDelay,\n      _param_stopPropagation = _param.stopPropagation,\n      stopPropagation = _param_stopPropagation === void 0 ? false : _param_stopPropagation,\n      getRootRef = _param.getRootRef,\n      tmp = _param.hasHover,\n      _hasHover = tmp === void 0 ? true : tmp,\n      _param_hoverMode = _param.hoverMode,\n      hoverMode = _param_hoverMode === void 0 ? \"background\" : _param_hoverMode,\n      tmp1 = _param.hasActive,\n      _hasActive = tmp1 === void 0 ? true : tmp1,\n      _param_activeMode = _param.activeMode,\n      activeMode = _param_activeMode === void 0 ? \"background\" : _param_activeMode,\n      _param_focusVisibleMode = _param.focusVisibleMode,\n      focusVisibleMode = _param_focusVisibleMode === void 0 ? \"inside\" : _param_focusVisibleMode,\n      onEnter = _param.onEnter,\n      onLeave = _param.onLeave,\n      className = _param.className,\n      hoveredProp = _param.hovered,\n      activatedProp = _param.activated,\n      _param_borderRadiusMode = _param.borderRadiusMode,\n      borderRadiusMode = _param_borderRadiusMode === void 0 ? \"auto\" : _param_borderRadiusMode,\n      props = _object_without_properties(_param, [\"children\", \"Component\", \"onClick\", \"onKeyDown\", \"activeEffectDelay\", \"stopPropagation\", \"getRootRef\", \"hasHover\", \"hoverMode\", \"hasActive\", \"activeMode\", \"focusVisibleMode\", \"onEnter\", \"onLeave\", \"className\", \"hovered\", \"activated\", \"borderRadiusMode\"]);\n\n  Component = Component || (props.href ? \"a\" : \"div\");\n  var onHoverChange = React.useContext(TappableContext).onHoverChange;\n  var insideTouchRoot = React.useContext(TouchRootContext);\n  var platform = usePlatform();\n\n  var _useFocusVisible = useFocusVisible(),\n      focusVisible = _useFocusVisible.focusVisible,\n      onBlur = _useFocusVisible.onBlur,\n      onFocus = _useFocusVisible.onFocus;\n\n  var _useAdaptivity = useAdaptivity(),\n      _useAdaptivity_sizeX = _useAdaptivity.sizeX,\n      sizeX = _useAdaptivity_sizeX === void 0 ? \"none\" : _useAdaptivity_sizeX,\n      tmp2 = _useAdaptivity.hasHover,\n      hasHoverContext = tmp2 === void 0 ? true : tmp2;\n\n  var hasPointerContext = useAdaptivityHasPointer();\n\n  var _React_useState = _sliced_to_array(React.useState([]), 2),\n      clicks = _React_useState[0],\n      setClicks = _React_useState[1];\n\n  var _React_useState1 = _sliced_to_array(React.useState(false), 2),\n      childHover = _React_useState1[0],\n      setChildHover = _React_useState1[1];\n\n  var _useBooleanState = useBooleanState(false),\n      _hovered = _useBooleanState.value,\n      setHoveredTrue = _useBooleanState.setTrue,\n      setHoveredFalse = _useBooleanState.setFalse;\n\n  var hovered = (_hovered || hoveredProp) && !props.disabled;\n  var hasActive = _hasActive && !childHover && !props.disabled;\n  var hasHover = hasHoverContext && _hasHover && !childHover;\n  var isCustomElement = Component !== \"a\" && Component !== \"button\" && Component !== \"label\" && !props.contentEditable;\n  var isPresetHoverMode = isPresetStateMode(hoverMode);\n  var isPresetActiveMode = isPresetStateMode(activeMode);\n  var isPresetFocusVisibleMode = [\"inside\", \"outside\"].includes(focusVisibleMode);\n\n  var _useActivity = _sliced_to_array(useActivity(hasActive, activeEffectDelay), 2),\n      activity = _useActivity[0],\n      _useActivity_ = _useActivity[1],\n      start = _useActivity_.start,\n      stop = _useActivity_.stop,\n      delayStart = _useActivity_.delayStart;\n\n  var active = activity === TapState.active || activity === TapState.exiting;\n  var activated = (active || activatedProp) && !props.disabled;\n  var containerRef = useExternRef(getRootRef); // hover propagation\n\n  var childContext = React.useRef({\n    onHoverChange: setChildHover\n  }).current;\n  useIsomorphicLayoutEffect(function () {\n    if (!hovered) {\n      return noop;\n    }\n\n    onHoverChange(true);\n    return function () {\n      return onHoverChange(false);\n    };\n  }, [hovered]);\n  var needWaves = platform === Platform.ANDROID && !hasPointerContext && hasActive && activeMode === \"background\";\n  var clearClicks = useTimeout(function () {\n    return setClicks([]);\n  }, WAVE_LIVE);\n  var classes = classNames(className, \"vkuiTappable\", \"vkuiInternalTappable\", platform === Platform.IOS && \"vkuiTappable--ios\", sizeX !== SizeType.REGULAR && sizeXClassNames[sizeX], hasHover && \"vkuiTappable--hasHover\", hasActive && \"vkuiTappable--hasActive\", hasHover && hovered && !isPresetHoverMode && hoverMode, hasActive && activated && !isPresetActiveMode && activeMode, focusVisible && !isPresetFocusVisibleMode && focusVisibleMode, hasHover && hovered && isPresetHoverMode && stylesHoverMode[hoverMode], hasActive && activated && isPresetActiveMode && stylesActiveMode[activeMode], focusVisible && \"vkuiTappable--focus-visible\", borderRadiusMode === \"inherit\" && \"vkuiTappable--borderRadiusInherit\");\n  var handlers = {\n    onStart: callMultiple(onStart, props.onStart),\n    onMove: callMultiple(onMove, props.onMove),\n    onEnd: callMultiple(onEnd, props.onEnd),\n    onClick: onClick,\n    onKeyDown: callMultiple(onKeyDown, _onKeyDown)\n  };\n  var role = props.href ? \"link\" : \"button\";\n  return /*#__PURE__*/React.createElement(Touch, _object_spread(_object_spread_props(_object_spread({\n    onEnter: callMultiple(setHoveredTrue, onEnter),\n    onLeave: callMultiple(setHoveredFalse, onLeave),\n    type: Component === \"button\" ? \"button\" : undefined,\n    tabIndex: isCustomElement && !props.disabled ? 0 : undefined,\n    role: isCustomElement ? role : undefined,\n    \"aria-disabled\": isCustomElement ? props.disabled : undefined,\n    stopPropagation: stopPropagation && !insideTouchRoot && !props.disabled\n  }, props), {\n    slideThreshold: 20,\n    usePointerHover: true,\n    className: classes,\n    Component: Component,\n    getRootRef: containerRef,\n    onBlur: callMultiple(onBlur, props.onBlur),\n    onFocus: callMultiple(onFocus, props.onFocus)\n  }), props.disabled ? {} : handlers), /*#__PURE__*/React.createElement(TappableContext.Provider, {\n    value: childContext\n  }, children), needWaves && /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": true,\n    className: \"vkuiTappable__waves\"\n  }, clicks.map(function (wave) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      key: wave.id,\n      className: \"vkuiTappable__wave\",\n      style: {\n        top: wave.y,\n        left: wave.x\n      }\n    });\n  })), (hasHover && hoverMode === \"background\" || hasActive && activeMode === \"background\") && /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": true,\n    className: \"vkuiTappable__stateLayer\"\n  }), !props.disabled && isPresetFocusVisibleMode && /*#__PURE__*/React.createElement(FocusVisible, {\n    visible: focusVisible,\n    mode: focusVisibleMode\n  }));\n};","map":{"version":3,"mappings":"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","names":["React","classNames","noop","mitt","useAdaptivity","useAdaptivityHasPointer","useBooleanState","useExternRef","useFocusVisible","usePlatform","useTimeout","shouldTriggerClickOnEnterOrSpace","SizeType","callMultiple","getOffsetRect","Platform","coordX","coordY","useIsomorphicLayoutEffect","FocusVisible","Touch","TouchRootContext","sizeXClassNames","none","compact","stylesHoverMode","background","opacity","stylesActiveMode","WAVE_LIVE","ACTIVE_DELAY","ACTIVE_EFFECT_DELAY","activeBus","TapState","pending","active","exiting","TappableContext","createContext","onHoverChange","isPresetStateMode","stateMode","useActivity","hasActive","stopDelay","id","useMemo","Math","round","random","toString","useState","activity","setActivity","_stop","start","delayStart","activeTimeout","stopTimeout","set","clear","emit","onActiveChange","activeId","on","off","stop","delay","Tappable","onKeyDown","e","isCustomElement","containerRef","preventDefault","current","click","addClick","x","y","dateNow","Date","now","filteredClicks","clicks","filter","setClicks","_to_consumable_array","clearClicks","onStart","param","originalEvent","touches","length","needWaves","top","left","onMove","isSlide","onEnd","duration","activeDuration","activeEffectDelay","children","Component","onClick","_onKeyDown","stopPropagation","_param_stopPropagation","getRootRef","_hasHover","hasHover","hoverMode","_param_hoverMode","_hasActive","activeMode","_param_activeMode","_param_focusVisibleMode","focusVisibleMode","onEnter","onLeave","className","hovered","hoveredProp","activated","activatedProp","borderRadiusMode","_param_borderRadiusMode","props","href","useContext","insideTouchRoot","platform","focusVisible","onBlur","onFocus","sizeX","_useAdaptivity_sizeX","hasHoverContext","hasPointerContext","childHover","setChildHover","value","_hovered","setTrue","setHoveredTrue","setFalse","setHoveredFalse","disabled","contentEditable","isPresetHoverMode","isPresetActiveMode","isPresetFocusVisibleMode","includes","childContext","useRef","ANDROID","classes","IOS","REGULAR","handlers","role","type","undefined","tabIndex","aria-disabled","slideThreshold","usePointerHover","Provider","span","aria-hidden","map","wave","key","style","visible","mode"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\components\\Tappable\\Tappable.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, noop } from '@vkontakte/vkjs';\nimport mitt from 'mitt';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { useAdaptivityHasPointer } from '../../hooks/useAdaptivityHasPointer';\nimport { useBooleanState } from '../../hooks/useBooleanState';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useFocusVisible } from '../../hooks/useFocusVisible';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { useTimeout } from '../../hooks/useTimeout';\nimport { shouldTriggerClickOnEnterOrSpace } from '../../lib/accessibility';\nimport { SizeType } from '../../lib/adaptivity';\nimport { callMultiple } from '../../lib/callMultiple';\nimport { getOffsetRect } from '../../lib/offset';\nimport { Platform } from '../../lib/platform';\nimport { coordX, coordY } from '../../lib/touch';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport {\n  AnchorHTMLAttributesOnly,\n  HasChildren,\n  HasComponent,\n  HasRootRef,\n  LiteralUnion,\n} from '../../types';\nimport { FocusVisible, FocusVisibleMode } from '../FocusVisible/FocusVisible';\nimport { Touch, TouchEvent, TouchProps } from '../Touch/Touch';\nimport TouchRootContext from '../Touch/TouchContext';\nimport styles from './Tappable.module.css';\n\nconst sizeXClassNames = {\n  none: styles['Tappable--sizeX-none'],\n  compact: styles['Tappable--sizeX-compact'],\n};\n\nconst stylesHoverMode = {\n  background: styles['Tappable--hover-background'],\n  opacity: styles['Tappable--hover-opacity'],\n};\n\nconst stylesActiveMode = {\n  background: styles['Tappable--active-background'],\n  opacity: styles['Tappable--active-opacity'],\n};\n\ntype StateMode = 'opacity' | 'background';\n\nconst WAVE_LIVE = 225;\n\nexport type TappableElementProps = Omit<\n  React.AllHTMLAttributes<HTMLElement>,\n  | 'onTouchStart'\n  | 'onTouchMove'\n  | 'onTouchEnd'\n  | 'onTouchCancel'\n  | 'onMouseDown'\n  | 'onMouseMove'\n  | 'onMouseUp'\n  | 'onMouseLeave'\n> &\n  AnchorHTMLAttributesOnly; // В AllHTMLAttributes не хватает типов для ссылок\n\nexport interface TappableProps\n  extends TappableElementProps,\n    HasRootRef<HTMLElement>,\n    HasComponent,\n    HasChildren,\n    Pick<TouchProps, 'onStart' | 'onEnd' | 'onMove'> {\n  /**\n   * Длительность показа active-состояния\n   */\n  activeEffectDelay?: number;\n  stopPropagation?: boolean;\n  /**\n   * Указывает, должен ли компонент реагировать на hover-состояние\n   */\n  hasHover?: boolean;\n  /**\n   * Позволяет управлять hovered-состоянием извне\n   */\n  hovered?: boolean;\n  /**\n   * Позволяет управлять activated-состоянием извне\n   */\n  activated?: boolean;\n  /**\n   * Указывает, должен ли компонент реагировать на active-состояние\n   */\n  hasActive?: boolean;\n  /**\n   * Стиль подсветки active-состояния. Если передать произвольную строку, она добавится как css-класс во время active\n   */\n  activeMode?: LiteralUnion<StateMode, string>;\n  /**\n   * Стиль подсветки hover-состояния. Если передать произвольную строку, она добавится как css-класс во время hover\n   */\n  hoverMode?: LiteralUnion<StateMode, string>;\n  /**\n   * Стиль аутлайна focus visible. Если передать произвольную строку, она добавится как css-класс во время focus-visible\n   */\n  focusVisibleMode?: LiteralUnion<FocusVisibleMode, string>;\n  onEnter?(outputEvent: MouseEvent): void;\n  onLeave?(outputEvent: MouseEvent): void;\n  /**\n   * Задает border-radius элементу\n   * В режиме `auto` на маленьких экранах `border-radius: 0`, иначе определяется токеном `--vkui--size_border_radius--regular`\n   */\n  borderRadiusMode?: 'auto' | 'inherit';\n}\n\ninterface Wave {\n  x: number;\n  y: number;\n  id: number;\n}\n\nexport interface RootComponentProps extends TouchProps {\n  ref?: React.Ref<HTMLElement>;\n}\n\nexport const ACTIVE_DELAY = 70;\nexport const ACTIVE_EFFECT_DELAY = 600;\n\nconst activeBus = mitt<{ active: string }>();\nconst TapState = { none: 0, pending: 1, active: 2, exiting: 3 } as const;\n\ntype TappableContextInterface = { onHoverChange: (s: boolean) => void };\nconst TappableContext = React.createContext<TappableContextInterface>({\n  onHoverChange: noop,\n});\n\nfunction isPresetStateMode(stateMode: LiteralUnion<StateMode, string>): stateMode is StateMode {\n  switch (stateMode) {\n    case 'opacity':\n    case 'background':\n      return true;\n    default:\n      return false;\n  }\n}\n\nfunction useActivity(hasActive: boolean, stopDelay: number) {\n  const id = React.useMemo(() => Math.round(Math.random() * 1e8).toString(16), []);\n\n  const [activity, setActivity] = React.useState<(typeof TapState)[keyof typeof TapState]>(\n    TapState.none,\n  );\n  const _stop = () => setActivity(TapState.none);\n  const start = () => hasActive && setActivity(TapState.active);\n  const delayStart = () => {\n    hasActive && setActivity(TapState.pending);\n  };\n\n  const activeTimeout = useTimeout(start, ACTIVE_DELAY);\n  const stopTimeout = useTimeout(_stop, stopDelay);\n\n  useIsomorphicLayoutEffect(() => {\n    if (activity === TapState.pending) {\n      activeTimeout.set();\n      return activeTimeout.clear;\n    }\n    if (activity === TapState.exiting) {\n      return stopTimeout.clear;\n    }\n    if (activity === TapState.active) {\n      activeBus.emit('active', id);\n    }\n    return noop;\n  }, [activity]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (activity === TapState.none) {\n      return noop;\n    }\n    const onActiveChange = (activeId: string) => {\n      activeId !== id && _stop();\n    };\n    activeBus.on('active', onActiveChange);\n    return () => activeBus.off('active', onActiveChange);\n  }, [activity === TapState.none]);\n\n  useIsomorphicLayoutEffect(() => {\n    !hasActive && _stop();\n  }, [hasActive]);\n\n  const stop = (delay?: number) => {\n    if (delay) {\n      setActivity(TapState.exiting);\n      return stopTimeout.set(delay);\n    }\n    _stop();\n  };\n\n  return [activity, { delayStart, start, stop }] as const;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Tappable\n */\nexport const Tappable = ({\n  children,\n  Component,\n  onClick,\n  onKeyDown: _onKeyDown,\n  activeEffectDelay = ACTIVE_EFFECT_DELAY,\n  stopPropagation = false,\n  getRootRef,\n  hasHover: _hasHover = true,\n  hoverMode = 'background',\n  hasActive: _hasActive = true,\n  activeMode = 'background',\n  focusVisibleMode = 'inside',\n  onEnter,\n  onLeave,\n  className,\n  hovered: hoveredProp,\n  activated: activatedProp,\n  borderRadiusMode = 'auto',\n  ...props\n}: TappableProps) => {\n  Component = Component || ((props.href ? 'a' : 'div') as React.ElementType);\n\n  const { onHoverChange } = React.useContext(TappableContext);\n  const insideTouchRoot = React.useContext(TouchRootContext);\n  const platform = usePlatform();\n  const { focusVisible, onBlur, onFocus } = useFocusVisible();\n  const { sizeX = 'none', hasHover: hasHoverContext = true } = useAdaptivity();\n  const hasPointerContext = useAdaptivityHasPointer();\n\n  const [clicks, setClicks] = React.useState<Wave[]>([]);\n  const [childHover, setChildHover] = React.useState(false);\n  const {\n    value: _hovered,\n    setTrue: setHoveredTrue,\n    setFalse: setHoveredFalse,\n  } = useBooleanState(false);\n\n  const hovered = (_hovered || hoveredProp) && !props.disabled;\n  const hasActive = _hasActive && !childHover && !props.disabled;\n  const hasHover = hasHoverContext && _hasHover && !childHover;\n  const isCustomElement =\n    Component !== 'a' && Component !== 'button' && Component !== 'label' && !props.contentEditable;\n  const isPresetHoverMode = isPresetStateMode(hoverMode);\n  const isPresetActiveMode = isPresetStateMode(activeMode);\n  const isPresetFocusVisibleMode = ['inside', 'outside'].includes(focusVisibleMode);\n\n  const [activity, { start, stop, delayStart }] = useActivity(hasActive, activeEffectDelay);\n  const active = activity === TapState.active || activity === TapState.exiting;\n  const activated = (active || activatedProp) && !props.disabled;\n\n  const containerRef = useExternRef(getRootRef);\n\n  // hover propagation\n  const childContext = React.useRef({ onHoverChange: setChildHover }).current;\n  useIsomorphicLayoutEffect(() => {\n    if (!hovered) {\n      return noop;\n    }\n    onHoverChange(true);\n    return () => onHoverChange(false);\n  }, [hovered]);\n\n  /*\n   * [a11y]\n   * Обрабатывает событие onkeydown\n   * для кастомных доступных элементов:\n   * - role=\"link\" (активация по Enter)\n   * - role=\"button\" (активация по Space и Enter)\n   */\n  function onKeyDown(e: React.KeyboardEvent<HTMLElement>) {\n    if (isCustomElement && shouldTriggerClickOnEnterOrSpace(e)) {\n      e.preventDefault();\n      containerRef.current?.click();\n    }\n  }\n\n  const needWaves =\n    platform === Platform.ANDROID && !hasPointerContext && hasActive && activeMode === 'background';\n\n  const clearClicks = useTimeout(() => setClicks([]), WAVE_LIVE);\n\n  function addClick(x: number, y: number) {\n    const dateNow = Date.now();\n    const filteredClicks = clicks.filter((click) => click.id + WAVE_LIVE > dateNow);\n\n    setClicks([...filteredClicks, { x, y, id: dateNow }]);\n    clearClicks.set();\n  }\n\n  function onStart({ originalEvent }: TouchEvent) {\n    if (hasActive) {\n      if (originalEvent.touches && originalEvent.touches.length > 1) {\n        // r сожалению я так и не понял, что это делает и можно ли упихнуть его в Touch\n        return stop();\n      }\n\n      if (needWaves) {\n        const { top, left } = getOffsetRect(containerRef.current);\n        const x = coordX(originalEvent) - (left ?? 0);\n        const y = coordY(originalEvent) - (top ?? 0);\n        addClick(x, y);\n      }\n\n      delayStart();\n    }\n  }\n\n  function onMove({ isSlide }: TouchEvent) {\n    if (isSlide) {\n      stop();\n    }\n  }\n\n  function onEnd({ duration }: TouchEvent) {\n    if (activity === TapState.none) {\n      return;\n    }\n    if (activity === TapState.pending) {\n      // активировать при коротком тапе\n      start();\n    }\n\n    // отключить без задержки при длинном тапе\n    const activeDuration = duration - ACTIVE_DELAY;\n    stop(activeDuration >= 100 ? 0 : activeEffectDelay - activeDuration);\n  }\n\n  const classes = classNames(\n    className,\n    styles['Tappable'],\n    'vkuiInternalTappable',\n    platform === Platform.IOS && styles['Tappable--ios'],\n    sizeX !== SizeType.REGULAR && sizeXClassNames[sizeX],\n    hasHover && styles['Tappable--hasHover'],\n    hasActive && styles['Tappable--hasActive'],\n    hasHover && hovered && !isPresetHoverMode && hoverMode,\n    hasActive && activated && !isPresetActiveMode && activeMode,\n    focusVisible && !isPresetFocusVisibleMode && focusVisibleMode,\n    hasHover && hovered && isPresetHoverMode && stylesHoverMode[hoverMode],\n    hasActive && activated && isPresetActiveMode && stylesActiveMode[activeMode],\n    focusVisible && styles['Tappable--focus-visible'],\n    borderRadiusMode === 'inherit' && styles['Tappable--borderRadiusInherit'],\n  );\n\n  const handlers: RootComponentProps = {\n    onStart: callMultiple(onStart, props.onStart),\n    onMove: callMultiple(onMove, props.onMove),\n    onEnd: callMultiple(onEnd, props.onEnd),\n    onClick,\n    onKeyDown: callMultiple(onKeyDown, _onKeyDown),\n  };\n  const role = props.href ? 'link' : 'button';\n\n  return (\n    <Touch\n      onEnter={callMultiple(setHoveredTrue, onEnter)}\n      onLeave={callMultiple(setHoveredFalse, onLeave)}\n      type={Component === 'button' ? 'button' : undefined}\n      tabIndex={isCustomElement && !props.disabled ? 0 : undefined}\n      role={isCustomElement ? role : undefined}\n      aria-disabled={isCustomElement ? props.disabled : undefined}\n      stopPropagation={stopPropagation && !insideTouchRoot && !props.disabled}\n      {...props}\n      slideThreshold={20}\n      usePointerHover\n      className={classes}\n      Component={Component}\n      getRootRef={containerRef}\n      onBlur={callMultiple(onBlur, props.onBlur)}\n      onFocus={callMultiple(onFocus, props.onFocus)}\n      {...(props.disabled ? {} : handlers)}\n    >\n      <TappableContext.Provider value={childContext}>{children}</TappableContext.Provider>\n      {needWaves && (\n        <span aria-hidden className={styles.Tappable__waves}>\n          {clicks.map((wave) => (\n            <span\n              key={wave.id}\n              className={styles.Tappable__wave}\n              style={{ top: wave.y, left: wave.x }}\n            />\n          ))}\n        </span>\n      )}\n      {((hasHover && hoverMode === 'background') || (hasActive && activeMode === 'background')) && (\n        <span aria-hidden className={styles.Tappable__stateLayer} />\n      )}\n      {!props.disabled && isPresetFocusVisibleMode && (\n        <FocusVisible visible={focusVisible} mode={focusVisibleMode as FocusVisibleMode} />\n      )}\n    </Touch>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}