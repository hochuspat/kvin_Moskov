{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { ImageBase } from \"../ImageBase/ImageBase\";\nimport { GridAvatarBadge } from \"./GridAvatarBadge/GridAvatarBadge\";\nexport var GRID_AVATAR_DEFAULT_SIZE = 48;\nexport var MAX_GRID_LENGTH = 4;\nvar warn = warnOnce(\"GridAvatar\");\n/**\n * @see https://vkcom.github.io/VKUI/#/GridAvatar\n */\n\nexport var GridAvatar = function (_param) {\n  var _param_src = _param.src,\n      src = _param_src === void 0 ? [] : _param_src,\n      _param_size = _param.size,\n      size = _param_size === void 0 ? GRID_AVATAR_DEFAULT_SIZE : _param_size,\n      className = _param.className,\n      children = _param.children,\n      restProps = _object_without_properties(_param, [\"src\", \"size\", \"className\", \"children\"]);\n\n  if (process.env.NODE_ENV === \"development\") {\n    if (src.length > MAX_GRID_LENGTH) {\n      warn(\"Длина массива src (\".concat(src.length, \") больше максимальной (\").concat(MAX_GRID_LENGTH, \")\"), \"error\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(ImageBase, _object_spread_props(_object_spread({}, restProps), {\n    size: size,\n    className: classNames(\"vkuiGridAvatar\", className)\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiGridAvatar__in\",\n    \"aria-hidden\": true\n  }, src.map(function (url, index) {\n    return index < MAX_GRID_LENGTH ? /*#__PURE__*/React.createElement(\"div\", {\n      key: url,\n      className: \"vkuiGridAvatar__item\",\n      style: {\n        backgroundImage: \"url(\".concat(url, \")\")\n      }\n    }) : null;\n  })), children);\n};\nGridAvatar.Badge = GridAvatarBadge;","map":{"version":3,"mappings":";;;AAAA,YAAYA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,SAAT,QAA+C,wBAA/C;AACA,SAASC,eAAT,QAA2D,mCAA3D;AAKA,OAAO,IAAMC,2BAA2B,EAAjC;AAEP,OAAO,IAAMC,kBAAkB,CAAxB;AASP,IAAMC,OAAOL,SAAS,YAATA,CAAb;AAEA;;;;AAGA,OAAO,IAAMM,aAAa;0BACxBC;MAAAA,8BAAM,EAANA,GAAQC;MAAAC,qBACRC;MAAAA,gCAAOP,wBAAPO,GAAOP;MACPQ;MACAC;MACGC,gDAJHN,KAIGM,EAHHH,MAGGG,EAFHF,WAEGE,EADHD,UACGC;;EAEH,IAAIC,QAAQC,GAARD,CAAYE,QAAZF,KAAyB,aAA7B,EAA4C;IAC1C,IAAIP,IAAIU,MAAJV,GAAaH,eAAjB,EAAkC;MAChCC,KAAK,sBAA0DD,MAA1D,CAAsBG,IAAIU,MAA1B,EAAiC,yBAAjC,EAA0EC,MAA1E,CAA0Dd,eAA1D,EAA0E,GAA1E,CAALC,EAAmF,OAAnFA;IACF;EACF;;EAEA,oBACEP,oBAACG,SAAD,EAACA,wCAAcY,SAAdZ,GAAcY;IAAWH,MAAMA,IAAjBG;IAAuBF,WAAWZ,6BAAiCY,SAAjCZ;EAAlCc,CAAdZ,CAAD,eACEH,oBAACqB,KAAD,EAACA;IAAIR,SAAS,sBAAbQ;IAAyCC;EAAzCD,CAAD,EACGZ,IAAIc,GAAJd,CAAQ,UAACe,GAAD,EAAMC,KAAN,EAAMA;WACbA,QAAQnB,eAARmB,GAAQnB,aACNN,oBAACqB,KAAD,EAACA;MACCK,KAAKF,GADNH;MAECR,SAAS,wBAFVQ;MAGCM,OAAO;QAAEC,iBAAiB,OAAWR,MAAX,CAAOI,GAAP,EAAW,GAAX;MAAnB;IAHRH,CAAD,CADFI,GAMI;GAPLhB,CADH,CADF,EAYGK,QAZH,CADF;AAgBF,CA7BO;AA+BPN,WAAWqB,KAAXrB,GAAmBJ,eAAnBI","names":["React","classNames","warnOnce","ImageBase","GridAvatarBadge","GRID_AVATAR_DEFAULT_SIZE","MAX_GRID_LENGTH","warn","GridAvatar","src","_param_src","_param_size","size","className","children","restProps","process","env","NODE_ENV","length","concat","div","aria-hidden","map","url","index","key","style","backgroundImage","Badge"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\components\\GridAvatar\\GridAvatar.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { ImageBase, type ImageBaseProps } from '../ImageBase/ImageBase';\nimport { GridAvatarBadge, type GridAvatarBadgeProps } from './GridAvatarBadge/GridAvatarBadge';\nimport styles from './GridAvatar.module.css';\n\nexport { GridAvatarBadgeProps };\n\nexport const GRID_AVATAR_DEFAULT_SIZE = 48;\n\nexport const MAX_GRID_LENGTH = 4;\n\nexport interface GridAvatarProps extends Omit<ImageBaseProps, 'src' | 'fallbackIcon'> {\n  /**\n   * Массив со ссылками. От 1 до 4 элементов.\n   */\n  src?: string[];\n}\n\nconst warn = warnOnce('GridAvatar');\n\n/**\n * @see https://vkcom.github.io/VKUI/#/GridAvatar\n */\nexport const GridAvatar = ({\n  src = [],\n  size = GRID_AVATAR_DEFAULT_SIZE,\n  className,\n  children,\n  ...restProps\n}: GridAvatarProps) => {\n  if (process.env.NODE_ENV === 'development') {\n    if (src.length > MAX_GRID_LENGTH) {\n      warn(`Длина массива src (${src.length}) больше максимальной (${MAX_GRID_LENGTH})`, 'error');\n    }\n  }\n\n  return (\n    <ImageBase {...restProps} size={size} className={classNames(styles['GridAvatar'], className)}>\n      <div className={styles['GridAvatar__in']} aria-hidden>\n        {src.map((url, index) =>\n          index < MAX_GRID_LENGTH ? (\n            <div\n              key={url}\n              className={styles['GridAvatar__item']}\n              style={{ backgroundImage: `url(${url})` }}\n            />\n          ) : null,\n        )}\n      </div>\n      {children}\n    </ImageBase>\n  );\n};\n\nGridAvatar.Badge = GridAvatarBadge;\n"]},"metadata":{},"sourceType":"module"}