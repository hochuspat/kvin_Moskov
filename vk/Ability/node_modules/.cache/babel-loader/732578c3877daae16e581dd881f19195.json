{"ast":null,"code":"import { _ as _define_property } from \"@swc/helpers/_/_define_property\";\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { _ as _sliced_to_array } from \"@swc/helpers/_/_sliced_to_array\";\nimport * as React from \"react\";\nimport { leadingZero } from \"@vkontakte/vkjs\";\nimport { range } from \"../../helpers/range\";\nimport { useAdaptivityHasPointer } from \"../../hooks/useAdaptivityHasPointer\";\nimport { CustomSelect } from \"../CustomSelect/CustomSelect\";\nimport { Input } from \"../Input/Input\";\nimport { RootComponent } from \"../RootComponent/RootComponent\";\nvar DefaultMonths = [\"Января\", \"Февраля\", \"Марта\", \"Апреля\", \"Мая\", \"Июня\", \"Июля\", \"Августа\", \"Сентября\", \"Октября\", \"Ноября\", \"Декабря\"]; // Переводим state к формату гг-мм-дд\n\nfunction convertToInputFormat(param) {\n  var _param_day = param.day,\n      day = _param_day === void 0 ? 0 : _param_day,\n      _param_month = param.month,\n      month = _param_month === void 0 ? 0 : _param_month,\n      _param_year = param.year,\n      year = _param_year === void 0 ? 0 : _param_year;\n  return \"\".concat(year, \"-\").concat(leadingZero(month), \"-\").concat(leadingZero(day));\n} // Переводим дату формата гг-мм-дд к объекту\n\n\nfunction parseInputDate(date) {\n  var splited = date.split(\"-\");\n  return {\n    day: Number(splited[2]),\n    month: Number(splited[1]),\n    year: Number(splited[0])\n  };\n}\n\nfunction getMonthMaxDay(month, year) {\n  return month ? new Date(year || 2016, month, 0).getDate() : 31;\n}\n\nvar DatePickerCustom = function (_param) {\n  var name = _param.name,\n      _param_min = _param.min,\n      min = _param_min === void 0 ? {\n    day: 0,\n    month: 0,\n    year: 0\n  } : _param_min,\n      _param_max = _param.max,\n      max = _param_max === void 0 ? {\n    day: 31,\n    month: 12,\n    year: 2100\n  } : _param_max,\n      dayPlaceholder = _param.dayPlaceholder,\n      monthPlaceholder = _param.monthPlaceholder,\n      yearPlaceholder = _param.yearPlaceholder,\n      popupDirection = _param.popupDirection,\n      defaultValue = _param.defaultValue,\n      monthNames = _param.monthNames,\n      _param_day = _param.day,\n      day = _param_day === void 0 ? 0 : _param_day,\n      _param_month = _param.month,\n      month = _param_month === void 0 ? 0 : _param_month,\n      _param_year = _param.year,\n      year = _param_year === void 0 ? 0 : _param_year,\n      onDateChange = _param.onDateChange,\n      disabled = _param.disabled,\n      restProps = _object_without_properties(_param, [\"name\", \"min\", \"max\", \"dayPlaceholder\", \"monthPlaceholder\", \"yearPlaceholder\", \"popupDirection\", \"defaultValue\", \"monthNames\", \"day\", \"month\", \"year\", \"onDateChange\", \"disabled\"]);\n\n  var onSelectChange = function (e) {\n    onDateChange === null || onDateChange === void 0 ? void 0 : onDateChange(_define_property({\n      day: day,\n      month: month,\n      year: year\n    }, e.target.name, Number(e.target.value)));\n  };\n\n  var dayOptions = range(1, getMonthMaxDay(month, year)).map(function (value) {\n    return {\n      label: String(value),\n      value: value\n    };\n  });\n  var monthOptions = (monthNames || DefaultMonths).map(function (name, index) {\n    return {\n      label: name,\n      value: index + 1\n    };\n  });\n  var yearOptions = range(max.year, min.year).map(function (value) {\n    return {\n      label: String(value),\n      value: value\n    };\n  });\n  return /*#__PURE__*/React.createElement(RootComponent, _object_spread({\n    baseClassName: \"vkuiDatePicker\"\n  }, restProps), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiDatePicker__container\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiDatePicker__day\"\n  }, /*#__PURE__*/React.createElement(CustomSelect, {\n    name: \"day\",\n    value: day,\n    options: dayOptions,\n    placeholder: dayPlaceholder,\n    popupDirection: popupDirection,\n    onChange: onSelectChange,\n    disabled: disabled\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiDatePicker__month\"\n  }, /*#__PURE__*/React.createElement(CustomSelect, {\n    className: \"vkuiDatePicker__monthSelect\",\n    name: \"month\",\n    value: month,\n    options: monthOptions,\n    placeholder: monthPlaceholder,\n    popupDirection: popupDirection,\n    onChange: onSelectChange,\n    disabled: disabled\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiDatePicker__year\"\n  }, /*#__PURE__*/React.createElement(CustomSelect, {\n    name: \"year\",\n    value: year,\n    options: yearOptions,\n    placeholder: yearPlaceholder,\n    popupDirection: popupDirection,\n    onChange: onSelectChange,\n    disabled: disabled\n  }))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"hidden\",\n    name: name,\n    value: convertToInputFormat({\n      day: day,\n      month: month,\n      year: year\n    })\n  }));\n};\n\nvar DatePickerNative = function (_param) {\n  var _param_min = _param.min,\n      min = _param_min === void 0 ? {\n    day: 0,\n    month: 0,\n    year: 0\n  } : _param_min,\n      _param_max = _param.max,\n      max = _param_max === void 0 ? {\n    day: 31,\n    month: 12,\n    year: 2100\n  } : _param_max,\n      dayPlaceholder = _param.dayPlaceholder,\n      monthPlaceholder = _param.monthPlaceholder,\n      yearPlaceholder = _param.yearPlaceholder,\n      popupDirection = _param.popupDirection,\n      defaultValue = _param.defaultValue,\n      day = _param.day,\n      month = _param.month,\n      year = _param.year,\n      onDateChange = _param.onDateChange,\n      restProps = _object_without_properties(_param, [\"min\", \"max\", \"dayPlaceholder\", \"monthPlaceholder\", \"yearPlaceholder\", \"popupDirection\", \"defaultValue\", \"day\", \"month\", \"year\", \"onDateChange\"]);\n\n  var defProps = day && month && year ? {\n    defaultValue: convertToInputFormat({\n      day: day,\n      month: month,\n      year: year\n    })\n  } : {};\n  var onStringChange = React.useCallback(function (e) {\n    onDateChange === null || onDateChange === void 0 ? void 0 : onDateChange(parseInputDate(e.currentTarget.value));\n  }, [onDateChange]);\n  return /*#__PURE__*/React.createElement(Input, _object_spread(_object_spread_props(_object_spread({}, restProps), {\n    type: \"date\",\n    onChange: onStringChange,\n    min: convertToInputFormat(min),\n    max: convertToInputFormat(max)\n  }), defProps));\n};\n/**\n * @see https://vkcom.github.io/VKUI/#/DatePicker\n */\n\n\nexport var DatePicker = function (_param) {\n  var defaultValue = _param.defaultValue,\n      props = _object_without_properties(_param, [\"defaultValue\"]);\n\n  var hasPointer = useAdaptivityHasPointer();\n\n  var _React_useState = _sliced_to_array(React.useState(function () {\n    return {\n      day: (defaultValue === null || defaultValue === void 0 ? void 0 : defaultValue.day) || 0,\n      month: (defaultValue === null || defaultValue === void 0 ? void 0 : defaultValue.month) || 0,\n      year: (defaultValue === null || defaultValue === void 0 ? void 0 : defaultValue.year) || 0\n    };\n  }), 2),\n      value = _React_useState[0],\n      setValue = _React_useState[1];\n\n  var onDateChange = React.useCallback(function (update) {\n    setValue(update);\n    props.onDateChange && props.onDateChange(_object_spread({}, update));\n  }, [props]);\n  var Cmp = hasPointer ? DatePickerCustom : DatePickerNative;\n  return /*#__PURE__*/React.createElement(Cmp, _object_spread_props(_object_spread({}, props, value), {\n    onDateChange: onDateChange\n  }));\n};","map":{"version":3,"mappings":"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","names":["React","leadingZero","range","useAdaptivityHasPointer","CustomSelect","Input","RootComponent","DefaultMonths","convertToInputFormat","param","day","_param_day","_param_month","month","_param_year","year","concat","parseInputDate","date","splited","split","Number","getMonthMaxDay","Date","getDate","DatePickerCustom","name","min","_param_min","_param_max","max","dayPlaceholder","monthPlaceholder","yearPlaceholder","popupDirection","defaultValue","monthNames","onDateChange","disabled","restProps","onSelectChange","e","_define_property","target","value","dayOptions","map","label","String","monthOptions","index","yearOptions","baseClassName","div","className","options","placeholder","onChange","input","type","DatePickerNative","defProps","onStringChange","useCallback","currentTarget","DatePicker","props","hasPointer","useState","setValue","update","_object_spread","Cmp"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\components\\DatePicker\\DatePicker.tsx"],"sourcesContent":["import * as React from 'react';\nimport { leadingZero } from '@vkontakte/vkjs';\nimport { range } from '../../helpers/range';\nimport { useAdaptivityHasPointer } from '../../hooks/useAdaptivityHasPointer';\nimport { HTMLAttributesWithRootRef } from '../../types';\nimport { CustomSelect } from '../CustomSelect/CustomSelect';\nimport { Input } from '../Input/Input';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport styles from './DatePicker.module.css';\n\nconst DefaultMonths: string[] = [\n  'Января',\n  'Февраля',\n  'Марта',\n  'Апреля',\n  'Мая',\n  'Июня',\n  'Июля',\n  'Августа',\n  'Сентября',\n  'Октября',\n  'Ноября',\n  'Декабря',\n];\n\nexport type DatePickerDateFormat = {\n  day: number;\n  month: number;\n  year: number;\n};\n\nexport interface DatePickerProps\n  extends Omit<HTMLAttributesWithRootRef<HTMLDivElement>, 'defaultValue' | 'min' | 'max'> {\n  min?: DatePickerDateFormat;\n  max?: DatePickerDateFormat;\n  name?: string;\n  defaultValue?: DatePickerDateFormat;\n  popupDirection?: 'top' | 'bottom';\n  monthNames?: string[];\n  dayPlaceholder?: string;\n  monthPlaceholder?: string;\n  yearPlaceholder?: string;\n  onDateChange?: (value: DatePickerDateFormat) => void;\n  disabled?: boolean;\n}\n\n// Переводим state к формату гг-мм-дд\nfunction convertToInputFormat({ day = 0, month = 0, year = 0 }: Partial<DatePickerDateFormat>) {\n  return `${year}-${leadingZero(month)}-${leadingZero(day)}`;\n}\n\n// Переводим дату формата гг-мм-дд к объекту\nfunction parseInputDate(date: string): DatePickerDateFormat {\n  const splited = date.split('-');\n\n  return {\n    day: Number(splited[2]),\n    month: Number(splited[1]),\n    year: Number(splited[0]),\n  };\n}\n\nfunction getMonthMaxDay(month?: number, year?: number) {\n  return month ? new Date(year || 2016, month, 0).getDate() : 31;\n}\n\nconst DatePickerCustom = ({\n  name,\n  min = { day: 0, month: 0, year: 0 },\n  max = { day: 31, month: 12, year: 2100 },\n  dayPlaceholder,\n  monthPlaceholder,\n  yearPlaceholder,\n  popupDirection,\n  defaultValue,\n  monthNames,\n  day = 0,\n  month = 0,\n  year = 0,\n  onDateChange,\n  disabled,\n  ...restProps\n}: DatePickerProps & Partial<DatePickerDateFormat>) => {\n  const onSelectChange: React.ChangeEventHandler<HTMLSelectElement> = (e) => {\n    onDateChange?.({\n      day,\n      month,\n      year,\n      [e.target.name]: Number(e.target.value),\n    });\n  };\n  const dayOptions = range(1, getMonthMaxDay(month, year)).map((value) => ({\n    label: String(value),\n    value,\n  }));\n  const monthOptions = (monthNames || DefaultMonths).map((name, index) => ({\n    label: name,\n    value: index + 1,\n  }));\n  const yearOptions = range(max.year, min.year).map((value) => ({\n    label: String(value),\n    value: value,\n  }));\n  return (\n    <RootComponent baseClassName={styles['DatePicker']} {...restProps}>\n      <div className={styles['DatePicker__container']}>\n        <div className={styles['DatePicker__day']}>\n          <CustomSelect\n            name=\"day\"\n            value={day}\n            options={dayOptions}\n            placeholder={dayPlaceholder}\n            popupDirection={popupDirection}\n            onChange={onSelectChange}\n            disabled={disabled}\n          />\n        </div>\n        <div className={styles['DatePicker__month']}>\n          <CustomSelect\n            className={styles['DatePicker__monthSelect']}\n            name=\"month\"\n            value={month}\n            options={monthOptions}\n            placeholder={monthPlaceholder}\n            popupDirection={popupDirection}\n            onChange={onSelectChange}\n            disabled={disabled}\n          />\n        </div>\n        <div className={styles['DatePicker__year']}>\n          <CustomSelect\n            name=\"year\"\n            value={year}\n            options={yearOptions}\n            placeholder={yearPlaceholder}\n            popupDirection={popupDirection}\n            onChange={onSelectChange}\n            disabled={disabled}\n          />\n        </div>\n      </div>\n      <input type=\"hidden\" name={name} value={convertToInputFormat({ day, month, year })} />\n    </RootComponent>\n  );\n};\n\nconst DatePickerNative = ({\n  min = { day: 0, month: 0, year: 0 },\n  max = { day: 31, month: 12, year: 2100 },\n  dayPlaceholder,\n  monthPlaceholder,\n  yearPlaceholder,\n  popupDirection,\n  defaultValue,\n  day,\n  month,\n  year,\n  onDateChange,\n  ...restProps\n}: DatePickerProps & Partial<DatePickerDateFormat>) => {\n  const defProps =\n    day && month && year ? { defaultValue: convertToInputFormat({ day, month, year }) } : {};\n  const onStringChange: React.ChangeEventHandler<HTMLInputElement> = React.useCallback(\n    (e) => {\n      onDateChange?.(parseInputDate(e.currentTarget.value));\n    },\n    [onDateChange],\n  );\n  return (\n    <Input\n      {...restProps}\n      type=\"date\"\n      onChange={onStringChange}\n      min={convertToInputFormat(min)}\n      max={convertToInputFormat(max)}\n      {...defProps}\n    />\n  );\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/DatePicker\n */\nexport const DatePicker = ({ defaultValue, ...props }: DatePickerProps) => {\n  const hasPointer = useAdaptivityHasPointer();\n  const [value, setValue] = React.useState<Partial<DatePickerDateFormat>>(() => ({\n    day: defaultValue?.day || 0,\n    month: defaultValue?.month || 0,\n    year: defaultValue?.year || 0,\n  }));\n\n  const onDateChange = React.useCallback(\n    (update: DatePickerDateFormat) => {\n      setValue(update);\n      props.onDateChange && props.onDateChange({ ...update });\n    },\n    [props],\n  );\n\n  const Cmp = hasPointer ? DatePickerCustom : DatePickerNative;\n  return <Cmp {...props} {...value} onDateChange={onDateChange} />;\n};\n"]},"metadata":{},"sourceType":"module"}