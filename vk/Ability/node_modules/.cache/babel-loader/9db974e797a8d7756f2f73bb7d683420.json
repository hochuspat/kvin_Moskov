{"ast":null,"code":"import { _ as _define_property } from \"@swc/helpers/_/_define_property\";\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { _ as _sliced_to_array } from \"@swc/helpers/_/_sliced_to_array\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport { useEnsuredControl } from \"../../hooks/useEnsuredControl\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { SizeType } from \"../../lib/adaptivity\";\nimport { FormField } from \"../FormField/FormField\";\nimport { Text } from \"../Typography/Text/Text\";\n\nvar sizeYClassNames = _define_property({\n  none: \"vkuiTextarea--sizeY-none\"\n}, SizeType.COMPACT, \"vkuiTextarea--sizeY-compact\");\n/**\n * @see https://vkcom.github.io/VKUI/#/Textarea\n */\n\n\nexport var Textarea = function (_param) {\n  var _param_defaultValue = _param.defaultValue,\n      defaultValue = _param_defaultValue === void 0 ? \"\" : _param_defaultValue,\n      _param_grow = _param.grow,\n      grow = _param_grow === void 0 ? true : _param_grow,\n      style = _param.style,\n      onResize = _param.onResize,\n      className = _param.className,\n      getRootRef = _param.getRootRef,\n      getRef = _param.getRef,\n      _param_rows = _param.rows,\n      rows = _param_rows === void 0 ? 2 : _param_rows,\n      maxHeight = _param.maxHeight,\n      status = _param.status,\n      onChangeProp = _param.onChange,\n      valueProp = _param.value,\n      restProps = _object_without_properties(_param, [\"defaultValue\", \"grow\", \"style\", \"onResize\", \"className\", \"getRootRef\", \"getRef\", \"rows\", \"maxHeight\", \"status\", \"onChange\", \"value\"]);\n\n  var _useEnsuredControl = _sliced_to_array(useEnsuredControl({\n    defaultValue: defaultValue,\n    onChange: onChangeProp,\n    value: valueProp\n  }), 2),\n      value = _useEnsuredControl[0],\n      onChange = _useEnsuredControl[1];\n\n  var currentScrollHeight = React.useRef();\n  var elementRef = useExternRef(getRef);\n\n  var _useAdaptivity = useAdaptivity(),\n      _useAdaptivity_sizeY = _useAdaptivity.sizeY,\n      sizeY = _useAdaptivity_sizeY === void 0 ? \"none\" : _useAdaptivity_sizeY; // autosize input\n\n\n  React.useEffect(function () {\n    var el = elementRef.current;\n\n    if (grow && (el === null || el === void 0 ? void 0 : el.offsetParent)) {\n      el.style.height = \"\";\n      el.style.height = \"\".concat(el.scrollHeight, \"px\");\n\n      if (el.scrollHeight !== currentScrollHeight.current && onResize) {\n        onResize(el);\n        currentScrollHeight.current = el.scrollHeight;\n      }\n    }\n  }, [grow, value, sizeY, elementRef, onResize]);\n  return /*#__PURE__*/React.createElement(FormField, {\n    className: classNames(\"vkuiTextarea\", sizeY !== SizeType.REGULAR && sizeYClassNames[sizeY], className),\n    style: style,\n    getRootRef: getRootRef,\n    disabled: restProps.disabled,\n    status: status\n  }, /*#__PURE__*/React.createElement(Text, _object_spread_props(_object_spread({}, restProps), {\n    Component: \"textarea\",\n    normalize: false,\n    style: {\n      maxHeight: maxHeight\n    },\n    rows: rows,\n    className: \"vkuiTextarea__el\",\n    value: value,\n    onChange: onChange,\n    getRootRef: elementRef\n  })));\n};","map":{"version":3,"mappings":";;;;;AAAA,YAAYA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,QAAT,QAAyB,sBAAzB;AAEA,SAASC,SAAT,QAA0C,wBAA1C;AACA,SAASC,IAAT,QAAqB,yBAArB;;AAGA,IAAMC;EACJC,IAAI;AADAD,GAEHH,SAASK,OAFNF,EAEa,6BAFbA,CAAN;AAgBA;;;;;AAGA,OAAO,IAAMG,WAAW;mCACtBC;MAAAA,gDAAe,EAAfA,GAAeC;MAAAC,qBACfC;MAAAA,gCAAO,IAAPA,GAAOD;MACPE;MACAC;MACAC;MACAC;MACAC;MAAAA,qBACAC;MAAAA,gCAAO,CAAPA,GAAOC;MACPC;MACAC;MACAC,YAAUC,UAAVD;MACAE,SAAOC,UAAPD;MACGE,gDAZHjB,cAYGiB,EAXHd,MAWGc,EAVHb,OAUGa,EATHZ,UASGY,EARHX,WAQGW,EAPHV,YAOGU,EANHT,QAMGS,EALHR,MAKGQ,EAJHN,WAIGM,EAHHL,QAGGK,EAFHJ,UAEGI,EADHF,OACGE;;EAEH,IAA0B1B,wDAAkB;IAC1CS,0BAD0C;IAE1Ca,UAAUC,YAFgC;IAG1CC,OAAOC;EAHmC,CAAlBzB,GAI1B,CAJ0BA,CAA1B;EAAA,IAAOwB,QAAmBxB,qBAA1B;EAAA,IAAcsB,WAAYtB,qBAA1B;;EAKA,IAAM2B,sBAAsB9B,MAAM+B,MAAN/B,EAA5B;EACA,IAAMgC,aAAa5B,aAAagB,MAAbhB,CAAnB;;EACA,IAA2BF,gCAA3B;EAAA,IAA2BA,sCAAnB+B,KAAR;EAAA,IAAQA,0CAAQ,MAARA,GAAQC,oBAAhB,CAtBsB,CAwBtB;;;EACAlC,MAAMmC,SAANnC,CAAgB;IACd,IAAMoC,KAAKJ,WAAWK,OAAtB;;IAEA,IAAItB,SAAQqB,2CAAIE,YAAZvB,CAAJ,EAA8B;MAC5BqB,GAAGpB,KAAHoB,CAASG,MAATH,GAAkB,EAAlBA;MACAA,GAAGpB,KAAHoB,CAASG,MAATH,GAAkB,GAAmBI,MAAnB,CAAGJ,GAAGK,YAAN,EAAmB,IAAnB,CAAlBL;;MAEA,IAAIA,GAAGK,YAAHL,KAAoBN,oBAAoBO,OAAxCD,IAAmDnB,QAAvD,EAAiE;QAC/DA,SAASmB,EAATnB;QACAa,oBAAoBO,OAApBP,GAA8BM,GAAGK,YAAjCX;MACF;IACF;EACF,CAZA9B,EAYG,CAACe,IAAD,EAAOY,KAAP,EAAcM,KAAd,EAAqBD,UAArB,EAAiCf,QAAjC,CAZHjB;EAcA,oBACEA,oBAACM,SAAD,EAACA;IACCY,WAAWjB,2BAETgC,UAAU5B,SAASqC,OAAnBT,IAA8BzB,eAAe,CAACyB,KAAD,CAFpChC,EAGTiB,SAHSjB,CADZK;IAMCU,OAAOA,KANRV;IAOCa,YAAYA,UAPbb;IAQCqC,UAAUd,UAAUc,QARrBrC;IASCkB,QAAQA;EATTlB,CAAD,eAWEN,oBAACO,IAAD,EAACA,wCACKsB,SADLtB,GACKsB;IACJe,WAAU,UADNf;IAEJgB,WAAW,KAFPhB;IAGJb,OAAO;MAAEO;IAAF,CAHHM;IAIJR,MAAMA,IAJFQ;IAKJX,SAAS,oBALLW;IAMJF,OAAOA,KANHE;IAOJJ,UAAUA,QAPNI;IAQJV,YAAYa;EARRH,CADLtB,CAAD,CAXF,CADF;AAyBF,CAhEO","names":["React","classNames","useAdaptivity","useEnsuredControl","useExternRef","SizeType","FormField","Text","sizeYClassNames","none","COMPACT","Textarea","defaultValue","_param_defaultValue","_param_grow","grow","style","onResize","className","getRootRef","getRef","rows","_param_rows","maxHeight","status","onChange","onChangeProp","value","valueProp","restProps","currentScrollHeight","useRef","elementRef","sizeY","_useAdaptivity_sizeY","useEffect","el","current","offsetParent","height","concat","scrollHeight","REGULAR","disabled","Component","normalize"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\components\\Textarea\\Textarea.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { useEnsuredControl } from '../../hooks/useEnsuredControl';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { SizeType } from '../../lib/adaptivity';\nimport { HasRef, HasRootRef } from '../../types';\nimport { FormField, FormFieldProps } from '../FormField/FormField';\nimport { Text } from '../Typography/Text/Text';\nimport styles from './Textarea.module.css';\n\nconst sizeYClassNames = {\n  none: styles['Textarea--sizeY-none'],\n  [SizeType.COMPACT]: styles['Textarea--sizeY-compact'],\n};\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement>,\n    HasRef<HTMLTextAreaElement>,\n    HasRootRef<HTMLElement>,\n    Pick<React.CSSProperties, 'maxHeight'>,\n    Pick<FormFieldProps, 'status'> {\n  grow?: boolean;\n  onResize?(el: HTMLTextAreaElement): void;\n  defaultValue?: string;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Textarea\n */\nexport const Textarea = ({\n  defaultValue = '',\n  grow = true,\n  style,\n  onResize,\n  className,\n  getRootRef,\n  getRef,\n  rows = 2,\n  maxHeight,\n  status,\n  onChange: onChangeProp,\n  value: valueProp,\n  ...restProps\n}: TextareaProps) => {\n  const [value, onChange] = useEnsuredControl({\n    defaultValue,\n    onChange: onChangeProp,\n    value: valueProp,\n  });\n  const currentScrollHeight = React.useRef<number>();\n  const elementRef = useExternRef(getRef);\n  const { sizeY = 'none' } = useAdaptivity();\n\n  // autosize input\n  React.useEffect(() => {\n    const el = elementRef.current;\n\n    if (grow && el?.offsetParent) {\n      el.style.height = '';\n      el.style.height = `${el.scrollHeight}px`;\n\n      if (el.scrollHeight !== currentScrollHeight.current && onResize) {\n        onResize(el);\n        currentScrollHeight.current = el.scrollHeight;\n      }\n    }\n  }, [grow, value, sizeY, elementRef, onResize]);\n\n  return (\n    <FormField\n      className={classNames(\n        styles['Textarea'],\n        sizeY !== SizeType.REGULAR && sizeYClassNames[sizeY],\n        className,\n      )}\n      style={style}\n      getRootRef={getRootRef}\n      disabled={restProps.disabled}\n      status={status}\n    >\n      <Text\n        {...restProps}\n        Component=\"textarea\"\n        normalize={false}\n        style={{ maxHeight }}\n        rows={rows}\n        className={styles['Textarea__el']}\n        value={value}\n        onChange={onChange}\n        getRootRef={elementRef}\n      />\n    </FormField>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}