{"ast":null,"code":"import { Platform } from \"../platform\";\nimport { BREAKPOINTS, SizeType, VIEW_WIDTH_TO_CSS_BREAKPOINT_MAP, ViewHeight, ViewWidth } from \"./constants\";\n/**\n * @public\n */\n\nexport function getViewWidthByViewportWidth(viewportWidth) {\n  if (viewportWidth >= BREAKPOINTS.DESKTOP) {\n    return ViewWidth.DESKTOP;\n  }\n\n  if (viewportWidth >= BREAKPOINTS.TABLET) {\n    return ViewWidth.TABLET;\n  }\n\n  if (viewportWidth >= BREAKPOINTS.SMALL_TABLET) {\n    return ViewWidth.SMALL_TABLET;\n  }\n\n  if (viewportWidth >= BREAKPOINTS.MOBILE) {\n    return ViewWidth.MOBILE;\n  }\n\n  return ViewWidth.SMALL_MOBILE;\n}\nexport function getViewWidthByMediaQueries(mediaQueries) {\n  /* eslint-disable no-restricted-properties */\n  if (mediaQueries.desktopPlus.matches) {\n    return ViewWidth.DESKTOP;\n  }\n\n  if (mediaQueries.tablet.matches) {\n    return ViewWidth.TABLET;\n  }\n\n  if (mediaQueries.smallTablet.matches) {\n    return ViewWidth.SMALL_TABLET;\n  }\n\n  if (mediaQueries.mobile.matches) {\n    return ViewWidth.MOBILE;\n  }\n  /* eslint-enable no-restricted-properties */\n\n\n  return ViewWidth.SMALL_MOBILE;\n}\n/**\n * @public\n */\n\nexport function getViewHeightByViewportHeight(viewportHeight) {\n  if (viewportHeight >= BREAKPOINTS.MEDIUM_HEIGHT) {\n    return ViewHeight.MEDIUM;\n  }\n\n  if (viewportHeight >= BREAKPOINTS.MOBILE_LANDSCAPE_HEIGHT) {\n    return ViewHeight.SMALL;\n  }\n\n  return ViewHeight.EXTRA_SMALL;\n}\nexport function getViewHeightByMediaQueries(mediaQueries) {\n  /* eslint-disable no-restricted-properties */\n  if (mediaQueries.mediumHeight.matches) {\n    return ViewHeight.MEDIUM;\n  }\n\n  if (mediaQueries.mobileLandscapeHeight.matches) {\n    return ViewHeight.SMALL;\n  }\n  /* eslint-enable no-restricted-properties */\n\n\n  return ViewHeight.EXTRA_SMALL;\n}\nexport function getSizeX(viewWidth) {\n  return viewWidth <= ViewWidth.MOBILE ? SizeType.COMPACT : SizeType.REGULAR;\n}\nexport function getSizeY(viewWidth, viewHeight, hasPointer) {\n  if (viewWidth >= ViewWidth.SMALL_TABLET && hasPointer || viewHeight <= ViewHeight.EXTRA_SMALL) {\n    return SizeType.COMPACT;\n  }\n\n  return SizeType.REGULAR;\n}\nexport function tryToCheckIsDesktop(viewWidth, viewHeight, hasPointer, platform) {\n  // см. https://github.com/VKCOM/VKUI/pull/2473\n  var IS_VKCOM_CRUTCH = platform === Platform.VKCOM;\n\n  if ((viewWidth === undefined || hasPointer === undefined) && (viewWidth === undefined || viewHeight === undefined) || hasPointer === undefined && viewHeight === undefined) {\n    return IS_VKCOM_CRUTCH ? true : null;\n  }\n\n  var widthIsLikeDesktop = viewWidth >= ViewWidth.SMALL_TABLET;\n  var otherParametersIsLikeDesktop = hasPointer || (viewHeight !== undefined ? viewHeight >= ViewHeight.MEDIUM : false);\n  return widthIsLikeDesktop && otherParametersIsLikeDesktop || IS_VKCOM_CRUTCH;\n}\n/**\n * Конвертирует `viewWidth` в CSS брейкпоинты (см. тесты для наглядности).\n *\n * > Note: используется восклицательный знак (!), чтобы принудить TS поверить, что св-во точно не может быть\n * > `undefined`. Это всё из-за применения `Partial<...>` для объекта.\n */\n\nexport function viewWidthToClassName(breakpointClassNames) {\n  var viewWidth = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"none\";\n\n  if (viewWidth === \"none\") {\n    return breakpointClassNames.hasOwnProperty(\"none\") ? breakpointClassNames[\"none\"] : null;\n  }\n\n  var breakpoints = [];\n  var breakpointName = VIEW_WIDTH_TO_CSS_BREAKPOINT_MAP[viewWidth];\n\n  if (breakpointClassNames.hasOwnProperty(breakpointName)) {\n    breakpoints.push(breakpointClassNames[breakpointName]);\n  }\n\n  if (viewWidth >= ViewWidth.MOBILE) {\n    if (breakpointClassNames.hasOwnProperty(\"mobilePlus\")) {\n      breakpoints.push(breakpointClassNames[\"mobilePlus\"]);\n    }\n  }\n\n  if (viewWidth >= ViewWidth.SMALL_TABLET) {\n    if (breakpointClassNames.hasOwnProperty(\"smallTabletPlus\")) {\n      breakpoints.push(breakpointClassNames[\"smallTabletPlus\"]);\n    }\n  } else {\n    if (breakpointClassNames.hasOwnProperty(\"smallTabletMinus\")) {\n      breakpoints.push(breakpointClassNames[\"smallTabletMinus\"]);\n    }\n  }\n\n  if (viewWidth >= ViewWidth.TABLET) {\n    if (breakpointClassNames.hasOwnProperty(\"tabletPlus\")) {\n      breakpoints.push(breakpointClassNames[\"tabletPlus\"]);\n    }\n  } else {\n    if (breakpointClassNames.hasOwnProperty(\"tabletMinus\")) {\n      breakpoints.push(breakpointClassNames[\"tabletMinus\"]);\n    }\n  }\n\n  return breakpoints.length > 0 ? breakpoints.join(\" \") : null;\n}","map":{"version":3,"mappings":"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","names":["Platform","BREAKPOINTS","SizeType","VIEW_WIDTH_TO_CSS_BREAKPOINT_MAP","ViewHeight","ViewWidth","getViewWidthByViewportWidth","viewportWidth","DESKTOP","TABLET","SMALL_TABLET","MOBILE","SMALL_MOBILE","getViewWidthByMediaQueries","mediaQueries","desktopPlus","matches","tablet","smallTablet","mobile","getViewHeightByViewportHeight","viewportHeight","MEDIUM_HEIGHT","MEDIUM","MOBILE_LANDSCAPE_HEIGHT","SMALL","EXTRA_SMALL","getViewHeightByMediaQueries","mediumHeight","mobileLandscapeHeight","getSizeX","viewWidth","COMPACT","REGULAR","getSizeY","viewHeight","hasPointer","tryToCheckIsDesktop","platform","IS_VKCOM_CRUTCH","VKCOM","undefined","widthIsLikeDesktop","otherParametersIsLikeDesktop","viewWidthToClassName","breakpointClassNames","hasOwnProperty","breakpoints","breakpointName","push","length","join"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\lib\\adaptivity\\functions.ts"],"sourcesContent":["import type { Exact } from '../../types';\nimport { Platform, type PlatformType } from '../platform';\nimport {\n  BREAKPOINTS,\n  SizeType,\n  VIEW_WIDTH_TO_CSS_BREAKPOINT_MAP,\n  ViewHeight,\n  ViewWidth,\n} from './constants';\nimport type { CSSBreakpointsClassNames, MediaQueries } from './types';\n\n/**\n * @public\n */\nexport function getViewWidthByViewportWidth(viewportWidth: number) {\n  if (viewportWidth >= BREAKPOINTS.DESKTOP) {\n    return ViewWidth.DESKTOP;\n  }\n  if (viewportWidth >= BREAKPOINTS.TABLET) {\n    return ViewWidth.TABLET;\n  }\n  if (viewportWidth >= BREAKPOINTS.SMALL_TABLET) {\n    return ViewWidth.SMALL_TABLET;\n  }\n  if (viewportWidth >= BREAKPOINTS.MOBILE) {\n    return ViewWidth.MOBILE;\n  }\n  return ViewWidth.SMALL_MOBILE;\n}\n\nexport function getViewWidthByMediaQueries(mediaQueries: MediaQueries): ViewWidth {\n  /* eslint-disable no-restricted-properties */\n  if (mediaQueries.desktopPlus.matches) {\n    return ViewWidth.DESKTOP;\n  }\n  if (mediaQueries.tablet.matches) {\n    return ViewWidth.TABLET;\n  }\n  if (mediaQueries.smallTablet.matches) {\n    return ViewWidth.SMALL_TABLET;\n  }\n  if (mediaQueries.mobile.matches) {\n    return ViewWidth.MOBILE;\n  }\n  /* eslint-enable no-restricted-properties */\n  return ViewWidth.SMALL_MOBILE;\n}\n\n/**\n * @public\n */\nexport function getViewHeightByViewportHeight(viewportHeight: number) {\n  if (viewportHeight >= BREAKPOINTS.MEDIUM_HEIGHT) {\n    return ViewHeight.MEDIUM;\n  }\n  if (viewportHeight >= BREAKPOINTS.MOBILE_LANDSCAPE_HEIGHT) {\n    return ViewHeight.SMALL;\n  }\n  return ViewHeight.EXTRA_SMALL;\n}\n\nexport function getViewHeightByMediaQueries(mediaQueries: MediaQueries): ViewHeight {\n  /* eslint-disable no-restricted-properties */\n  if (mediaQueries.mediumHeight.matches) {\n    return ViewHeight.MEDIUM;\n  }\n  if (mediaQueries.mobileLandscapeHeight.matches) {\n    return ViewHeight.SMALL;\n  }\n  /* eslint-enable no-restricted-properties */\n  return ViewHeight.EXTRA_SMALL;\n}\n\nexport function getSizeX(viewWidth: ViewWidth): SizeType {\n  return viewWidth <= ViewWidth.MOBILE ? SizeType.COMPACT : SizeType.REGULAR;\n}\n\nexport function getSizeY(\n  viewWidth: ViewWidth,\n  viewHeight: ViewHeight,\n  hasPointer: boolean,\n): SizeType {\n  if ((viewWidth >= ViewWidth.SMALL_TABLET && hasPointer) || viewHeight <= ViewHeight.EXTRA_SMALL) {\n    return SizeType.COMPACT;\n  }\n  return SizeType.REGULAR;\n}\n\n/**\n * Проверка на Desktop.\n *\n * Функция гарантировано вернёт `boolean` или `null` в зависимости от условий.\n *\n * Возвращаем `null` в случае, если у нас недостаточно данных, чтобы определить платформу.\n *\n * ⚠️ При передаче Platform.VKCOM всегда будет возвращать `true`.\n */\nexport function tryToCheckIsDesktop(viewWidth: ViewWidth, viewHeight: ViewHeight, hasPointer: undefined | boolean, platform?: PlatformType): boolean; // prettier-ignore\nexport function tryToCheckIsDesktop(viewWidth: ViewWidth, viewHeight: undefined, hasPointer: boolean, platform?: PlatformType): boolean; // prettier-ignore\nexport function tryToCheckIsDesktop(viewWidth: undefined | ViewWidth, viewHeight: undefined, hasPointer: undefined, platform?: PlatformType): null; // prettier-ignore\nexport function tryToCheckIsDesktop(viewWidth: undefined, viewHeight: undefined | ViewHeight, hasPointer: undefined, platform?: PlatformType): null; // prettier-ignore\nexport function tryToCheckIsDesktop(viewWidth: undefined, viewHeight: undefined, hasPointer: undefined | boolean, platform?: PlatformType): null; // prettier-ignore\nexport function tryToCheckIsDesktop(viewWidth: undefined | ViewWidth, viewHeight: undefined | ViewHeight, hasPointer: undefined | boolean, platform?: PlatformType): null | boolean; // prettier-ignore\nexport function tryToCheckIsDesktop(\n  viewWidth: undefined | ViewWidth,\n  viewHeight: undefined | ViewHeight,\n  hasPointer: undefined | boolean,\n  platform?: PlatformType,\n): null | boolean {\n  // см. https://github.com/VKCOM/VKUI/pull/2473\n  const IS_VKCOM_CRUTCH = platform === Platform.VKCOM;\n\n  if (\n    ((viewWidth === undefined || hasPointer === undefined) &&\n      (viewWidth === undefined || viewHeight === undefined)) ||\n    (hasPointer === undefined && viewHeight === undefined)\n  ) {\n    return IS_VKCOM_CRUTCH ? true : null;\n  }\n\n  const widthIsLikeDesktop = viewWidth >= ViewWidth.SMALL_TABLET;\n  const otherParametersIsLikeDesktop =\n    hasPointer || (viewHeight !== undefined ? viewHeight >= ViewHeight.MEDIUM : false);\n\n  return (widthIsLikeDesktop && otherParametersIsLikeDesktop) || IS_VKCOM_CRUTCH;\n}\n\n/**\n * Конвертирует `viewWidth` в CSS брейкпоинты (см. тесты для наглядности).\n *\n * > Note: используется восклицательный знак (!), чтобы принудить TS поверить, что св-во точно не может быть\n * > `undefined`. Это всё из-за применения `Partial<...>` для объекта.\n */\nexport function viewWidthToClassName<T extends Partial<CSSBreakpointsClassNames>>(\n  breakpointClassNames: Exact<CSSBreakpointsClassNames, T>,\n  viewWidth: ViewWidth | 'none' = 'none',\n): string | null {\n  if (viewWidth === 'none') {\n    return breakpointClassNames.hasOwnProperty('none') ? breakpointClassNames['none']! : null;\n  }\n\n  const breakpoints: string[] = [];\n  const breakpointName = VIEW_WIDTH_TO_CSS_BREAKPOINT_MAP[viewWidth];\n\n  if (breakpointClassNames.hasOwnProperty(breakpointName)) {\n    breakpoints.push(breakpointClassNames[breakpointName]!);\n  }\n\n  if (viewWidth >= ViewWidth.MOBILE) {\n    if (breakpointClassNames.hasOwnProperty('mobilePlus')) {\n      breakpoints.push(breakpointClassNames['mobilePlus']!);\n    }\n  }\n\n  if (viewWidth >= ViewWidth.SMALL_TABLET) {\n    if (breakpointClassNames.hasOwnProperty('smallTabletPlus')) {\n      breakpoints.push(breakpointClassNames['smallTabletPlus']!);\n    }\n  } else {\n    if (breakpointClassNames.hasOwnProperty('smallTabletMinus')) {\n      breakpoints.push(breakpointClassNames['smallTabletMinus']!);\n    }\n  }\n\n  if (viewWidth >= ViewWidth.TABLET) {\n    if (breakpointClassNames.hasOwnProperty('tabletPlus')) {\n      breakpoints.push(breakpointClassNames['tabletPlus']!);\n    }\n  } else {\n    if (breakpointClassNames.hasOwnProperty('tabletMinus')) {\n      breakpoints.push(breakpointClassNames['tabletMinus']!);\n    }\n  }\n\n  return breakpoints.length > 0 ? breakpoints.join(' ') : null;\n}\n"]},"metadata":{},"sourceType":"module"}