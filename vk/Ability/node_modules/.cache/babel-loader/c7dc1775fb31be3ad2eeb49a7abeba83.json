{"ast":null,"code":"import { _ as _sliced_to_array } from \"@swc/helpers/_/_sliced_to_array\";\nimport * as React from \"react\";\nimport { useDOM } from \"../lib/dom\";\nimport { useIsomorphicLayoutEffect } from \"../lib/useIsomorphicLayoutEffect\";\nimport { useGlobalEventListener } from \"./useGlobalEventListener\";\nexport function useFocusWithin(ref) {\n  var document = useDOM().document;\n\n  var isFocusWithin = function () {\n    if (!ref.current || !document) {\n      return false;\n    }\n\n    return ref.current.contains(document.activeElement);\n  };\n\n  var _React_useState = _sliced_to_array(React.useState(isFocusWithin), 2),\n      focusWithin = _React_useState[0],\n      setFocusWithin = _React_useState[1];\n\n  var listener = function () {\n    var focus = isFocusWithin();\n    focus !== focusWithin && setFocusWithin(focus);\n  }; // Проверяем autoFocus\n\n\n  useIsomorphicLayoutEffect(listener, []);\n  useGlobalEventListener(document, \"focus\", listener, {\n    capture: true\n  });\n  useGlobalEventListener(document, \"blur\", listener, {\n    capture: true\n  });\n  return focusWithin;\n}","map":{"version":3,"mappings":";AAAA,YAAYA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,yBAAT,QAA0C,kCAA1C;AACA,SAASC,sBAAT,QAAuC,0BAAvC;AAEA,OAAO,SAASC,cAAT,CAAwBC,GAAxB,EAAgE;EACrE,IAAMC,QAAEA,GAAaL,SAAbK,QAAR;;EACA,IAAMC,gBAAgB;IACpB,IAAI,CAACF,IAAIG,OAAL,IAAgB,CAACF,QAArB,EAA+B;MAC7B,OAAO,KAAP;IACF;;IAEA,OAAOD,IAAIG,OAAJH,CAAYI,QAAZJ,CAAqBC,SAASI,aAA9BL,CAAP;EACF,CANA;;EAQA,IAAsCL,yCAAMW,QAANX,CAAwBO,aAAxBP,GAAwBO,CAAxBP,CAAtC;EAAA,IAAOY,cAA+BZ,kBAAtC;EAAA,IAAoBa,iBAAkBb,kBAAtC;;EAEA,IAAMc,WAAW;IACf,IAAMC,QAAQR,eAAd;IACAQ,UAAUH,WAAVG,IAAyBF,eAAeE,KAAfF,CAAzBE;EACF,CAHA,CAZqE,CAiBrE;;;EACAb,0BAA0BY,QAA1BZ,EAAoC,EAApCA;EAEAC,uBAAuBG,QAAvBH,EAAiC,OAAjCA,EAA0CW,QAA1CX,EAAoD;IAAEa,SAAS;EAAX,CAApDb;EACAA,uBAAuBG,QAAvBH,EAAiC,MAAjCA,EAAyCW,QAAzCX,EAAmD;IAAEa,SAAS;EAAX,CAAnDb;EAEA,OAAOS,WAAP;AACF","names":["React","useDOM","useIsomorphicLayoutEffect","useGlobalEventListener","useFocusWithin","ref","document","isFocusWithin","current","contains","activeElement","useState","focusWithin","setFocusWithin","listener","focus","capture"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\hooks\\useFocusWithin.ts"],"sourcesContent":["import * as React from 'react';\nimport { useDOM } from '../lib/dom';\nimport { useIsomorphicLayoutEffect } from '../lib/useIsomorphicLayoutEffect';\nimport { useGlobalEventListener } from './useGlobalEventListener';\n\nexport function useFocusWithin(ref: React.RefObject<HTMLElement | null>): boolean {\n  const { document } = useDOM();\n  const isFocusWithin = () => {\n    if (!ref.current || !document) {\n      return false;\n    }\n\n    return ref.current.contains(document.activeElement);\n  };\n\n  const [focusWithin, setFocusWithin] = React.useState<boolean>(isFocusWithin);\n\n  const listener = () => {\n    const focus = isFocusWithin();\n    focus !== focusWithin && setFocusWithin(focus);\n  };\n\n  // Проверяем autoFocus\n  useIsomorphicLayoutEffect(listener, []);\n\n  useGlobalEventListener(document, 'focus', listener, { capture: true });\n  useGlobalEventListener(document, 'blur', listener, { capture: true });\n\n  return focusWithin;\n}\n"]},"metadata":{},"sourceType":"module"}