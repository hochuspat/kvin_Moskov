{"ast":null,"code":"import { detectIOS, noop } from \"@vkontakte/vkjs\";\nexport var System;\n\n(function (System) {\n  System[\"IOS\"] = \"ios\";\n  System[\"UNKNOWN\"] = \"\";\n})(System || (System = {}));\n\nvar memoized = {};\nexport function computeBrowserInfo() {\n  var userAgent = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"\";\n\n  if (memoized[userAgent]) {\n    return memoized[userAgent];\n  }\n\n  var systemVersion = null;\n  var system = \"\";\n\n  var _detectIOS = detectIOS(userAgent),\n      isIOS = _detectIOS.isIOS,\n      iosMajor = _detectIOS.iosMajor,\n      iosMinor = _detectIOS.iosMinor;\n\n  if (isIOS) {\n    system = \"ios\";\n    systemVersion = {\n      major: iosMajor,\n      minor: iosMinor\n    };\n  }\n\n  var browserInfo = {\n    userAgent: userAgent,\n    system: system,\n    systemVersion: systemVersion\n  };\n  memoized[userAgent] = browserInfo;\n  return browserInfo;\n}\n/**\n * Эмуляция функции `window.matchMedia` для SSR.\n *\n * ⚠️ Желательно избегать использование этой эмуляции в SSR.\n */\n\nexport function mediaQueryNull(query) {\n  return {\n    matches: false,\n    media: query,\n    onchange: noop,\n    addListener: noop,\n    removeListener: noop,\n    addEventListener: noop,\n    removeEventListener: noop,\n    dispatchEvent: function dispatchEvent() {\n      return false;\n    }\n  };\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,QAAgC,iBAAhC;;;WAGYC;;;GAAAA;;AAWZ,IAAMC,WAA6C,EAAnD;AAEA,OAAO,SAASC,kBAAT,GAASA;MAAmBC,6EAAY;;EAC7C,IAAIF,QAAQ,CAACE,SAAD,CAAZ,EAAyB;IACvB,OAAOF,QAAQ,CAACE,SAAD,CAAf;EACF;;EAEA,IAAIC,gBAAgC,IAApC;EACA,IAAIC,WAAJ;;EAEA,IAAsCP,uBAAUK,SAAVL,CAAtC;EAAA,IAAQQ,QAA8BR,WAA9BQ,KAAR;EAAA,IAAeC,WAAuBT,WAAvBS,QAAf;EAAA,IAAyBC,WAAaV,WAAbU,QAAzB;;EAEA,IAAIF,KAAJ,EAAW;IACTD;IACAD,gBAAgB;MACdK,OAAOF,QADO;MAEdG,OAAOF;IAFO,CAAhBJ;EAIF;;EAEA,IAAMO,cAA2B;IAC/BR,oBAD+B;IAE/BE,cAF+B;IAG/BD;EAH+B,CAAjC;EAMAH,QAAQ,CAACE,SAAD,CAARF,GAAsBU,WAAtBV;EAEA,OAAOU,WAAP;AACF;AAEA;;;;;;AAKA,OAAO,SAASC,cAAT,CAAwBC,KAAxB,EAAqC;EAC1C,OAAO;IACLC,SAAS,KADJ;IAELC,OAAOF,KAFF;IAGLG,UAAUjB,IAHL;IAILkB,aAAalB,IAJR;IAKLmB,gBAAgBnB,IALX;IAMLoB,kBAAkBpB,IANb;IAOLqB,qBAAqBrB,IAPhB;IAQLsB;MACE,OAAO,KAAP;IACF;EAVK,CAAP;AAYF","names":["detectIOS","noop","System","memoized","computeBrowserInfo","userAgent","systemVersion","system","isIOS","iosMajor","iosMinor","major","minor","browserInfo","mediaQueryNull","query","matches","media","onchange","addListener","removeListener","addEventListener","removeEventListener","dispatchEvent"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\lib\\browser.ts"],"sourcesContent":["import { detectIOS, noop } from '@vkontakte/vkjs';\nimport type { Version } from '../types';\n\nexport enum System {\n  IOS = 'ios',\n  UNKNOWN = '',\n}\n\nexport interface BrowserInfo {\n  userAgent: string;\n  system: System;\n  systemVersion: Version | null;\n}\n\nconst memoized: { [index: string]: BrowserInfo } = {};\n\nexport function computeBrowserInfo(userAgent = ''): BrowserInfo {\n  if (memoized[userAgent]) {\n    return memoized[userAgent];\n  }\n\n  let systemVersion: Version | null = null;\n  let system = System.UNKNOWN;\n\n  const { isIOS, iosMajor, iosMinor } = detectIOS(userAgent);\n\n  if (isIOS) {\n    system = System.IOS;\n    systemVersion = {\n      major: iosMajor,\n      minor: iosMinor,\n    };\n  }\n\n  const browserInfo: BrowserInfo = {\n    userAgent,\n    system,\n    systemVersion,\n  };\n\n  memoized[userAgent] = browserInfo;\n\n  return browserInfo;\n}\n\n/**\n * Эмуляция функции `window.matchMedia` для SSR.\n *\n * ⚠️ Желательно избегать использование этой эмуляции в SSR.\n */\nexport function mediaQueryNull(query: string): MediaQueryList {\n  return {\n    matches: false,\n    media: query,\n    onchange: noop,\n    addListener: noop,\n    removeListener: noop,\n    addEventListener: noop,\n    removeEventListener: noop,\n    dispatchEvent() {\n      return false;\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}