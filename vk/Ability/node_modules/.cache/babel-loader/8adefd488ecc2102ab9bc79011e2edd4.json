{"ast":null,"code":"import { _ as _define_property } from \"@swc/helpers/_/_define_property\";\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport { SizeType } from \"../../lib/adaptivity\";\nimport { Tappable } from \"../Tappable/Tappable\";\nimport { Subhead } from \"../Typography/Subhead/Subhead\";\nimport { RichCellIcon } from \"./RichCellIcon/RichCellIcon\";\n\nvar sizeYClassNames = _define_property({\n  none: \"vkuiRichCell--sizeY-none\"\n}, SizeType.COMPACT, \"vkuiRichCell--sizeY-compact\");\n/**\n * @see https://vkcom.github.io/VKUI/#/RichCell\n */\n\n\nexport var RichCell = function (_param) {\n  var subhead = _param.subhead,\n      children = _param.children,\n      text = _param.text,\n      caption = _param.caption,\n      before = _param.before,\n      after = _param.after,\n      afterCaption = _param.afterCaption,\n      bottom = _param.bottom,\n      actions = _param.actions,\n      multiline = _param.multiline,\n      className = _param.className,\n      restProps = _object_without_properties(_param, [\"subhead\", \"children\", \"text\", \"caption\", \"before\", \"after\", \"afterCaption\", \"bottom\", \"actions\", \"multiline\", \"className\"]);\n\n  var _useAdaptivity = useAdaptivity(),\n      _useAdaptivity_sizeY = _useAdaptivity.sizeY,\n      sizeY = _useAdaptivity_sizeY === void 0 ? \"none\" : _useAdaptivity_sizeY;\n\n  return /*#__PURE__*/React.createElement(Tappable, _object_spread_props(_object_spread({}, restProps), {\n    className: classNames(\"vkuiRichCell\", !multiline && \"vkuiRichCell--text-ellipsis\", sizeY !== SizeType.REGULAR && sizeYClassNames[sizeY], className)\n  }), before && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiRichCell__before\"\n  }, before), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiRichCell__in\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiRichCell__content\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiRichCell__content-before\"\n  }, subhead && /*#__PURE__*/React.createElement(Subhead, {\n    Component: \"div\",\n    className: \"vkuiRichCell__subhead\"\n  }, subhead), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiRichCell__children\"\n  }, children), text && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiRichCell__text\"\n  }, text), caption && /*#__PURE__*/React.createElement(Subhead, {\n    Component: \"div\",\n    className: \"vkuiRichCell__caption\"\n  }, caption)), (after || afterCaption) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiRichCell__content-after\"\n  }, after && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiRichCell__after-children\"\n  }, after), afterCaption && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiRichCell__after-caption\"\n  }, afterCaption))), bottom && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiRichCell__bottom\"\n  }, bottom), actions && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiRichCell__actions\"\n  }, actions)));\n};\nRichCell.Icon = RichCellIcon;","map":{"version":3,"mappings":";;;;AAAA,YAAYA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,QAAT,QAAwC,sBAAxC;AACA,SAASC,OAAT,QAAwB,+BAAxB;AACA,SAASC,YAAT,QAA6B,6BAA7B;;AAGA,IAAMC;EACJC,IAAI;AADAD,GAEHJ,SAASM,OAFNF,EAEa,6BAFbA,CAAN;AAuDA;;;;;AAGA,OAAO,IAAMG,WAAW;MACtBC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACGC,gDAXHX,SAWGW,EAVHV,UAUGU,EATHT,MASGS,EARHR,SAQGQ,EAPHP,QAOGO,EANHN,OAMGM,EALHL,cAKGK,EAJHJ,QAIGI,EAHHH,SAGGG,EAFHF,WAEGE,EADHD,WACGC;;EAEH,IAA2BpB,gCAA3B;EAAA,IAA2BA,sCAAnBqB,KAAR;EAAA,IAAQA,0CAAQ,MAARA,GAAQC,oBAAhB;;EAEA,oBACExB,oBAACI,QAAD,EAACA,wCACKkB,SADLlB,GACKkB;IACJD,WAAWpB,2BAET,CAACmB,SAAD,IAACA,6BAFQnB,EAGTsB,UAAUpB,SAASsB,OAAnBF,IAA8BhB,eAAe,CAACgB,KAAD,CAHpCtB,EAIToB,SAJSpB;EADPqB,CADLlB,CAAD,EASGW,uBAAUf,oBAAC0B,KAAD,EAACA;IAAIL,SAAS;EAAbK,CAAD,EAA6CX,MAA7C,CATb,EAS0DA,aACxDf,oBAAC0B,KAAD,EAACA;IAAIL,SAAS;EAAbK,CAAD,eACE1B,oBAAC0B,KAAD,EAACA;IAAIL,SAAS;EAAbK,CAAD,eACE1B,oBAAC0B,KAAD,EAACA;IAAIL,SAAS;EAAbK,CAAD,EACGf,wBACCX,oBAACK,OAAD,EAACA;IAAQsB,WAAU,KAAlBtB;IAAwBgB,SAAS;EAAjChB,CAAD,EACGM,OADH,CAFJ,EAGOA,aAGLX,oBAAC0B,KAAD,EAACA;IAAIL,SAAS;EAAbK,CAAD,EAA+Cd,QAA/C,CANF,EAOGC,qBAAQb,oBAAC0B,KAAD,EAACA;IAAIL,SAAS;EAAbK,CAAD,EAA2Cb,IAA3C,CAPX,EAQGC,wBACCd,oBAACK,OAAD,EAACA;IAAQsB,WAAU,KAAlBtB;IAAwBgB,SAAS;EAAjChB,CAAD,EACGS,OADH,CATJ,CADF,EAeG,CAACE,SAASC,YAAV,KAAqB,aACpBjB,oBAAC0B,KAAD,EAACA;IAAIL,SAAS;EAAbK,CAAD,EACGV,sBAAShB,oBAAC0B,KAAD,EAACA;IAAIL,SAAS;EAAbK,CAAD,EAAqDV,KAArD,CADZ,EAEGC,6BACCjB,oBAAC0B,KAAD,EAACA;IAAIL,SAAS;EAAbK,CAAD,EAAoDT,YAApD,CAHJ,CAhBJ,CADF,EAyBGC,uBAAUlB,oBAAC0B,KAAD,EAACA;IAAIL,SAAS;EAAbK,CAAD,EAA6CR,MAA7C,CAzBb,EA0BGC,wBAAWnB,oBAAC0B,KAAD,EAACA;IAAIL,SAAS;EAAbK,CAAD,EAA8CP,OAA9C,CA1Bd,CAVF,CADF;AAyCF,CAzDO;AA2DPT,SAASkB,IAATlB,GAAgBJ,YAAhBI","names":["React","classNames","useAdaptivity","SizeType","Tappable","Subhead","RichCellIcon","sizeYClassNames","none","COMPACT","RichCell","subhead","children","text","caption","before","after","afterCaption","bottom","actions","multiline","className","restProps","sizeY","_useAdaptivity_sizeY","REGULAR","div","Component","Icon"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\components\\RichCell\\RichCell.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { SizeType } from '../../lib/adaptivity';\nimport { Tappable, TappableProps } from '../Tappable/Tappable';\nimport { Subhead } from '../Typography/Subhead/Subhead';\nimport { RichCellIcon } from './RichCellIcon/RichCellIcon';\nimport styles from './RichCell.module.css';\n\nconst sizeYClassNames = {\n  none: styles['RichCell--sizeY-none'],\n  [SizeType.COMPACT]: styles['RichCell--sizeY-compact'],\n};\n\nexport interface RichCellProps extends TappableProps {\n  /**\n   * Контейнер для текста над `children`.\n   */\n  subhead?: React.ReactNode;\n  /**\n   * Контейнер для текста под `children`.\n   */\n  text?: React.ReactNode;\n  /**\n   * Контейнер для текста под `text`.\n   */\n  caption?: React.ReactNode;\n  /**\n   * Контейнер для контента под `caption`. Например `<UsersStack size=\"m\" />`.\n   */\n  bottom?: React.ReactNode;\n  /**\n   * Кнопки-действия. Принимает [`Button`](https://vkcom.github.io/VKUI/#/Button) с параметрами:\n   *\n   * - `mode=\"primary\" size=\"s\"`\n   * - `mode=\"secondary\" size=\"s\"`\n   *\n   * Для набора кнопок используйте [`ButtonGroup`](https://vkcom.github.io/VKUI/#/ButtonGroup) с параметрами:\n   *\n   * - `mode=\"horizontal\" gap=\"s\" stretched`\n   */\n  actions?: React.ReactNode;\n  /**\n   * `<Avatar size={40|48|72} />`.\n   */\n  before?: React.ReactNode;\n  /**\n   * Иконка 28 или текст.\n   */\n  after?: React.ReactNode;\n  /**\n   * Текст под `after`.\n   */\n  afterCaption?: React.ReactNode;\n  /**\n   * Убирает анимацию нажатия.\n   */\n  disabled?: boolean;\n  /**\n   * Включает многострочный режим для `subhead`, `children`, `text` и `caption`.\n   */\n  multiline?: boolean;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/RichCell\n */\nexport const RichCell = ({\n  subhead,\n  children,\n  text,\n  caption,\n  before,\n  after,\n  afterCaption,\n  bottom,\n  actions,\n  multiline,\n  className,\n  ...restProps\n}: RichCellProps) => {\n  const { sizeY = 'none' } = useAdaptivity();\n\n  return (\n    <Tappable\n      {...restProps}\n      className={classNames(\n        styles['RichCell'],\n        !multiline && styles['RichCell--text-ellipsis'],\n        sizeY !== SizeType.REGULAR && sizeYClassNames[sizeY],\n        className,\n      )}\n    >\n      {before && <div className={styles['RichCell__before']}>{before}</div>}\n      <div className={styles['RichCell__in']}>\n        <div className={styles['RichCell__content']}>\n          <div className={styles['RichCell__content-before']}>\n            {subhead && (\n              <Subhead Component=\"div\" className={styles['RichCell__subhead']}>\n                {subhead}\n              </Subhead>\n            )}\n            <div className={styles['RichCell__children']}>{children}</div>\n            {text && <div className={styles['RichCell__text']}>{text}</div>}\n            {caption && (\n              <Subhead Component=\"div\" className={styles['RichCell__caption']}>\n                {caption}\n              </Subhead>\n            )}\n          </div>\n          {(after || afterCaption) && (\n            <div className={styles['RichCell__content-after']}>\n              {after && <div className={styles['RichCell__after-children']}>{after}</div>}\n              {afterCaption && (\n                <div className={styles['RichCell__after-caption']}>{afterCaption}</div>\n              )}\n            </div>\n          )}\n        </div>\n        {bottom && <div className={styles['RichCell__bottom']}>{bottom}</div>}\n        {actions && <div className={styles['RichCell__actions']}>{actions}</div>}\n      </div>\n    </Tappable>\n  );\n};\n\nRichCell.Icon = RichCellIcon;\n"]},"metadata":{},"sourceType":"module"}