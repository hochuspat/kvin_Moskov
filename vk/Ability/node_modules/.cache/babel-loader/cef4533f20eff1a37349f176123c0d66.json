{"ast":null,"code":"import * as React from \"react\";\nimport { hasMouse as hasPointerLib } from \"@vkontakte/vkjs\";\nimport { AdaptivityContext } from \"../components/AdaptivityProvider/AdaptivityContext\";\nimport { useIsClient } from \"./useIsClient\";\nexport function useAdaptivityHasPointer() {\n  var deferDetect = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;\n\n  var _React_useContext = React.useContext(AdaptivityContext),\n      hasPointerContext = _React_useContext.hasPointer;\n\n  var needTwoPassRendering = deferDetect || hasPointerContext === undefined;\n  var isClient = useIsClient(!needTwoPassRendering);\n\n  if (!isClient || hasPointerContext !== undefined) {\n    return hasPointerContext;\n  }\n\n  return hasPointerLib;\n}","map":{"version":3,"mappings":"AAAA,YAAYA,KAAZ,MAAuB,OAAvB;AACA,SAASC,YAAYC,aAArB,QAA0C,iBAA1C;AACA,SAASC,iBAAT,QAAkC,oDAAlC;AACA,SAASC,WAAT,QAA4B,eAA5B;AAUA,OAAO,SAASC,uBAAT,GAASA;MAAwBC,+EAAc;;EACpD,IAA0CN,0BAAMO,UAANP,CAAiBG,iBAAjBH,CAA1C;EAAA,IAAQQ,iBAAYC,GAAsBT,kBAAlCQ,UAAR;;EAEA,IAAME,uBAAuBJ,eAAeG,sBAAsBE,SAAlE;EAEA,IAAMC,WAAWR,YAAY,CAACM,oBAAbN,CAAjB;;EACA,IAAI,CAACQ,QAAD,IAAaH,sBAAsBE,SAAvC,EAAkD;IAChD,OAAOF,iBAAP;EACF;;EAEA,OAAOP,aAAP;AACF","names":["React","hasMouse","hasPointerLib","AdaptivityContext","useIsClient","useAdaptivityHasPointer","deferDetect","useContext","hasPointer","hasPointerContext","needTwoPassRendering","undefined","isClient"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\hooks\\useAdaptivityHasPointer.ts"],"sourcesContent":["import * as React from 'react';\nimport { hasMouse as hasPointerLib } from '@vkontakte/vkjs';\nimport { AdaptivityContext } from '../components/AdaptivityProvider/AdaptivityContext';\nimport { useIsClient } from './useIsClient';\n\n/**\n * Определение происходит с помощью `window.matchMedia`. Для того, чтобы не было ошибок при гидратации, по умолчанию\n * откладываем определение на второй рендер.\n *\n * [No SSR] Если передать `false`, то определение будет сразу.\n */\nexport function useAdaptivityHasPointer(deferDetect?: true): undefined | boolean; // prettier-ignore\nexport function useAdaptivityHasPointer(deferDetect?: false): boolean;\nexport function useAdaptivityHasPointer(deferDetect = true): undefined | boolean {\n  const { hasPointer: hasPointerContext } = React.useContext(AdaptivityContext);\n\n  const needTwoPassRendering = deferDetect || hasPointerContext === undefined;\n\n  const isClient = useIsClient(!needTwoPassRendering);\n  if (!isClient || hasPointerContext !== undefined) {\n    return hasPointerContext;\n  }\n\n  return hasPointerLib;\n}\n"]},"metadata":{},"sourceType":"module"}