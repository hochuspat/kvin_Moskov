{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { _ as _sliced_to_array } from \"@swc/helpers/_/_sliced_to_array\";\nimport * as React from \"react\";\nimport { Icon20Cancel } from \"@vkontakte/icons\";\nimport { classNames, hasReactNode } from \"@vkontakte/vkjs\";\nimport { useAdaptivityWithJSMediaQueries } from \"../../hooks/useAdaptivityWithJSMediaQueries\";\nimport { useId } from \"../../hooks/useId\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { useWaitTransitionFinish } from \"../../hooks/useWaitTransitionFinish\";\nimport { Platform } from \"../../lib/platform\";\nimport { stopPropagation } from \"../../lib/utils\";\nimport { useScrollLock } from \"../AppRoot/ScrollContext\";\nimport { FocusTrap } from \"../FocusTrap/FocusTrap\";\nimport { IconButton } from \"../IconButton/IconButton\";\nimport { ModalDismissButton } from \"../ModalDismissButton/ModalDismissButton\";\nimport { PopoutWrapper } from \"../PopoutWrapper/PopoutWrapper\";\nimport { AlertActions } from \"./AlertActions\";\nimport { AlertHeader, AlertText } from \"./AlertTypography\";\n/**\n * @see https://vkcom.github.io/VKUI/#/Alert\n */\n\nexport var Alert = function (_param) {\n  var _param_actions = _param.actions,\n      actions = _param_actions === void 0 ? [] : _param_actions,\n      _param_actionsLayout = _param.actionsLayout,\n      actionsLayout = _param_actionsLayout === void 0 ? \"horizontal\" : _param_actionsLayout,\n      children = _param.children,\n      className = _param.className,\n      style = _param.style,\n      text = _param.text,\n      header = _param.header,\n      onClose = _param.onClose,\n      _param_dismissLabel = _param.dismissLabel,\n      dismissLabel = _param_dismissLabel === void 0 ? \"Закрыть предупреждение\" : _param_dismissLabel,\n      renderAction = _param.renderAction,\n      actionsAlign = _param.actionsAlign,\n      _param_dismissButtonMode = _param.dismissButtonMode,\n      dismissButtonMode = _param_dismissButtonMode === void 0 ? \"outside\" : _param_dismissButtonMode,\n      getRootRef = _param.getRootRef,\n      restProps = _object_without_properties(_param, [\"actions\", \"actionsLayout\", \"children\", \"className\", \"style\", \"text\", \"header\", \"onClose\", \"dismissLabel\", \"renderAction\", \"actionsAlign\", \"dismissButtonMode\", \"getRootRef\"]);\n\n  var generatedId = useId();\n  var headerId = \"vkui-alert-\".concat(generatedId, \"-header\");\n  var textId = \"vkui-alert-\".concat(generatedId, \"-text\");\n  var platform = usePlatform();\n  var isDesktop = useAdaptivityWithJSMediaQueries().isDesktop;\n  var waitTransitionFinish = useWaitTransitionFinish().waitTransitionFinish;\n\n  var _React_useState = _sliced_to_array(React.useState(false), 2),\n      closing = _React_useState[0],\n      setClosing = _React_useState[1];\n\n  var isDismissButtonVisible = isDesktop && platform !== Platform.IOS;\n  var elementRef = React.useRef(null);\n  var timeout = platform === Platform.IOS ? 300 : 200;\n  var close = React.useCallback(function () {\n    setClosing(true);\n    waitTransitionFinish(elementRef.current, function (e) {\n      if (!e || e.propertyName === \"opacity\") {\n        onClose();\n      }\n    }, timeout);\n  }, [elementRef, waitTransitionFinish, onClose, timeout]);\n  var onItemClick = React.useCallback(function (item) {\n    var action = item.action,\n        autoClose = item.autoClose;\n\n    if (autoClose) {\n      setClosing(true);\n      waitTransitionFinish(elementRef.current, function (e) {\n        if (!e || e.propertyName === \"opacity\") {\n          onClose();\n          action && action();\n        }\n      }, timeout);\n    } else {\n      action && action();\n    }\n  }, [elementRef, waitTransitionFinish, onClose, timeout]);\n  useScrollLock();\n  return /*#__PURE__*/React.createElement(PopoutWrapper, {\n    className: className,\n    closing: closing,\n    style: style,\n    onClick: close,\n    getRootRef: getRootRef\n  }, /*#__PURE__*/React.createElement(FocusTrap, _object_spread_props(_object_spread({}, restProps), {\n    getRootRef: elementRef,\n    onClick: stopPropagation,\n    onClose: close,\n    timeout: timeout,\n    className: classNames(\"vkuiAlert\", platform === Platform.IOS && \"vkuiAlert--ios\", platform === Platform.VKCOM && \"vkuiAlert--vkcom\", closing && \"vkuiAlert--closing\", isDesktop && \"vkuiAlert--desktop\"),\n    role: \"alertdialog\",\n    \"aria-modal\": true,\n    \"aria-labelledby\": headerId,\n    \"aria-describedby\": textId\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(\"vkuiAlert__content\", dismissButtonMode === \"inside\" && \"vkuiAlert__content--withButton\")\n  }, hasReactNode(header) && /*#__PURE__*/React.createElement(AlertHeader, {\n    id: headerId\n  }, header), hasReactNode(text) && /*#__PURE__*/React.createElement(AlertText, {\n    id: textId\n  }, text), children, isDismissButtonVisible && dismissButtonMode === \"inside\" && /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": dismissLabel,\n    className: classNames(\"vkuiAlert__dismiss\", \"vkuiInternalAlert__dismiss\"),\n    onClick: close,\n    hoverMode: \"opacity\",\n    activeMode: \"opacity\"\n  }, /*#__PURE__*/React.createElement(Icon20Cancel, null))), /*#__PURE__*/React.createElement(AlertActions, {\n    actions: actions,\n    actionsAlign: actionsAlign,\n    actionsLayout: actionsLayout,\n    renderAction: renderAction,\n    onItemClick: onItemClick\n  }), isDismissButtonVisible && dismissButtonMode === \"outside\" && /*#__PURE__*/React.createElement(ModalDismissButton, {\n    onClick: close,\n    \"aria-label\": dismissLabel\n  })));\n};","map":{"version":3,"mappings":";;;;AAAA,YAAYA,KAAZ,MAAuB,OAAvB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,iBAAzC;AACA,SAASC,+BAAT,QAAgD,6CAAhD;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,uBAAT,QAAwC,qCAAxC;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,eAAT,QAAgC,iBAAhC;AAEA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,kBAAT,QAAmC,0CAAnC;AACA,SAASC,aAAT,QAA8B,gCAA9B;AAEA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,mBAAvC;AAmCA;;;;AAGA,OAAO,IAAMC,QAAQ;8BACnBC;MAAAA,sCAAU,EAAVA,GAAYC;MAAAC,8BACZC;MAAAA,kDAAgB,YAAhBA,GAAgBD;MAChBE;MACAC;MACAC;MACAC;MACAC;MACAC;MAAAA,6BACAC;MAAAA,gDAAe,wBAAfA,GAAeC;MACfC;MACAC;MAAAA,kCACAC;MAAAA,0DAAoB,SAApBA,GAAoBC;MACpBC;MACGC,gDAbHjB,SAaGiB,EAZHd,eAYGc,EAXHb,UAWGa,EAVHZ,WAUGY,EATHX,OASGW,EARHV,MAQGU,EAPHT,QAOGS,EANHR,SAMGQ,EALHP,cAKGO,EAJHL,cAIGK,EAHHJ,cAGGI,EAFHH,mBAEGG,EADHD,YACGC;;EAEH,IAAMC,cAAchC,OAApB;EAEA,IAAMiC,WAAW,cAA0BC,MAA1B,CAAcF,WAAd,EAA0B,SAA1B,CAAjB;EACA,IAAMG,SAAS,cAA0BD,MAA1B,CAAcF,WAAd,EAA0B,OAA1B,CAAf;EAEA,IAAMI,WAAWnC,aAAjB;EACA,IAAMoC,SAAEA,GAActC,kCAAdsC,SAAR;EACA,IAAMC,oBAAEA,GAAyBpC,0BAAzBoC,oBAAR;;EAEA,IAA8B3C,yCAAM4C,QAAN5C,CAAe,KAAfA,GAAe,CAAfA,CAA9B;EAAA,IAAO6C,UAAuB7C,kBAA9B;EAAA,IAAgB8C,aAAc9C,kBAA9B;;EACA,IAAM+C,yBAAyBL,aAAaD,aAAajC,SAASwC,GAAlE;EAEA,IAAMC,aAAajD,MAAMkD,MAANlD,CAA6B,IAA7BA,CAAnB;EAEA,IAAMmD,UAAUV,aAAajC,SAASwC,GAAtBP,GAA4B,GAA5BA,GAAkC,GAAlD;EAEA,IAAMW,QAAQpD,MAAMqD,WAANrD,CAAkB;IAC9B8C,WAAW,IAAXA;IACAH,qBACEM,WAAWK,OADbX,EAEE,UAACY,CAAD,EAACA;MACC,IAAI,CAACA,CAAD,IAAMA,EAAEC,YAAFD,KAAmB,SAA7B,EAAwC;QACtC3B;MACF;IACF,CANFe,EAOEQ,OAPFR;EASF,CAXc3C,EAWX,CAACiD,UAAD,EAAaN,oBAAb,EAAmCf,OAAnC,EAA4CuB,OAA5C,CAXWnD,CAAd;EAaA,IAAMyD,cAAczD,MAAMqD,WAANrD,CAClB,UAAC0D,IAAD,EAACA;IACC,IAAQC,SAAsBD,KAAtBC,MAAR;IAAA,IAAgBC,YAAcF,KAAdE,SAAhB;;IAEA,IAAIA,SAAJ,EAAe;MACbd,WAAW,IAAXA;MACAH,qBACEM,WAAWK,OADbX,EAEE,UAACY,CAAD,EAACA;QACC,IAAI,CAACA,CAAD,IAAMA,EAAEC,YAAFD,KAAmB,SAA7B,EAAwC;UACtC3B;UACA+B,UAAUA,QAAVA;QACF;MACF,CAPFhB,EAQEQ,OARFR;IAUF,CAZA,MAYO;MACLgB,UAAUA,QAAVA;IACF;EACF,CAnBkB3D,EAoBlB,CAACiD,UAAD,EAAaN,oBAAb,EAAmCf,OAAnC,EAA4CuB,OAA5C,CApBkBnD,CAApB;EAuBAU;EAEA,oBACEV,oBAACc,aAAD,EAACA;IACCU,WAAWA,SADZV;IAEC+B,SAASA,OAFV/B;IAGCW,OAAOA,KAHRX;IAIC+C,SAAST,KAJVtC;IAKCqB,YAAYA;EALbrB,CAAD,eAOEd,oBAACW,SAAD,EAACA,wCACKyB,SADLzB,GACKyB;IACJD,YAAYc,UADRb;IAEJyB,SAASpD,eAFL2B;IAGJR,SAASwB,KAHLhB;IAIJe,SAASA,OAJLf;IAKJZ,WAAWtB,wBAETuC,aAAajC,SAASwC,GAAtBP,IAAyB,gBAFhBvC,EAGTuC,aAAajC,SAASsD,KAAtBrB,IAA2B,kBAHlBvC,EAIT2C,+BAJS3C,EAKTwC,iCALSxC,CALPkC;IAYJ2B,MAAK,aAZD3B;IAaJ4B,kBAbI5B;IAcJ6B,mBAAiB3B,QAdbF;IAeJ8B,oBAAkB1B;EAfdJ,CADLzB,CAAD,eAkBEX,oBAACmE,KAAD,EAACA;IACC3C,WAAWtB,iCAET+B,sBAAsB,QAAtBA,IAAsB,gCAFb/B;EADZiE,CAAD,EAMGhE,aAAawB,MAAbxB,KAAawB,aAAW3B,oBAACgB,WAAD,EAACA;IAAYoD,IAAI9B;EAAhBtB,CAAD,EAA4BW,MAA5B,CAN3B,EAOGxB,aAAauB,IAAbvB,KAAauB,aAAS1B,oBAACiB,SAAD,EAACA;IAAUmD,IAAI5B;EAAdvB,CAAD,EAAwBS,IAAxB,CAPzB,EAQGH,QARH,EASGwB,0BAA0Bd,sBAAsB,QAAhDc,IAAgD,aAC/C/C,oBAACY,UAAD,EAACA;IACCyD,cAAYxC,YADbjB;IAECY,WAAWtB,iCAAqC,4BAArCA,CAFZU;IAGCiD,SAAST,KAHVxC;IAIC0D,WAAU,SAJX1D;IAKC2D,YAAW;EALZ3D,CAAD,eAOEZ,oBAACC,YAAD,EAACA,IAAD,CAPF,CAVJ,CAlBF,EAmCSA,aAIPD,oBAACe,YAAD,EAACA;IACCI,SAASA,OADVJ;IAECiB,cAAcA,YAFfjB;IAGCO,eAAeA,aAHhBP;IAICgB,cAAcA,YAJfhB;IAKC0C,aAAaA;EALd1C,CAAD,CAvCF,EA8CGgC,0BAA0Bd,sBAAsB,SAAhDc,IAAgD,aAC/C/C,oBAACa,kBAAD,EAACA;IAAmBgD,SAAST,KAA5BvC;IAAmCwD,cAAYxC;EAA/ChB,CAAD,CA/CJ,CAPF,CADF;AA4DF,CAlIO","names":["React","Icon20Cancel","classNames","hasReactNode","useAdaptivityWithJSMediaQueries","useId","usePlatform","useWaitTransitionFinish","Platform","stopPropagation","useScrollLock","FocusTrap","IconButton","ModalDismissButton","PopoutWrapper","AlertActions","AlertHeader","AlertText","Alert","actions","_param_actions","_param_actionsLayout","actionsLayout","children","className","style","text","header","onClose","dismissLabel","_param_dismissLabel","renderAction","actionsAlign","dismissButtonMode","_param_dismissButtonMode","getRootRef","restProps","generatedId","headerId","concat","textId","platform","isDesktop","waitTransitionFinish","useState","closing","setClosing","isDismissButtonVisible","IOS","elementRef","useRef","timeout","close","useCallback","current","e","propertyName","onItemClick","item","action","autoClose","onClick","VKCOM","role","aria-modal","aria-labelledby","aria-describedby","div","id","aria-label","hoverMode","activeMode"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\components\\Alert\\Alert.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Icon20Cancel } from '@vkontakte/icons';\nimport { classNames, hasReactNode } from '@vkontakte/vkjs';\nimport { useAdaptivityWithJSMediaQueries } from '../../hooks/useAdaptivityWithJSMediaQueries';\nimport { useId } from '../../hooks/useId';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { useWaitTransitionFinish } from '../../hooks/useWaitTransitionFinish';\nimport { Platform } from '../../lib/platform';\nimport { stopPropagation } from '../../lib/utils';\nimport { AlignType, AnchorHTMLAttributesOnly, HasDataAttribute, HasRootRef } from '../../types';\nimport { useScrollLock } from '../AppRoot/ScrollContext';\nimport { ButtonProps } from '../Button/Button';\nimport { FocusTrap } from '../FocusTrap/FocusTrap';\nimport { IconButton } from '../IconButton/IconButton';\nimport { ModalDismissButton } from '../ModalDismissButton/ModalDismissButton';\nimport { PopoutWrapper } from '../PopoutWrapper/PopoutWrapper';\nimport { AlertActionProps } from './AlertAction';\nimport { AlertActions } from './AlertActions';\nimport { AlertHeader, AlertText } from './AlertTypography';\nimport styles from './Alert.module.css';\n\ntype AlertActionMode = 'cancel' | 'destructive' | 'default';\n\nexport interface AlertActionInterface\n  extends Pick<ButtonProps, 'Component'>,\n    AnchorHTMLAttributesOnly,\n    HasDataAttribute {\n  title: string;\n  action?: VoidFunction;\n  autoClose?: boolean;\n  mode: AlertActionMode;\n}\n\nexport interface AlertProps extends React.HTMLAttributes<HTMLElement>, HasRootRef<HTMLDivElement> {\n  actionsLayout?: 'vertical' | 'horizontal';\n  actionsAlign?: AlignType;\n  actions?: AlertActionInterface[];\n  renderAction?: (props: AlertActionProps) => React.ReactNode;\n  header?: React.ReactNode;\n  text?: React.ReactNode;\n  onClose: VoidFunction;\n\n  /**\n   * `aria-label` для кнопки закрытия. Необходим, чтобы кнопка была доступной.\n   */\n  dismissLabel?: string;\n  /**\n   * Расположение кнопки закрытия (внутри и вне `popout'a`)\n   * Доступно только в `compact`-режиме, не отображается на `iOS`\n   */\n  dismissButtonMode?: 'inside' | 'outside';\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Alert\n */\nexport const Alert = ({\n  actions = [],\n  actionsLayout = 'horizontal',\n  children,\n  className,\n  style,\n  text,\n  header,\n  onClose,\n  dismissLabel = 'Закрыть предупреждение',\n  renderAction,\n  actionsAlign,\n  dismissButtonMode = 'outside',\n  getRootRef,\n  ...restProps\n}: AlertProps) => {\n  const generatedId = useId();\n\n  const headerId = `vkui-alert-${generatedId}-header`;\n  const textId = `vkui-alert-${generatedId}-text`;\n\n  const platform = usePlatform();\n  const { isDesktop } = useAdaptivityWithJSMediaQueries();\n  const { waitTransitionFinish } = useWaitTransitionFinish();\n\n  const [closing, setClosing] = React.useState(false);\n  const isDismissButtonVisible = isDesktop && platform !== Platform.IOS;\n\n  const elementRef = React.useRef<HTMLDivElement>(null);\n\n  const timeout = platform === Platform.IOS ? 300 : 200;\n\n  const close = React.useCallback(() => {\n    setClosing(true);\n    waitTransitionFinish(\n      elementRef.current,\n      (e?: TransitionEvent) => {\n        if (!e || e.propertyName === 'opacity') {\n          onClose();\n        }\n      },\n      timeout,\n    );\n  }, [elementRef, waitTransitionFinish, onClose, timeout]);\n\n  const onItemClick = React.useCallback(\n    (item: AlertActionInterface) => {\n      const { action, autoClose } = item;\n\n      if (autoClose) {\n        setClosing(true);\n        waitTransitionFinish(\n          elementRef.current,\n          (e?: TransitionEvent) => {\n            if (!e || e.propertyName === 'opacity') {\n              onClose();\n              action && action();\n            }\n          },\n          timeout,\n        );\n      } else {\n        action && action();\n      }\n    },\n    [elementRef, waitTransitionFinish, onClose, timeout],\n  );\n\n  useScrollLock();\n\n  return (\n    <PopoutWrapper\n      className={className}\n      closing={closing}\n      style={style}\n      onClick={close}\n      getRootRef={getRootRef}\n    >\n      <FocusTrap\n        {...restProps}\n        getRootRef={elementRef}\n        onClick={stopPropagation}\n        onClose={close}\n        timeout={timeout}\n        className={classNames(\n          styles['Alert'],\n          platform === Platform.IOS && styles['Alert--ios'],\n          platform === Platform.VKCOM && styles['Alert--vkcom'],\n          closing && styles['Alert--closing'],\n          isDesktop && styles['Alert--desktop'],\n        )}\n        role=\"alertdialog\"\n        aria-modal\n        aria-labelledby={headerId}\n        aria-describedby={textId}\n      >\n        <div\n          className={classNames(\n            styles['Alert__content'],\n            dismissButtonMode === 'inside' && styles['Alert__content--withButton'],\n          )}\n        >\n          {hasReactNode(header) && <AlertHeader id={headerId}>{header}</AlertHeader>}\n          {hasReactNode(text) && <AlertText id={textId}>{text}</AlertText>}\n          {children}\n          {isDismissButtonVisible && dismissButtonMode === 'inside' && (\n            <IconButton\n              aria-label={dismissLabel}\n              className={classNames(styles['Alert__dismiss'], 'vkuiInternalAlert__dismiss')}\n              onClick={close}\n              hoverMode=\"opacity\"\n              activeMode=\"opacity\"\n            >\n              <Icon20Cancel />\n            </IconButton>\n          )}\n        </div>\n        <AlertActions\n          actions={actions}\n          actionsAlign={actionsAlign}\n          actionsLayout={actionsLayout}\n          renderAction={renderAction}\n          onItemClick={onItemClick}\n        />\n        {isDismissButtonVisible && dismissButtonMode === 'outside' && (\n          <ModalDismissButton onClick={close} aria-label={dismissLabel} />\n        )}\n      </FocusTrap>\n    </PopoutWrapper>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}