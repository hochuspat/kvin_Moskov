{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { Platform } from \"../../lib/platform\";\nimport { RootComponent } from \"../RootComponent/RootComponent\";\n\nvar getItemsLayoutClassName = function (itemsLayout, children) {\n  switch (itemsLayout) {\n    case \"horizontal\":\n      return \"vkuiInternalTabbar--layout-horizontal\";\n\n    case \"vertical\":\n      return \"vkuiInternalTabbar--layout-vertical\";\n\n    default:\n      return React.Children.count(children) > 2 ? getItemsLayoutClassName(\"vertical\", []) : getItemsLayoutClassName(\"horizontal\", []);\n  }\n};\n/**\n * @see https://vkcom.github.io/VKUI/#/Tabbar\n */\n\n\nexport var Tabbar = function (_param) {\n  var _param_shadow = _param.shadow,\n      shadow = _param_shadow === void 0 ? true : _param_shadow,\n      mode = _param.mode,\n      restProps = _object_without_properties(_param, [\"shadow\", \"mode\"]);\n\n  var platform = usePlatform();\n  return /*#__PURE__*/React.createElement(RootComponent, _object_spread({\n    baseClassName: classNames(\"vkuiInternalTabbar\", \"vkuiTabbar\", platform === Platform.IOS && \"vkuiTabbar--ios\", getItemsLayoutClassName(mode, restProps.children), shadow && \"vkuiTabbar--shadow\")\n  }, restProps));\n};","map":{"version":3,"mappings":";;AAAA,YAAYA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,SAASC,aAAT,QAA8B,gCAA9B;;AAcA,IAAMC,0BAA0B,UAC9BC,WAD8B,EAE9BC,QAF8B,EAE9BA;EAEA,QAAQD,WAAR;IACE,KAAK,YAAL;MACE,OAAO,uCAAP;;IACF,KAAK,UAAL;MACE,OAAO,qCAAP;;IACF;MACE,OAAON,MAAMQ,QAANR,CAAeS,KAAfT,CAAqBO,QAArBP,IAAiC,CAAjCA,GACHK,wBAAwB,UAAxBA,EAAoC,EAApCA,CADGL,GAEHK,wBAAwB,YAAxBA,EAAsC,EAAtCA,CAFJ;EANJ;AAUF,CAdA;AAgBA;;;;;AAGA,OAAO,IAAMK,SAAS;6BAAGC;MAAAA,oCAAS,IAATA,GAASC;MAAMC;MAASC,gDAAxBH,QAAwBG,EAATD,MAASC;;EAC/C,IAAMC,WAAWb,aAAjB;EAEA,oBACEF,oBAACI,aAAD,EAACA;IACCY,eAAef,WACb,oBADaA,EACb,YADaA,EAGbc,aAAaZ,SAASc,GAAtBF,IAAyB,iBAHZd,EAIbI,wBAAwBQ,IAAxBR,EAA8BS,UAAUP,QAAxCF,CAJaJ,EAKbU,8BALaV;EADhBG,GAQKU,SARLV,CAAD,CADF;AAYF,CAfO","names":["React","classNames","usePlatform","Platform","RootComponent","getItemsLayoutClassName","itemsLayout","children","Children","count","Tabbar","shadow","_param_shadow","mode","restProps","platform","baseClassName","IOS"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\components\\Tabbar\\Tabbar.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { Platform } from '../../lib/platform';\nimport { HTMLAttributesWithRootRef } from '../../types';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport styles from './Tabbar.module.css';\n\nexport interface TabbarProps extends HTMLAttributesWithRootRef<HTMLDivElement> {\n  /**\n   * Флаг для показа/скрытия верхней тени (Android) или границы (iOS)\n   */\n  shadow?: boolean;\n  /**\n   * Задает расположение элементов (вертикальное/горизонтальное)\n   */\n  mode?: 'vertical' | 'horizontal' | 'auto';\n}\n\nconst getItemsLayoutClassName = (\n  itemsLayout: TabbarProps['mode'],\n  children: TabbarProps['children'],\n): string => {\n  switch (itemsLayout) {\n    case 'horizontal':\n      return 'vkuiInternalTabbar--layout-horizontal';\n    case 'vertical':\n      return 'vkuiInternalTabbar--layout-vertical';\n    default:\n      return React.Children.count(children) > 2\n        ? getItemsLayoutClassName('vertical', [])\n        : getItemsLayoutClassName('horizontal', []);\n  }\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Tabbar\n */\nexport const Tabbar = ({ shadow = true, mode, ...restProps }: TabbarProps) => {\n  const platform = usePlatform();\n\n  return (\n    <RootComponent\n      baseClassName={classNames(\n        'vkuiInternalTabbar',\n        styles['Tabbar'],\n        platform === Platform.IOS && styles['Tabbar--ios'],\n        getItemsLayoutClassName(mode, restProps.children),\n        shadow && styles['Tabbar--shadow'],\n      )}\n      {...restProps}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}