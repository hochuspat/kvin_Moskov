{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { useTodayDate } from \"../../hooks/useTodayDate\";\nimport { getDaysNames, getWeeks } from \"../../lib/calendar\";\nimport { isSameDay, isSameMonth } from \"../../lib/date\";\nimport { CalendarDay } from \"../CalendarDay/CalendarDay\";\nimport { useConfigProvider } from \"../ConfigProvider/ConfigProviderContext\";\nimport { RootComponent } from \"../RootComponent/RootComponent\";\nimport { Footnote } from \"../Typography/Footnote/Footnote\";\nexport var CalendarDays = function (_param) {\n  var viewDate = _param.viewDate,\n      value = _param.value,\n      weekStartsOn = _param.weekStartsOn,\n      onDayChange = _param.onDayChange,\n      isDaySelected = _param.isDaySelected,\n      isDayActive = _param.isDayActive,\n      isDaySelectionEnd = _param.isDaySelectionEnd,\n      isDaySelectionStart = _param.isDaySelectionStart,\n      onDayEnter = _param.onDayEnter,\n      onDayLeave = _param.onDayLeave,\n      isDayHinted = _param.isDayHinted,\n      isHintedDaySelectionStart = _param.isHintedDaySelectionStart,\n      isHintedDaySelectionEnd = _param.isHintedDaySelectionEnd,\n      isDayFocused = _param.isDayFocused,\n      isDayDisabled = _param.isDayDisabled,\n      size = _param.size,\n      _param_showNeighboringMonth = _param.showNeighboringMonth,\n      showNeighboringMonth = _param_showNeighboringMonth === void 0 ? false : _param_showNeighboringMonth,\n      dayProps = _param.dayProps,\n      _param_listenDayChangesForUpdate = _param.listenDayChangesForUpdate,\n      listenDayChangesForUpdate = _param_listenDayChangesForUpdate === void 0 ? false : _param_listenDayChangesForUpdate,\n      getRootRef = _param.getRootRef,\n      props = _object_without_properties(_param, [\"viewDate\", \"value\", \"weekStartsOn\", \"onDayChange\", \"isDaySelected\", \"isDayActive\", \"isDaySelectionEnd\", \"isDaySelectionStart\", \"onDayEnter\", \"onDayLeave\", \"isDayHinted\", \"isHintedDaySelectionStart\", \"isHintedDaySelectionEnd\", \"isDayFocused\", \"isDayDisabled\", \"size\", \"showNeighboringMonth\", \"dayProps\", \"listenDayChangesForUpdate\", \"getRootRef\"]);\n\n  var locale = useConfigProvider().locale;\n  var ref = useExternRef(getRootRef);\n  var now = useTodayDate(listenDayChangesForUpdate);\n  var weeks = React.useMemo(function () {\n    return getWeeks(viewDate, weekStartsOn);\n  }, [weekStartsOn, viewDate]);\n  var daysNames = React.useMemo(function () {\n    return getDaysNames(now, weekStartsOn, locale);\n  }, [locale, now, weekStartsOn]);\n  var handleDayChange = React.useCallback(function (date) {\n    var _ref_current;\n\n    onDayChange(date);\n    (_ref_current = ref.current) === null || _ref_current === void 0 ? void 0 : _ref_current.focus();\n  }, [onDayChange, ref]);\n  return /*#__PURE__*/React.createElement(RootComponent, _object_spread_props(_object_spread({}, props), {\n    baseClassName: \"vkuiCalendarDays\",\n    getRootRef: ref\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(\"vkuiCalendarDays__row\", size === \"s\" && \"vkuiCalendarDays__row--size-s\")\n  }, daysNames.map(function (dayName) {\n    return /*#__PURE__*/React.createElement(Footnote, {\n      key: dayName,\n      className: \"vkuiCalendarDays__weekday\"\n    }, dayName);\n  })), weeks.map(function (week, i) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(\"vkuiCalendarDays__row\", size === \"s\" && \"vkuiCalendarDays__row--size-s\"),\n      key: i\n    }, week.map(function (day, i) {\n      var sameMonth = isSameMonth(day, viewDate);\n      return /*#__PURE__*/React.createElement(CalendarDay, _object_spread({\n        key: day.toISOString(),\n        day: day,\n        today: isSameDay(day, now),\n        active: isDayActive(day),\n        onChange: handleDayChange,\n        hidden: !showNeighboringMonth && !sameMonth,\n        disabled: isDayDisabled(day),\n        selectionStart: isDaySelectionStart(day, i),\n        selectionEnd: isDaySelectionEnd(day, i),\n        hintedSelectionStart: isHintedDaySelectionStart === null || isHintedDaySelectionStart === void 0 ? void 0 : isHintedDaySelectionStart(day, i),\n        hintedSelectionEnd: isHintedDaySelectionEnd === null || isHintedDaySelectionEnd === void 0 ? void 0 : isHintedDaySelectionEnd(day, i),\n        selected: isDaySelected === null || isDaySelected === void 0 ? void 0 : isDaySelected(day),\n        focused: isDayFocused(day),\n        onEnter: onDayEnter,\n        onLeave: onDayLeave,\n        hinted: isDayHinted === null || isDayHinted === void 0 ? void 0 : isDayHinted(day),\n        sameMonth: sameMonth,\n        size: size\n      }, dayProps));\n    }));\n  }));\n};","map":{"version":3,"mappings":"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","names":["React","classNames","useExternRef","useTodayDate","getDaysNames","getWeeks","isSameDay","isSameMonth","CalendarDay","useConfigProvider","RootComponent","Footnote","CalendarDays","viewDate","value","weekStartsOn","onDayChange","isDaySelected","isDayActive","isDaySelectionEnd","isDaySelectionStart","onDayEnter","onDayLeave","isDayHinted","isHintedDaySelectionStart","isHintedDaySelectionEnd","isDayFocused","isDayDisabled","size","showNeighboringMonth","_param_showNeighboringMonth","dayProps","listenDayChangesForUpdate","_param_listenDayChangesForUpdate","getRootRef","props","locale","ref","now","weeks","useMemo","daysNames","handleDayChange","useCallback","date","current","focus","baseClassName","div","className","map","dayName","key","week","i","day","sameMonth","toISOString","today","active","onChange","hidden","disabled","selectionStart","selectionEnd","hintedSelectionStart","hintedSelectionEnd","selected","focused","onEnter","onLeave","hinted"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\components\\CalendarDays\\CalendarDays.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useTodayDate } from '../../hooks/useTodayDate';\nimport { getDaysNames, getWeeks } from '../../lib/calendar';\nimport { isSameDay, isSameMonth } from '../../lib/date';\nimport { HTMLAttributesWithRootRef } from '../../types';\nimport { CalendarDay, CalendarDayElementProps } from '../CalendarDay/CalendarDay';\nimport { useConfigProvider } from '../ConfigProvider/ConfigProviderContext';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport { Footnote } from '../Typography/Footnote/Footnote';\nimport styles from './CalendarDays.module.css';\n\nexport interface CalendarDaysProps\n  extends Omit<HTMLAttributesWithRootRef<HTMLDivElement>, 'onChange'> {\n  value?: Date | Array<Date | null>;\n  viewDate: Date;\n  weekStartsOn: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n  showNeighboringMonth?: boolean;\n  size?: 's' | 'm';\n  dayProps?: CalendarDayElementProps;\n  listenDayChangesForUpdate?: boolean;\n  onDayChange(value: Date): void;\n  isDayDisabled(value: Date): boolean;\n  isDaySelectionStart(value: Date, dayOfWeek: number): boolean;\n  isDaySelectionEnd(value: Date, dayOfWeek: number): boolean;\n  isHintedDaySelectionStart?(value: Date, dayOfWeek: number): boolean;\n  isHintedDaySelectionEnd?(value: Date, dayOfWeek: number): boolean;\n  isDayActive(value: Date): boolean;\n  isDayHinted?(value: Date): boolean;\n  isDaySelected?(value: Date): boolean;\n  isDayFocused(value: Date): boolean;\n  onDayEnter?(value: Date): void;\n  onDayLeave?(value: Date): void;\n}\n\nexport const CalendarDays = ({\n  viewDate,\n  value,\n  weekStartsOn,\n  onDayChange,\n  isDaySelected,\n  isDayActive,\n  isDaySelectionEnd,\n  isDaySelectionStart,\n  onDayEnter,\n  onDayLeave,\n  isDayHinted,\n  isHintedDaySelectionStart,\n  isHintedDaySelectionEnd,\n  isDayFocused,\n  isDayDisabled,\n  size,\n  showNeighboringMonth = false,\n  dayProps,\n  listenDayChangesForUpdate = false,\n  getRootRef,\n  ...props\n}: CalendarDaysProps) => {\n  const { locale } = useConfigProvider();\n  const ref = useExternRef(getRootRef);\n  const now = useTodayDate(listenDayChangesForUpdate);\n\n  const weeks = React.useMemo(() => getWeeks(viewDate, weekStartsOn), [weekStartsOn, viewDate]);\n\n  const daysNames = React.useMemo(\n    () => getDaysNames(now, weekStartsOn, locale),\n    [locale, now, weekStartsOn],\n  );\n\n  const handleDayChange = React.useCallback(\n    (date: Date) => {\n      onDayChange(date);\n\n      ref.current?.focus();\n    },\n    [onDayChange, ref],\n  );\n\n  return (\n    <RootComponent {...props} baseClassName={styles['CalendarDays']} getRootRef={ref}>\n      <div\n        className={classNames(\n          styles['CalendarDays__row'],\n          size === 's' && styles['CalendarDays__row--size-s'],\n        )}\n      >\n        {daysNames.map((dayName) => (\n          <Footnote key={dayName} className={styles['CalendarDays__weekday']}>\n            {dayName}\n          </Footnote>\n        ))}\n      </div>\n\n      {weeks.map((week, i) => (\n        <div\n          className={classNames(\n            styles['CalendarDays__row'],\n            size === 's' && styles['CalendarDays__row--size-s'],\n          )}\n          key={i}\n        >\n          {week.map((day, i) => {\n            const sameMonth = isSameMonth(day, viewDate);\n            return (\n              <CalendarDay\n                key={day.toISOString()}\n                day={day}\n                today={isSameDay(day, now)}\n                active={isDayActive(day)}\n                onChange={handleDayChange}\n                hidden={!showNeighboringMonth && !sameMonth}\n                disabled={isDayDisabled(day)}\n                selectionStart={isDaySelectionStart(day, i)}\n                selectionEnd={isDaySelectionEnd(day, i)}\n                hintedSelectionStart={isHintedDaySelectionStart?.(day, i)}\n                hintedSelectionEnd={isHintedDaySelectionEnd?.(day, i)}\n                selected={isDaySelected?.(day)}\n                focused={isDayFocused(day)}\n                onEnter={onDayEnter}\n                onLeave={onDayLeave}\n                hinted={isDayHinted?.(day)}\n                sameMonth={sameMonth}\n                size={size}\n                {...dayProps}\n              />\n            );\n          })}\n        </div>\n      ))}\n    </RootComponent>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}