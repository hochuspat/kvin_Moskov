{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { _ as _sliced_to_array } from \"@swc/helpers/_/_sliced_to_array\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { useAdaptivityHasPointer } from \"../../hooks/useAdaptivityHasPointer\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { useGlobalEventListener } from \"../../hooks/useGlobalEventListener\";\nimport { useDOM } from \"../../lib/dom\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { RootComponent } from \"../RootComponent/RootComponent\";\nimport { ScrollArrow } from \"../ScrollArrow/ScrollArrow\";\nimport { Touch } from \"../Touch/Touch\";\nimport { calcMax, calcMin } from \"./helpers\";\nvar ANIMATION_DURATION = 0.24;\nvar LAYOUT_DEFAULT_STATE = {\n  containerWidth: 0,\n  viewportOffsetWidth: 0,\n  layerWidth: 0,\n  min: 0,\n  max: 0,\n  slides: [],\n  isFullyVisible: true\n};\nvar SHIFT_DEFAULT_STATE = {\n  animation: undefined,\n  shiftX: 0,\n  dragging: false,\n  deltaX: 0,\n  indent: 0\n};\nvar stylesBullets = {\n  dark: \"vkuiBaseGallery__bullets--dark\",\n  light: \"vkuiBaseGallery__bullets--light\"\n};\nexport var BaseGallery = function (_param) {\n  var _param_bullets = _param.bullets,\n      bullets = _param_bullets === void 0 ? false : _param_bullets,\n      getRootRef = _param.getRootRef,\n      children = _param.children,\n      _param_slideWidth = _param.slideWidth,\n      slideWidth = _param_slideWidth === void 0 ? \"100%\" : _param_slideWidth,\n      _param_slideIndex = _param.slideIndex,\n      slideIndex = _param_slideIndex === void 0 ? 0 : _param_slideIndex,\n      tmp = _param.isDraggable,\n      isDraggableProp = tmp === void 0 ? true : tmp,\n      onDragStart = _param.onDragStart,\n      onDragEnd = _param.onDragEnd,\n      onChange = _param.onChange,\n      onPrevClick = _param.onPrevClick,\n      onNextClick = _param.onNextClick,\n      _param_align = _param.align,\n      align = _param_align === void 0 ? \"left\" : _param_align,\n      showArrows = _param.showArrows,\n      getRef = _param.getRef,\n      _param_arrowSize = _param.arrowSize,\n      arrowSize = _param_arrowSize === void 0 ? \"l\" : _param_arrowSize,\n      restProps = _object_without_properties(_param, [\"bullets\", \"getRootRef\", \"children\", \"slideWidth\", \"slideIndex\", \"isDraggable\", \"onDragStart\", \"onDragEnd\", \"onChange\", \"onPrevClick\", \"onNextClick\", \"align\", \"showArrows\", \"getRef\", \"arrowSize\"]);\n\n  var slidesStore = React.useRef({});\n  var layoutState = React.useRef(LAYOUT_DEFAULT_STATE);\n\n  var _React_useState = _sliced_to_array(React.useState(SHIFT_DEFAULT_STATE), 2),\n      shiftState = _React_useState[0],\n      setShiftState = _React_useState[1];\n\n  var rootRef = useExternRef(getRootRef);\n  var viewportRef = useExternRef(getRef);\n  var window = useDOM().window;\n  var hasPointer = useAdaptivityHasPointer();\n  var isCenterWithCustomWidth = slideWidth === \"custom\" && align === \"center\";\n\n  var validateIndent = function (value) {\n    var _layoutState_current_max;\n\n    var localMax = (_layoutState_current_max = layoutState.current.max) !== null && _layoutState_current_max !== void 0 ? _layoutState_current_max : 0;\n\n    var _layoutState_current_min;\n\n    var localMin = (_layoutState_current_min = layoutState.current.min) !== null && _layoutState_current_min !== void 0 ? _layoutState_current_min : 0;\n\n    if (value < localMin) {\n      return localMin;\n    } else if (value > localMax) {\n      return localMax;\n    }\n\n    return value;\n  };\n  /*\n  * Считает отступ слоя галереи\n  */\n\n\n  var calculateIndent = function (targetIndex) {\n    var _layoutState_current_slides;\n\n    if (layoutState.current.isFullyVisible) {\n      return 0;\n    }\n\n    var targetSlide = ((_layoutState_current_slides = layoutState.current.slides) === null || _layoutState_current_slides === void 0 ? void 0 : _layoutState_current_slides.length) ? layoutState.current.slides[targetIndex] : null;\n\n    if (targetSlide) {\n      var coordX = targetSlide.coordX,\n          width = targetSlide.width;\n\n      if (isCenterWithCustomWidth) {\n        var _layoutState_current_viewportOffsetWidth;\n\n        var viewportWidth = (_layoutState_current_viewportOffsetWidth = layoutState.current.viewportOffsetWidth) !== null && _layoutState_current_viewportOffsetWidth !== void 0 ? _layoutState_current_viewportOffsetWidth : 0;\n        return viewportWidth / 2 - coordX - width / 2;\n      }\n\n      return validateIndent(-1 * coordX);\n    }\n\n    return 0;\n  };\n  /*\n  * Считает отступ слоя галереи во время драга\n  */\n\n\n  var calculateDragIndent = function () {\n    var _layoutState_current_max;\n\n    var localMax = (_layoutState_current_max = layoutState.current.max) !== null && _layoutState_current_max !== void 0 ? _layoutState_current_max : 0;\n\n    var _layoutState_current_min;\n\n    var localMin = (_layoutState_current_min = layoutState.current.min) !== null && _layoutState_current_min !== void 0 ? _layoutState_current_min : 0;\n    var indent = shiftState.shiftX + shiftState.deltaX;\n\n    if (indent > localMax) {\n      return localMax + Number((indent - localMax) / 3);\n    } else if (indent < localMin) {\n      return localMin + Number((indent - localMin) / 3);\n    }\n\n    return indent;\n  };\n\n  var initializeSlides = function () {\n    var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n\n    var _rootRef_current, _viewportRef_current, _layoutState_current_slides_slideIndex, _localSlides_slideIndex;\n\n    var _React_Children_map;\n\n    var localSlides = (_React_Children_map = React.Children.map(children, function (_item, i) {\n      var elem = slidesStore.current[\"slide-\".concat(i)];\n\n      var _elem_offsetLeft, _elem_offsetWidth;\n\n      return {\n        coordX: (_elem_offsetLeft = elem === null || elem === void 0 ? void 0 : elem.offsetLeft) !== null && _elem_offsetLeft !== void 0 ? _elem_offsetLeft : 0,\n        width: (_elem_offsetWidth = elem === null || elem === void 0 ? void 0 : elem.offsetWidth) !== null && _elem_offsetWidth !== void 0 ? _elem_offsetWidth : 0\n      };\n    })) !== null && _React_Children_map !== void 0 ? _React_Children_map : [];\n\n    var _rootRef_current_offsetWidth;\n\n    var localContainerWidth = (_rootRef_current_offsetWidth = (_rootRef_current = rootRef.current) === null || _rootRef_current === void 0 ? void 0 : _rootRef_current.offsetWidth) !== null && _rootRef_current_offsetWidth !== void 0 ? _rootRef_current_offsetWidth : 0;\n\n    var _viewportRef_current_offsetWidth;\n\n    var localViewportOffsetWidth = (_viewportRef_current_offsetWidth = (_viewportRef_current = viewportRef.current) === null || _viewportRef_current === void 0 ? void 0 : _viewportRef_current.offsetWidth) !== null && _viewportRef_current_offsetWidth !== void 0 ? _viewportRef_current_offsetWidth : 0;\n    var localLayerWidth = localSlides.reduce(function (val, slide) {\n      return slide.width + val;\n    }, 0);\n    var adjustShiftX = localSlides.length <= layoutState.current.slides.length || ((_layoutState_current_slides_slideIndex = layoutState.current.slides[slideIndex]) === null || _layoutState_current_slides_slideIndex === void 0 ? void 0 : _layoutState_current_slides_slideIndex.coordX) !== ((_localSlides_slideIndex = localSlides[slideIndex]) === null || _localSlides_slideIndex === void 0 ? void 0 : _localSlides_slideIndex.coordX);\n    layoutState.current = {\n      containerWidth: localContainerWidth,\n      viewportOffsetWidth: localViewportOffsetWidth,\n      layerWidth: localLayerWidth,\n      max: calcMax({\n        slides: localSlides,\n        viewportOffsetWidth: localViewportOffsetWidth,\n        isCenterWithCustomWidth: isCenterWithCustomWidth\n      }),\n      min: calcMin({\n        containerWidth: localContainerWidth,\n        layerWidth: localLayerWidth,\n        slides: localSlides,\n        viewportOffsetWidth: localViewportOffsetWidth,\n        isCenterWithCustomWidth: isCenterWithCustomWidth,\n        align: align\n      }),\n      slides: localSlides,\n      isFullyVisible: localLayerWidth <= localContainerWidth\n    };\n    setShiftState(function (prevState) {\n      var _options_animation;\n\n      return _object_spread_props(_object_spread({}, prevState), {\n        shiftX: adjustShiftX ? calculateIndent(slideIndex) : prevState.shiftX,\n        animation: (_options_animation = options.animation) !== null && _options_animation !== void 0 ? _options_animation : prevState.shiftX === validateIndent(prevState.shiftX)\n      });\n    });\n  };\n\n  var onResize = function () {\n    if (shiftState.animation !== undefined) {\n      initializeSlides({\n        animation: false\n      });\n    }\n  };\n\n  useGlobalEventListener(window, \"resize\", onResize);\n  useIsomorphicLayoutEffect(function () {\n    initializeSlides({\n      animation: false\n    });\n  }, [children, align, slideWidth]);\n  useIsomorphicLayoutEffect(function () {\n    if (shiftState.animation !== undefined) {\n      setShiftState(function (prevState) {\n        return _object_spread_props(_object_spread({}, prevState), {\n          animation: true,\n          deltaX: 0,\n          shiftX: calculateIndent(slideIndex !== null && slideIndex !== void 0 ? slideIndex : 0)\n        });\n      });\n    }\n  }, [slideIndex]);\n\n  var slideLeft = function (event) {\n    onChange === null || onChange === void 0 ? void 0 : onChange(slideIndex - 1);\n    onPrevClick === null || onPrevClick === void 0 ? void 0 : onPrevClick(event);\n  };\n\n  var slideRight = function (event) {\n    onChange === null || onChange === void 0 ? void 0 : onChange(slideIndex + 1);\n    onNextClick === null || onNextClick === void 0 ? void 0 : onNextClick(event);\n  };\n  /*\n  * Получает индекс слайда, к которому будет осуществлен переход\n  */\n\n\n  var getTarget = function (e) {\n    var expectDeltaX = shiftState.deltaX / e.duration * 240 * 0.6;\n\n    var _layoutState_current_max;\n\n    var shift = shiftState.shiftX + shiftState.deltaX + expectDeltaX - ((_layoutState_current_max = layoutState.current.max) !== null && _layoutState_current_max !== void 0 ? _layoutState_current_max : 0);\n    var direction = shiftState.deltaX < 0 ? 1 : -1; // Находим ближайшую границу слайда к текущему отступу\n\n    var targetIndex = layoutState.current.slides.reduce(function (val, item, index) {\n      var previousValue = Math.abs(layoutState.current.slides[val].coordX + shift);\n      var currentValue = Math.abs(item.coordX + shift);\n      return previousValue < currentValue ? val : index;\n    }, slideIndex);\n\n    if (targetIndex === slideIndex) {\n      var targetSlide = slideIndex + direction;\n\n      if (targetSlide >= 0 && targetSlide < layoutState.current.slides.length) {\n        if (Math.abs(shiftState.deltaX) > layoutState.current.slides[targetSlide].width * 0.05) {\n          targetIndex = targetSlide;\n        }\n      }\n    }\n\n    return targetIndex;\n  };\n\n  var onStart = function (e) {\n    e.originalEvent.stopPropagation();\n    onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(e);\n    setShiftState(function (prevState) {\n      return _object_spread_props(_object_spread({}, prevState), {\n        animation: false\n      });\n    });\n  };\n\n  var onMoveX = function (e) {\n    if (isDraggableProp && !layoutState.current.isFullyVisible) {\n      e.originalEvent.preventDefault();\n\n      if (e.isSlideX) {\n        if (shiftState.deltaX !== e.shiftX) {\n          setShiftState(function (prevState) {\n            return _object_spread_props(_object_spread({}, prevState), {\n              deltaX: e.shiftX,\n              dragging: e.isSlideX\n            });\n          });\n        }\n      }\n    }\n  };\n\n  var onEnd = function (e) {\n    var targetIndex = e.isSlide ? getTarget(e) : slideIndex !== null && slideIndex !== void 0 ? slideIndex : 0;\n    onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(e, targetIndex);\n    var nextShiftState = {\n      animation: true,\n      dragging: false,\n      deltaX: 0\n    };\n    var shiftXStick = calculateDragIndent();\n\n    if (targetIndex !== slideIndex) {\n      // Сохраняем сдвиг слайда в том положении, в каком его оставили после драга (fix issue #2185)\n      nextShiftState.shiftX = shiftXStick;\n    }\n\n    setShiftState(function (prevState) {\n      return _object_spread({}, prevState, nextShiftState);\n    });\n\n    if (targetIndex !== slideIndex) {\n      onChange === null || onChange === void 0 ? void 0 : onChange(targetIndex);\n    }\n  };\n\n  var indent = shiftState.dragging ? calculateDragIndent() : shiftState.shiftX;\n  var layerStyle = {\n    WebkitTransform: \"translateX(\".concat(indent, \"px)\"),\n    transform: \"translateX(\".concat(indent, \"px)\"),\n    WebkitTransition: shiftState.animation ? \"-webkit-transform \".concat(ANIMATION_DURATION, \"s cubic-bezier(.1, 0, .25, 1)\") : \"none\",\n    transition: shiftState.animation ? \"transform \".concat(ANIMATION_DURATION, \"s cubic-bezier(.1, 0, .25, 1)\") : \"none\"\n  };\n\n  var setSlideRef = function (slideRef, slideIndex) {\n    slidesStore.current[\"slide-\".concat(slideIndex)] = slideRef;\n  }; // shiftX is negative number <= 0, we can swipe back only if it is < 0\n\n\n  var canSlideLeft = !layoutState.current.isFullyVisible && shiftState.shiftX < 0;\n\n  var _layoutState_current_layerWidth;\n\n  var canSlideRight = !layoutState.current.isFullyVisible && ( // we can't move right when gallery layer fully scrolled right, if gallery aligned by left side\n  align === \"left\" && layoutState.current.containerWidth - shiftState.shiftX < ((_layoutState_current_layerWidth = layoutState.current.layerWidth) !== null && _layoutState_current_layerWidth !== void 0 ? _layoutState_current_layerWidth : 0) || // otherwise we need to check current slide index (align = right or align = center)\n  align !== \"left\" && slideIndex < layoutState.current.slides.length - 1);\n  var isDraggable = isDraggableProp && !layoutState.current.isFullyVisible;\n  return /*#__PURE__*/React.createElement(RootComponent, _object_spread_props(_object_spread({}, restProps), {\n    baseClassName: classNames(\"vkuiBaseGallery\", align === \"center\" && \"vkuiBaseGallery--align-center\", slideWidth === \"custom\" && \"vkuiBaseGallery--custom-width\", isDraggable && \"vkuiBaseGallery--draggable\"),\n    getRootRef: rootRef\n  }), /*#__PURE__*/React.createElement(Touch, {\n    className: \"vkuiBaseGallery__viewport\",\n    onStartX: onStart,\n    onMoveX: onMoveX,\n    onEnd: onEnd,\n    style: {\n      width: slideWidth === \"custom\" ? \"100%\" : slideWidth\n    },\n    getRootRef: viewportRef,\n    noSlideClick: true\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiBaseGallery__layer\",\n    style: layerStyle\n  }, React.Children.map(children, function (item, i) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"vkuiBaseGallery__slide\",\n      key: \"slide-\".concat(i),\n      ref: function (el) {\n        return setSlideRef(el, i);\n      }\n    }, item);\n  }))), bullets && /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-hidden\": true,\n    className: classNames(\"vkuiBaseGallery__bullets\", stylesBullets[bullets])\n  }, React.Children.map(children, function (_item, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(\"vkuiBaseGallery__bullet\", index === slideIndex && \"vkuiBaseGallery__bullet--active\"),\n      key: index\n    });\n  })), showArrows && hasPointer && canSlideLeft && /*#__PURE__*/React.createElement(ScrollArrow, {\n    className: \"vkuiBaseGallery__arrow\",\n    direction: \"left\",\n    onClick: slideLeft,\n    size: arrowSize\n  }), showArrows && hasPointer && canSlideRight && /*#__PURE__*/React.createElement(ScrollArrow, {\n    className: \"vkuiBaseGallery__arrow\",\n    direction: \"right\",\n    onClick: slideRight,\n    size: arrowSize\n  }));\n};","map":{"version":3,"mappings":"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","names":["React","classNames","useAdaptivityHasPointer","useExternRef","useGlobalEventListener","useDOM","useIsomorphicLayoutEffect","RootComponent","ScrollArrow","Touch","calcMax","calcMin","ANIMATION_DURATION","LAYOUT_DEFAULT_STATE","containerWidth","viewportOffsetWidth","layerWidth","min","max","slides","isFullyVisible","SHIFT_DEFAULT_STATE","animation","undefined","shiftX","dragging","deltaX","indent","stylesBullets","dark","light","BaseGallery","bullets","_param_bullets","getRootRef","children","slideWidth","_param_slideWidth","_param_slideIndex","slideIndex","isDraggableProp","isDraggable","onDragStart","onDragEnd","onChange","onPrevClick","onNextClick","align","_param_align","showArrows","getRef","arrowSize","_param_arrowSize","restProps","slidesStore","useRef","layoutState","useState","shiftState","setShiftState","rootRef","viewportRef","window","hasPointer","isCenterWithCustomWidth","validateIndent","value","localMax","current","localMin","calculateIndent","targetIndex","targetSlide","length","coordX","width","viewportWidth","calculateDragIndent","Number","initializeSlides","options","localSlides","Children","map","_item","i","elem","concat","offsetLeft","offsetWidth","localContainerWidth","localViewportOffsetWidth","localLayerWidth","reduce","val","slide","adjustShiftX","prevState","_object_spread_props","onResize","slideLeft","event","slideRight","getTarget","e","expectDeltaX","duration","shift","direction","item","index","previousValue","Math","abs","currentValue","onStart","originalEvent","stopPropagation","onMoveX","preventDefault","isSlideX","onEnd","isSlide","nextShiftState","shiftXStick","_object_spread","layerStyle","WebkitTransform","transform","WebkitTransition","transition","setSlideRef","slideRef","canSlideLeft","canSlideRight","baseClassName","className","onStartX","style","noSlideClick","div","key","ref","el","aria-hidden","onClick","size"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\components\\BaseGallery\\BaseGallery.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivityHasPointer } from '../../hooks/useAdaptivityHasPointer';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useGlobalEventListener } from '../../hooks/useGlobalEventListener';\nimport { useDOM } from '../../lib/dom';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport { ScrollArrow } from '../ScrollArrow/ScrollArrow';\nimport { Touch, TouchEvent } from '../Touch/Touch';\nimport { calcMax, calcMin } from './helpers';\nimport { BaseGalleryProps, GallerySlidesState, LayoutState, ShiftingState } from './types';\nimport styles from './BaseGallery.module.css';\n\nconst ANIMATION_DURATION = 0.24;\n\nconst LAYOUT_DEFAULT_STATE = {\n  containerWidth: 0,\n  viewportOffsetWidth: 0,\n  layerWidth: 0,\n  min: 0,\n  max: 0,\n  slides: [],\n  isFullyVisible: true,\n};\n\nconst SHIFT_DEFAULT_STATE = {\n  animation: undefined,\n  shiftX: 0,\n  dragging: false,\n  deltaX: 0,\n  indent: 0,\n};\n\nconst stylesBullets = {\n  dark: styles['BaseGallery__bullets--dark'],\n  light: styles['BaseGallery__bullets--light'],\n};\nexport const BaseGallery = ({\n  bullets = false,\n  getRootRef,\n  children,\n  slideWidth = '100%',\n  slideIndex = 0,\n  isDraggable: isDraggableProp = true,\n  onDragStart,\n  onDragEnd,\n  onChange,\n  onPrevClick,\n  onNextClick,\n  align = 'left',\n  showArrows,\n  getRef,\n  arrowSize = 'l',\n  ...restProps\n}: BaseGalleryProps) => {\n  const slidesStore = React.useRef<Record<string, HTMLDivElement | null>>({});\n  const layoutState = React.useRef<LayoutState>(LAYOUT_DEFAULT_STATE);\n  const [shiftState, setShiftState] = React.useState<ShiftingState>(SHIFT_DEFAULT_STATE);\n\n  const rootRef = useExternRef(getRootRef);\n  const viewportRef = useExternRef(getRef);\n\n  const { window } = useDOM();\n  const hasPointer = useAdaptivityHasPointer();\n\n  const isCenterWithCustomWidth = slideWidth === 'custom' && align === 'center';\n\n  const validateIndent = (value: number) => {\n    const localMax = layoutState.current.max ?? 0;\n    const localMin = layoutState.current.min ?? 0;\n\n    if (value < localMin) {\n      return localMin;\n    } else if (value > localMax) {\n      return localMax;\n    }\n\n    return value;\n  };\n\n  /*\n   * Считает отступ слоя галереи\n   */\n  const calculateIndent = (targetIndex: number) => {\n    if (layoutState.current.isFullyVisible) {\n      return 0;\n    }\n\n    const targetSlide = layoutState.current.slides?.length\n      ? layoutState.current.slides[targetIndex]\n      : null;\n\n    if (targetSlide) {\n      const { coordX, width } = targetSlide;\n\n      if (isCenterWithCustomWidth) {\n        const viewportWidth = layoutState.current.viewportOffsetWidth ?? 0;\n        return viewportWidth / 2 - coordX - width / 2;\n      }\n\n      return validateIndent(-1 * coordX);\n    }\n\n    return 0;\n  };\n\n  /*\n   * Считает отступ слоя галереи во время драга\n   */\n  const calculateDragIndent = () => {\n    const localMax = layoutState.current.max ?? 0;\n    const localMin = layoutState.current.min ?? 0;\n    const indent = shiftState.shiftX + shiftState.deltaX;\n\n    if (indent > localMax) {\n      return localMax + Number((indent - localMax) / 3);\n    } else if (indent < localMin) {\n      return localMin + Number((indent - localMin) / 3);\n    }\n\n    return indent;\n  };\n\n  const initializeSlides = (options: { animation?: boolean } = {}) => {\n    const localSlides =\n      React.Children.map(children, (_item: React.ReactNode, i: number): GallerySlidesState => {\n        const elem = slidesStore.current[`slide-${i}`];\n        return {\n          coordX: elem?.offsetLeft ?? 0,\n          width: elem?.offsetWidth ?? 0,\n        };\n      }) ?? [];\n\n    const localContainerWidth = rootRef.current?.offsetWidth ?? 0;\n    const localViewportOffsetWidth = viewportRef.current?.offsetWidth ?? 0;\n    const localLayerWidth = localSlides.reduce(\n      (val: number, slide: GallerySlidesState) => slide.width + val,\n      0,\n    );\n    const adjustShiftX =\n      localSlides.length <= layoutState.current.slides.length ||\n      layoutState.current.slides[slideIndex]?.coordX !== localSlides[slideIndex]?.coordX;\n\n    layoutState.current = {\n      containerWidth: localContainerWidth,\n      viewportOffsetWidth: localViewportOffsetWidth,\n      layerWidth: localLayerWidth,\n      max: calcMax({\n        slides: localSlides,\n        viewportOffsetWidth: localViewportOffsetWidth,\n        isCenterWithCustomWidth,\n      }),\n      min: calcMin({\n        containerWidth: localContainerWidth,\n        layerWidth: localLayerWidth,\n        slides: localSlides,\n        viewportOffsetWidth: localViewportOffsetWidth,\n        isCenterWithCustomWidth,\n        align,\n      }),\n      slides: localSlides,\n      isFullyVisible: localLayerWidth <= localContainerWidth,\n    };\n\n    setShiftState((prevState) => ({\n      ...prevState,\n      shiftX: adjustShiftX ? calculateIndent(slideIndex) : prevState.shiftX,\n      animation: options.animation ?? prevState.shiftX === validateIndent(prevState.shiftX),\n    }));\n  };\n\n  const onResize = () => {\n    if (shiftState.animation !== undefined) {\n      initializeSlides({ animation: false });\n    }\n  };\n\n  useGlobalEventListener(window, 'resize', onResize);\n\n  useIsomorphicLayoutEffect(() => {\n    initializeSlides({ animation: false });\n  }, [children, align, slideWidth]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (shiftState.animation !== undefined) {\n      setShiftState((prevState) => ({\n        ...prevState,\n        animation: true,\n        deltaX: 0,\n        shiftX: calculateIndent(slideIndex ?? 0),\n      }));\n    }\n  }, [slideIndex]);\n\n  const slideLeft = (event: React.MouseEvent) => {\n    onChange?.(slideIndex - 1);\n    onPrevClick?.(event);\n  };\n\n  const slideRight = (event: React.MouseEvent) => {\n    onChange?.(slideIndex + 1);\n    onNextClick?.(event);\n  };\n\n  /*\n   * Получает индекс слайда, к которому будет осуществлен переход\n   */\n  const getTarget = (e: TouchEvent) => {\n    const expectDeltaX = (shiftState.deltaX / e.duration) * 240 * 0.6;\n    const shift =\n      shiftState.shiftX + shiftState.deltaX + expectDeltaX - (layoutState.current.max ?? 0);\n    const direction = shiftState.deltaX < 0 ? 1 : -1;\n\n    // Находим ближайшую границу слайда к текущему отступу\n    let targetIndex = layoutState.current.slides.reduce(\n      (val: number, item: GallerySlidesState, index: number) => {\n        const previousValue = Math.abs(layoutState.current.slides[val].coordX + shift);\n        const currentValue = Math.abs(item.coordX + shift);\n\n        return previousValue < currentValue ? val : index;\n      },\n      slideIndex,\n    );\n\n    if (targetIndex === slideIndex) {\n      let targetSlide = slideIndex + direction;\n\n      if (targetSlide >= 0 && targetSlide < layoutState.current.slides.length) {\n        if (Math.abs(shiftState.deltaX) > layoutState.current.slides[targetSlide].width * 0.05) {\n          targetIndex = targetSlide;\n        }\n      }\n    }\n\n    return targetIndex;\n  };\n\n  const onStart = (e: TouchEvent) => {\n    e.originalEvent.stopPropagation();\n    onDragStart?.(e);\n    setShiftState((prevState) => ({ ...prevState, animation: false }));\n  };\n\n  const onMoveX = (e: TouchEvent) => {\n    if (isDraggableProp && !layoutState.current.isFullyVisible) {\n      e.originalEvent.preventDefault();\n\n      if (e.isSlideX) {\n        if (shiftState.deltaX !== e.shiftX) {\n          setShiftState((prevState) => ({\n            ...prevState,\n            deltaX: e.shiftX,\n            dragging: e.isSlideX,\n          }));\n        }\n      }\n    }\n  };\n\n  const onEnd = (e: TouchEvent) => {\n    const targetIndex = e.isSlide ? getTarget(e) : slideIndex ?? 0;\n    onDragEnd?.(e, targetIndex);\n\n    const nextShiftState: Partial<ShiftingState> = {\n      animation: true,\n      dragging: false,\n      deltaX: 0,\n    };\n\n    const shiftXStick = calculateDragIndent();\n    if (targetIndex !== slideIndex) {\n      // Сохраняем сдвиг слайда в том положении, в каком его оставили после драга (fix issue #2185)\n      nextShiftState.shiftX = shiftXStick;\n    }\n\n    setShiftState((prevState) => ({ ...prevState, ...nextShiftState }));\n    if (targetIndex !== slideIndex) {\n      onChange?.(targetIndex);\n    }\n  };\n\n  const indent = shiftState.dragging ? calculateDragIndent() : shiftState.shiftX;\n\n  const layerStyle = {\n    WebkitTransform: `translateX(${indent}px)`,\n    transform: `translateX(${indent}px)`,\n    WebkitTransition: shiftState.animation\n      ? `-webkit-transform ${ANIMATION_DURATION}s cubic-bezier(.1, 0, .25, 1)`\n      : 'none',\n    transition: shiftState.animation\n      ? `transform ${ANIMATION_DURATION}s cubic-bezier(.1, 0, .25, 1)`\n      : 'none',\n  };\n\n  const setSlideRef = (slideRef: HTMLDivElement | null, slideIndex: number) => {\n    slidesStore.current[`slide-${slideIndex}`] = slideRef;\n  };\n\n  // shiftX is negative number <= 0, we can swipe back only if it is < 0\n  const canSlideLeft = !layoutState.current.isFullyVisible && shiftState.shiftX < 0;\n\n  const canSlideRight =\n    !layoutState.current.isFullyVisible &&\n    // we can't move right when gallery layer fully scrolled right, if gallery aligned by left side\n    ((align === 'left' &&\n      layoutState.current.containerWidth - shiftState.shiftX <\n        (layoutState.current.layerWidth ?? 0)) ||\n      // otherwise we need to check current slide index (align = right or align = center)\n      (align !== 'left' && slideIndex < layoutState.current.slides.length - 1));\n\n  const isDraggable = isDraggableProp && !layoutState.current.isFullyVisible;\n\n  return (\n    <RootComponent\n      {...restProps}\n      baseClassName={classNames(\n        styles['BaseGallery'],\n        align === 'center' && styles['BaseGallery--align-center'],\n        slideWidth === 'custom' && styles['BaseGallery--custom-width'],\n        isDraggable && styles['BaseGallery--draggable'],\n      )}\n      getRootRef={rootRef}\n    >\n      <Touch\n        className={styles['BaseGallery__viewport']}\n        onStartX={onStart}\n        onMoveX={onMoveX}\n        onEnd={onEnd}\n        style={{ width: slideWidth === 'custom' ? '100%' : slideWidth }}\n        getRootRef={viewportRef}\n        noSlideClick\n      >\n        <div className={styles['BaseGallery__layer']} style={layerStyle}>\n          {React.Children.map(children, (item: React.ReactNode, i: number) => (\n            <div\n              className={styles['BaseGallery__slide']}\n              key={`slide-${i}`}\n              ref={(el) => setSlideRef(el, i)}\n            >\n              {item}\n            </div>\n          ))}\n        </div>\n      </Touch>\n\n      {bullets && (\n        <div\n          aria-hidden\n          className={classNames(styles['BaseGallery__bullets'], stylesBullets[bullets])}\n        >\n          {React.Children.map(children, (_item: React.ReactNode, index: number) => (\n            <div\n              className={classNames(\n                styles['BaseGallery__bullet'],\n                index === slideIndex && styles['BaseGallery__bullet--active'],\n              )}\n              key={index}\n            />\n          ))}\n        </div>\n      )}\n\n      {showArrows && hasPointer && canSlideLeft && (\n        <ScrollArrow\n          className={styles['BaseGallery__arrow']}\n          direction=\"left\"\n          onClick={slideLeft}\n          size={arrowSize}\n        />\n      )}\n      {showArrows && hasPointer && canSlideRight && (\n        <ScrollArrow\n          className={styles['BaseGallery__arrow']}\n          direction=\"right\"\n          onClick={slideRight}\n          size={arrowSize}\n        />\n      )}\n    </RootComponent>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}