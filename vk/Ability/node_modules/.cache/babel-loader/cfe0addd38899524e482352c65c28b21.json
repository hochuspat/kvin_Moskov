{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport * as React from \"react\";\nimport { Icon20CheckBoxOff, Icon20CheckBoxOn, Icon24CheckBoxOff, Icon24CheckBoxOn, Icon24CheckCircleOff, Icon24CheckCircleOn } from \"@vkontakte/icons\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { usePlatform } from \"../../../hooks/usePlatform\";\nimport { Platform } from \"../../../lib/platform\";\nimport { AdaptiveIconRenderer } from \"../../AdaptiveIconRenderer/AdaptiveIconRenderer\";\nimport { VisuallyHidden } from \"../../VisuallyHidden/VisuallyHidden\";\n\nvar CheckBoxOn = function () {\n  return /*#__PURE__*/React.createElement(AdaptiveIconRenderer, {\n    IconCompact: Icon20CheckBoxOn,\n    IconRegular: Icon24CheckBoxOn\n  });\n};\n\nvar CheckBoxOff = function () {\n  return /*#__PURE__*/React.createElement(AdaptiveIconRenderer, {\n    IconCompact: Icon20CheckBoxOff,\n    IconRegular: Icon24CheckBoxOff\n  });\n};\n\nfunction useTypeIcon(type) {\n  var platform = usePlatform();\n\n  if (type !== \"auto\") {\n    return type;\n  }\n\n  if (platform === Platform.IOS || platform === Platform.VKCOM) {\n    return \"circle\";\n  }\n\n  return \"square\";\n}\n\nexport var CellCheckbox = function (_param) {\n  var getRootRef = _param.getRootRef,\n      getRef = _param.getRef,\n      className = _param.className,\n      style = _param.style,\n      _param_type = _param.type,\n      type = _param_type === void 0 ? \"auto\" : _param_type,\n      restProps = _object_without_properties(_param, [\"getRootRef\", \"getRef\", \"className\", \"style\", \"type\"]);\n\n  var typeIcon = useTypeIcon(type);\n  var IconOff = typeIcon === \"circle\" ? Icon24CheckCircleOff : CheckBoxOff;\n  var IconOn = typeIcon === \"circle\" ? Icon24CheckCircleOn : CheckBoxOn;\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(\"vkuiCellCheckbox\", className),\n    style: style,\n    ref: getRootRef\n  }, /*#__PURE__*/React.createElement(VisuallyHidden, _object_spread_props(_object_spread({}, restProps), {\n    Component: \"input\",\n    type: \"checkbox\",\n    className: \"vkuiCellCheckbox__input\",\n    getRootRef: getRef\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(\"vkuiCellCheckbox__icon\", \"vkuiCellCheckbox__icon--off\"),\n    \"aria-hidden\": true\n  }, /*#__PURE__*/React.createElement(IconOff, null)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(\"vkuiCellCheckbox__icon\", \"vkuiCellCheckbox__icon--on\"),\n    \"aria-hidden\": true\n  }, /*#__PURE__*/React.createElement(IconOn, null)));\n};","map":{"version":3,"mappings":";;;AAAA,YAAYA,KAAZ,MAAuB,OAAvB;AACA,SACEC,iBADF,EAEEC,gBAFF,EAGEC,iBAHF,EAIEC,gBAJF,EAKEC,oBALF,EAMEC,mBANF,QAOO,kBAPP;AAQA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,QAAT,QAAyB,uBAAzB;AAEA,SAASC,oBAAT,QAAqC,iDAArC;AACA,SAASC,cAAT,QAA+B,qCAA/B;;AAIA,IAAMC,aAAa;sBACjBZ,oBAACU,oBAAD,EAACA;IAAqBG,aAAaX,gBAAlCQ;IAAoDI,aAAaV;EAAjEM,CAAD;CADF;;AAIA,IAAMK,cAAc;sBAClBf,oBAACU,oBAAD,EAACA;IAAqBG,aAAaZ,iBAAlCS;IAAqDI,aAAaX;EAAlEO,CAAD;CADF;;AAIA,SAASM,WAAT,CAAqBC,IAArB,EAAiE;EAC/D,IAAMC,WAAWV,aAAjB;;EAEA,IAAIS,SAAS,MAAb,EAAqB;IACnB,OAAOA,IAAP;EACF;;EAEA,IAAIC,aAAaT,SAASU,GAAtBD,IAA6BA,aAAaT,SAASW,KAAvD,EAA8D;IAC5D,OAAO,QAAP;EACF;;EAEA,OAAO,QAAP;AACF;;AAaA,OAAO,IAAMC,eAAe;MAC1BC;MACAC;MACAC;MACAC;MAAAA,qBACAR;MAAAA,gCAAO,MAAPA,GAAOS;MACJC,gDALHL,YAKGK,EAJHJ,QAIGI,EAHHH,WAGGG,EAFHF,OAEGE,EADHV,MACGU;;EAEH,IAAMC,WAAWZ,YAAYC,IAAZD,CAAjB;EAEA,IAAMa,UAAUD,aAAa,QAAbA,GAAwBvB,oBAAxBuB,GAA+Cb,WAA/D;EACA,IAAMe,SAASF,aAAa,QAAbA,GAAwBtB,mBAAxBsB,GAA8ChB,UAA7D;EAEA,oBACEZ,oBAAC+B,MAAD,EAACA;IAAKP,WAAWjB,+BAAmCiB,SAAnCjB,CAAhBwB;IAA+DN,OAAOA,KAAtEM;IAA6EC,KAAKV;EAAlFS,CAAD,eACE/B,oBAACW,cAAD,EAACA,wCACKgB,SADLhB,GACKgB;IACJM,WAAU,OADNN;IAEJV,MAAK,UAFDU;IAGJH,SAAS,2BAHLG;IAIJL,YAAYC;EAJRI,CADLhB,CAAD,CADF,eAQEX,oBAAC+B,MAAD,EAACA;IACCP,WAAWjB,mEADZwB;IAECG;EAFDH,CAAD,eAIE/B,oBAAC6B,OAAD,EAACA,IAAD,CAJF,CARF,EAYKA,aAEH7B,oBAAC+B,MAAD,EAACA;IACCP,WAAWjB,kEADZwB;IAECG;EAFDH,CAAD,eAIE/B,oBAAC8B,MAAD,EAACA,IAAD,CAJF,CAdF,CADF;AAuBF,CApCO","names":["React","Icon20CheckBoxOff","Icon20CheckBoxOn","Icon24CheckBoxOff","Icon24CheckBoxOn","Icon24CheckCircleOff","Icon24CheckCircleOn","classNames","usePlatform","Platform","AdaptiveIconRenderer","VisuallyHidden","CheckBoxOn","IconCompact","IconRegular","CheckBoxOff","useTypeIcon","type","platform","IOS","VKCOM","CellCheckbox","getRootRef","getRef","className","style","_param_type","restProps","typeIcon","IconOff","IconOn","span","ref","Component","aria-hidden"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\components\\Cell\\CellCheckbox\\CellCheckbox.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Icon20CheckBoxOff,\n  Icon20CheckBoxOn,\n  Icon24CheckBoxOff,\n  Icon24CheckBoxOn,\n  Icon24CheckCircleOff,\n  Icon24CheckCircleOn,\n} from '@vkontakte/icons';\nimport { classNames } from '@vkontakte/vkjs';\nimport { usePlatform } from '../../../hooks/usePlatform';\nimport { Platform } from '../../../lib/platform';\nimport { HasRef, HasRootRef } from '../../../types';\nimport { AdaptiveIconRenderer } from '../../AdaptiveIconRenderer/AdaptiveIconRenderer';\nimport { VisuallyHidden } from '../../VisuallyHidden/VisuallyHidden';\nimport { CellProps } from '../Cell';\nimport styles from './CellCheckbox.module.css';\n\nconst CheckBoxOn = () => (\n  <AdaptiveIconRenderer IconCompact={Icon20CheckBoxOn} IconRegular={Icon24CheckBoxOn} />\n);\n\nconst CheckBoxOff = () => (\n  <AdaptiveIconRenderer IconCompact={Icon20CheckBoxOff} IconRegular={Icon24CheckBoxOff} />\n);\n\nfunction useTypeIcon(type: NonNullable<CellCheckboxProps['type']>) {\n  const platform = usePlatform();\n\n  if (type !== 'auto') {\n    return type;\n  }\n\n  if (platform === Platform.IOS || platform === Platform.VKCOM) {\n    return 'circle';\n  }\n\n  return 'square';\n}\n\nexport interface CellCheckboxProps\n  extends Pick<CellProps, 'defaultChecked' | 'checked'>,\n    React.InputHTMLAttributes<HTMLInputElement>,\n    HasRootRef<HTMLSpanElement>,\n    HasRef<HTMLInputElement> {\n  /**\n   * Вид чекбокса. Если auto, то зависит от платформы.\n   */\n  type?: 'auto' | 'circle' | 'square';\n}\n\nexport const CellCheckbox = ({\n  getRootRef,\n  getRef,\n  className,\n  style,\n  type = 'auto',\n  ...restProps\n}: CellCheckboxProps) => {\n  const typeIcon = useTypeIcon(type);\n\n  const IconOff = typeIcon === 'circle' ? Icon24CheckCircleOff : CheckBoxOff;\n  const IconOn = typeIcon === 'circle' ? Icon24CheckCircleOn : CheckBoxOn;\n\n  return (\n    <span className={classNames(styles['CellCheckbox'], className)} style={style} ref={getRootRef}>\n      <VisuallyHidden\n        {...restProps}\n        Component=\"input\"\n        type=\"checkbox\"\n        className={styles['CellCheckbox__input']}\n        getRootRef={getRef}\n      />\n      <span\n        className={classNames(styles['CellCheckbox__icon'], styles['CellCheckbox__icon--off'])}\n        aria-hidden\n      >\n        <IconOff />\n      </span>\n      <span\n        className={classNames(styles['CellCheckbox__icon'], styles['CellCheckbox__icon--on'])}\n        aria-hidden\n      >\n        <IconOn />\n      </span>\n    </span>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}