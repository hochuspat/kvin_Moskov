{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport { useAdaptivityConditionalRender } from \"../../hooks/useAdaptivityConditionalRender\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { SizeType } from \"../../lib/adaptivity\";\nimport { Platform } from \"../../lib/platform\";\nimport { useConfigProvider } from \"../ConfigProvider/ConfigProviderContext\";\nimport { FixedLayout } from \"../FixedLayout/FixedLayout\";\nimport { ModalRootContext } from \"../ModalRoot/ModalRootContext\";\nimport { RootComponent } from \"../RootComponent/RootComponent\";\nimport { Separator } from \"../Separator/Separator\";\nimport { Spacing } from \"../Spacing/Spacing\";\nimport { TooltipContainer } from \"../Tooltip/TooltipContainer\";\nimport { Text } from \"../Typography/Text/Text\";\nimport { LegacyPanelHeaderContent } from \"./LegacyPanelHeaderContent\";\nvar platformClassNames = {\n  ios: classNames(\"vkuiPanelHeader--ios\", \"vkuiInternalPanelHeader--ios\"),\n  android: classNames(\"vkuiPanelHeader--android\", \"vkuiInternalPanelHeader--android\"),\n  vkcom: classNames(\"vkuiPanelHeader--vkcom\", \"vkuiInternalPanelHeader--vkcom\")\n};\nvar sizeXClassNames = {\n  none: \"vkuiPanelHeader--sizeX-none\",\n  regular: \"vkuiPanelHeader--sizeX-regular\"\n};\n\nvar PanelHeaderIn = function (param) {\n  var before = param.before,\n      after = param.after,\n      separator = param.separator,\n      children = param.children,\n      _param_typographyProps = param.typographyProps,\n      typographyProps = _param_typographyProps === void 0 ? {} : _param_typographyProps;\n\n  var _typographyProps_Component = typographyProps.Component,\n      Component = _typographyProps_Component === void 0 ? \"span\" : _typographyProps_Component,\n      restProps = _object_without_properties(typographyProps, [\"Component\"]);\n\n  var _useConfigProvider = useConfigProvider(),\n      hasCustomPanelHeaderAfter = _useConfigProvider.hasCustomPanelHeaderAfter,\n      customPanelHeaderAfterMinWidth = _useConfigProvider.customPanelHeaderAfterMinWidth;\n\n  var isInsideModal = React.useContext(ModalRootContext).isInsideModal;\n  var platform = usePlatform();\n  var afterSlotProps = !hasCustomPanelHeaderAfter || isInsideModal ? {\n    children: after\n  } : {\n    style: {\n      minWidth: customPanelHeaderAfterMinWidth\n    }\n  };\n  var typographyNode; // TODO [>=6]: Удалить условие\n\n  if ( /*#__PURE__*/React.isValidElement(children) && // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  children.type.displayName === LegacyPanelHeaderContent.displayName) {\n    typographyNode = children;\n  } else {\n    typographyNode = platform === Platform.VKCOM ? /*#__PURE__*/React.createElement(Text, _object_spread({\n      weight: \"2\",\n      Component: Component\n    }, restProps), children) : /*#__PURE__*/React.createElement(Component, _object_spread({\n      className: \"vkuiPanelHeader__content-in\"\n    }, restProps), children);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TooltipContainer, {\n    fixed: true,\n    className: \"vkuiPanelHeader__in\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(\"vkuiPanelHeader__before\", \"vkuiInternalPanelHeader__before\")\n  }, before), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiPanelHeader__content\"\n  }, typographyNode), /*#__PURE__*/React.createElement(\"div\", _object_spread({\n    className: classNames(\"vkuiPanelHeader__after\", \"vkuiInternalPanelHeader__after\")\n  }, afterSlotProps))), separator && platform === Platform.VKCOM && /*#__PURE__*/React.createElement(Separator, {\n    className: \"vkuiPanelHeader__separator\",\n    wide: true\n  }));\n};\n/**\n * @see https://vkcom.github.io/VKUI/#/PanelHeader\n */\n\n\nexport var PanelHeader = function (_param) {\n  var before = _param.before,\n      children = _param.children,\n      after = _param.after,\n      _param_separator = _param.separator,\n      separator = _param_separator === void 0 ? true : _param_separator,\n      _param_visor = _param.visor,\n      visor = _param_visor === void 0 ? true : _param_visor,\n      _param_transparent = _param.transparent,\n      transparent = _param_transparent === void 0 ? false : _param_transparent,\n      shadow = _param.shadow,\n      getRef = _param.getRef,\n      getRootRef = _param.getRootRef,\n      fixed = _param.fixed,\n      typographyProps = _param.typographyProps,\n      restProps = _object_without_properties(_param, [\"before\", \"children\", \"after\", \"separator\", \"visor\", \"transparent\", \"shadow\", \"getRef\", \"getRootRef\", \"fixed\", \"typographyProps\"]);\n\n  var platform = usePlatform();\n\n  var _useAdaptivity = useAdaptivity(),\n      _useAdaptivity_sizeX = _useAdaptivity.sizeX,\n      sizeX = _useAdaptivity_sizeX === void 0 ? \"none\" : _useAdaptivity_sizeX;\n\n  var _useAdaptivityConditionalRender = useAdaptivityConditionalRender(),\n      adaptiveSizeX = _useAdaptivityConditionalRender.sizeX;\n\n  var isFixed = fixed !== undefined ? fixed : platform !== Platform.VKCOM;\n  return /*#__PURE__*/React.createElement(RootComponent, _object_spread_props(_object_spread({}, restProps), {\n    baseClassName: classNames(\"vkuiPanelHeader\", \"vkuiInternalPanelHeader\", platformClassNames.hasOwnProperty(platform) ? platformClassNames[platform] : platformClassNames.android, transparent && \"vkuiPanelHeader--trnsp\", shadow && \"vkuiPanelHeader--shadow\", visor && classNames(\"vkuiPanelHeader--vis\", \"vkuiInternalPanelHeader--vis\"), separator && visor && classNames(\"vkuiPanelHeader--sep\", \"vkuiInternalPanelHeader--sep\"), !before && classNames(\"vkuiPanelHeader--no-before\", \"vkuiInternalPanelHeader--no-before\"), !after && \"vkuiPanelHeader--no-after\", isFixed && \"vkuiPanelHeader--fixed\", sizeX !== SizeType.COMPACT && sizeXClassNames[sizeX]),\n    getRootRef: isFixed ? getRootRef : getRef\n  }), isFixed ? /*#__PURE__*/React.createElement(FixedLayout, {\n    className: classNames(\"vkuiPanelHeader__fixed\", \"vkuiInternalPanelHeader__fixed\"),\n    vertical: \"top\",\n    getRootRef: getRef\n  }, /*#__PURE__*/React.createElement(PanelHeaderIn, {\n    before: before,\n    after: after,\n    separator: separator,\n    typographyProps: typographyProps\n  }, children)) : /*#__PURE__*/React.createElement(PanelHeaderIn, {\n    before: before,\n    after: after,\n    separator: separator,\n    typographyProps: typographyProps\n  }, children), separator && visor && platform !== Platform.VKCOM && /*#__PURE__*/React.createElement(React.Fragment, null, adaptiveSizeX.compact && /*#__PURE__*/React.createElement(Separator, {\n    className: adaptiveSizeX.compact.className\n  }), adaptiveSizeX.regular && /*#__PURE__*/React.createElement(Spacing, {\n    className: adaptiveSizeX.regular.className,\n    size: 16\n  })));\n};\nPanelHeader.Content = LegacyPanelHeaderContent;","map":{"version":3,"mappings":"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","names":["React","classNames","useAdaptivity","useAdaptivityConditionalRender","usePlatform","SizeType","Platform","useConfigProvider","FixedLayout","ModalRootContext","RootComponent","Separator","Spacing","TooltipContainer","Text","LegacyPanelHeaderContent","platformClassNames","ios","android","vkcom","sizeXClassNames","none","regular","PanelHeaderIn","before","after","separator","children","typographyProps","_param_typographyProps","Component","_typographyProps_Component","restProps","hasCustomPanelHeaderAfter","customPanelHeaderAfterMinWidth","isInsideModal","useContext","platform","afterSlotProps","style","minWidth","typographyNode","isValidElement","type","displayName","VKCOM","weight","className","Fragment","fixed","div","wide","PanelHeader","_param_separator","_param_visor","visor","_param_transparent","transparent","shadow","getRef","getRootRef","sizeX","_useAdaptivity_sizeX","adaptiveSizeX","isFixed","undefined","baseClassName","hasOwnProperty","COMPACT","vertical","compact","size","Content"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\components\\PanelHeader\\PanelHeader.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { useAdaptivityConditionalRender } from '../../hooks/useAdaptivityConditionalRender';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { SizeType } from '../../lib/adaptivity';\nimport { Platform } from '../../lib/platform';\nimport { HasComponent, HasDataAttribute, HasRef, HTMLAttributesWithRootRef } from '../../types';\nimport { useConfigProvider } from '../ConfigProvider/ConfigProviderContext';\nimport { FixedLayout } from '../FixedLayout/FixedLayout';\nimport { ModalRootContext } from '../ModalRoot/ModalRootContext';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport { Separator } from '../Separator/Separator';\nimport { Spacing } from '../Spacing/Spacing';\nimport { TooltipContainer } from '../Tooltip/TooltipContainer';\nimport { Text } from '../Typography/Text/Text';\nimport { LegacyPanelHeaderContent } from './LegacyPanelHeaderContent';\nimport styles from './PanelHeader.module.css';\n\nconst platformClassNames = {\n  ios: classNames(styles['PanelHeader--ios'], 'vkuiInternalPanelHeader--ios'),\n  android: classNames(styles['PanelHeader--android'], 'vkuiInternalPanelHeader--android'),\n  vkcom: classNames(styles['PanelHeader--vkcom'], 'vkuiInternalPanelHeader--vkcom'),\n};\n\nconst sizeXClassNames = {\n  none: styles['PanelHeader--sizeX-none'],\n  regular: styles['PanelHeader--sizeX-regular'],\n};\n\nexport interface PanelHeaderProps\n  extends HTMLAttributesWithRootRef<HTMLDivElement>,\n    HasRef<HTMLDivElement> {\n  before?: React.ReactNode;\n  /**\n   * Добавляет элемент справа.\n   *\n   * При передаче нескольких элементов, расставляет отступы между ними.\n   */\n  after?: React.ReactNode;\n  separator?: boolean;\n  transparent?: boolean;\n  shadow?: boolean;\n  /**\n   * Если `false`, то шапка будет нулевой высоты и контент панели \"залезет\" под неё\n   */\n  visor?: boolean;\n  /**\n   * Если `false`, то шапка будет в потоке. По умолчанию `true`, но если платформа vkcom, то по умолчанию `false`.\n   */\n  fixed?: boolean;\n  /**\n   * По умолчанию как `Component` используется `span`.\n   */\n  typographyProps?: HasComponent & React.HTMLAttributes<HTMLElement> & HasDataAttribute;\n}\n\nconst PanelHeaderIn = ({\n  before,\n  after,\n  separator,\n  children,\n  typographyProps = {},\n}: PanelHeaderProps) => {\n  const { Component = 'span', ...restProps } = typographyProps;\n  const { hasCustomPanelHeaderAfter, customPanelHeaderAfterMinWidth } = useConfigProvider();\n  const { isInsideModal } = React.useContext(ModalRootContext);\n  const platform = usePlatform();\n\n  const afterSlotProps =\n    !hasCustomPanelHeaderAfter || isInsideModal\n      ? {\n          children: after,\n        }\n      : {\n          style: { minWidth: customPanelHeaderAfterMinWidth },\n        };\n  let typographyNode: React.ReactNode;\n\n  // TODO [>=6]: Удалить условие\n  if (\n    React.isValidElement(children) &&\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    (children as JSX.Element).type.displayName === LegacyPanelHeaderContent.displayName\n  ) {\n    typographyNode = children;\n  } else {\n    typographyNode =\n      platform === Platform.VKCOM ? (\n        <Text weight=\"2\" Component={Component} {...restProps}>\n          {children}\n        </Text>\n      ) : (\n        <Component className={styles['PanelHeader__content-in']} {...restProps}>\n          {children}\n        </Component>\n      );\n  }\n\n  return (\n    <React.Fragment>\n      <TooltipContainer fixed className={styles['PanelHeader__in']}>\n        <div\n          className={classNames(styles['PanelHeader__before'], 'vkuiInternalPanelHeader__before')}\n        >\n          {before}\n        </div>\n        <div className={styles['PanelHeader__content']}>{typographyNode}</div>\n        <div\n          className={classNames(styles['PanelHeader__after'], 'vkuiInternalPanelHeader__after')}\n          {...afterSlotProps}\n        />\n      </TooltipContainer>\n      {separator && platform === Platform.VKCOM && (\n        <Separator className={styles['PanelHeader__separator']} wide />\n      )}\n    </React.Fragment>\n  );\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/PanelHeader\n */\nexport const PanelHeader = ({\n  before,\n  children,\n  after,\n  separator = true,\n  visor = true,\n  transparent = false,\n  shadow,\n  getRef,\n  getRootRef,\n  fixed,\n  typographyProps,\n  ...restProps\n}: PanelHeaderProps) => {\n  const platform = usePlatform();\n  const { sizeX = 'none' } = useAdaptivity();\n  const { sizeX: adaptiveSizeX } = useAdaptivityConditionalRender();\n  let isFixed = fixed !== undefined ? fixed : platform !== Platform.VKCOM;\n\n  return (\n    <RootComponent\n      {...restProps}\n      baseClassName={classNames(\n        styles['PanelHeader'],\n        'vkuiInternalPanelHeader',\n        platformClassNames.hasOwnProperty(platform)\n          ? platformClassNames[platform]\n          : platformClassNames.android,\n        transparent && styles['PanelHeader--trnsp'],\n        shadow && styles['PanelHeader--shadow'],\n        visor && classNames(styles['PanelHeader--vis'], 'vkuiInternalPanelHeader--vis'),\n        separator &&\n          visor &&\n          classNames(styles['PanelHeader--sep'], 'vkuiInternalPanelHeader--sep'),\n        !before &&\n          classNames(styles['PanelHeader--no-before'], 'vkuiInternalPanelHeader--no-before'),\n        !after && styles['PanelHeader--no-after'],\n        isFixed && styles['PanelHeader--fixed'],\n        sizeX !== SizeType.COMPACT && sizeXClassNames[sizeX],\n      )}\n      getRootRef={isFixed ? getRootRef : getRef}\n    >\n      {isFixed ? (\n        <FixedLayout\n          className={classNames(styles['PanelHeader__fixed'], 'vkuiInternalPanelHeader__fixed')}\n          vertical=\"top\"\n          getRootRef={getRef}\n        >\n          <PanelHeaderIn\n            before={before}\n            after={after}\n            separator={separator}\n            typographyProps={typographyProps}\n          >\n            {children}\n          </PanelHeaderIn>\n        </FixedLayout>\n      ) : (\n        <PanelHeaderIn\n          before={before}\n          after={after}\n          separator={separator}\n          typographyProps={typographyProps}\n        >\n          {children}\n        </PanelHeaderIn>\n      )}\n      {separator && visor && platform !== Platform.VKCOM && (\n        <React.Fragment>\n          {adaptiveSizeX.compact && <Separator className={adaptiveSizeX.compact.className} />}\n          {adaptiveSizeX.regular && (\n            <Spacing className={adaptiveSizeX.regular.className} size={16} />\n          )}\n        </React.Fragment>\n      )}\n    </RootComponent>\n  );\n};\n\nPanelHeader.Content = LegacyPanelHeaderContent;\n"]},"metadata":{},"sourceType":"module"}