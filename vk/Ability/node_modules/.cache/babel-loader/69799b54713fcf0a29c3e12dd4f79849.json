{"ast":null,"code":"import { canUseDOM } from \"./dom\";\nexport function animate(param) {\n  var duration = param.duration,\n      timing = param.timing,\n      draw = param.draw,\n      _param_animationQueue = param.animationQueue,\n      animationQueue = _param_animationQueue === void 0 ? [] : _param_animationQueue;\n\n  if (!canUseDOM) {\n    return;\n  }\n\n  var start;\n  requestAnimationFrame(function animate(time) {\n    if (!start) {\n      start = time;\n    }\n\n    var timeFraction = Math.min((time - start) / duration, 1);\n    var progress = timing(timeFraction);\n    draw(progress);\n\n    if (timeFraction < 1) {\n      requestAnimationFrame(animate);\n      return;\n    }\n\n    animationQueue.shift();\n\n    if (animationQueue.length > 0) {\n      animationQueue[0]();\n    }\n  });\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AAoBA,OAAO,SAASC,OAAT,CAAiBC,KAAjB,EAKqB;MAJ1BC,WADsBD,MACtBC;MACAC,SAFsBF,MAEtBE;MACAC,OAHsBH,MAGtBG;MAAAA,wBAHsBH,MAItBI;MAAAA,oDAAiB,EAAjBA,GAAmBC;;EAEnB,IAAI,CAACP,SAAL,EAAgB;IACd;EACF;;EAEA,IAAIQ,KAAJ;EAEAC,sBAAsB,SAASR,OAAT,CAAiBS,IAAjB,EAA6B;IACjD,IAAI,CAACF,KAAL,EAAY;MACVA,QAAQE,IAARF;IACF;;IACA,IAAIG,eAAeC,KAAKC,GAALD,CAAS,CAACF,OAAOF,KAAR,IAAiBL,QAA1BS,EAAoC,CAApCA,CAAnB;IAEA,IAAME,WAAWV,OAAOO,YAAPP,CAAjB;IAEAC,KAAKS,QAALT;;IAEA,IAAIM,eAAe,CAAnB,EAAsB;MACpBF,sBAAsBR,OAAtBQ;MACA;IACF;;IACAH,eAAeS,KAAfT;;IACA,IAAIA,eAAeU,MAAfV,GAAwB,CAA5B,EAA+B;MAC7BA,cAAc,CAAC,CAAD,CAAdA;IACF;EACF,CAlBAG;AAmBF","names":["canUseDOM","animate","param","duration","timing","draw","animationQueue","_param_animationQueue","start","requestAnimationFrame","time","timeFraction","Math","min","progress","shift","length"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\lib\\animate.ts"],"sourcesContent":["import { canUseDOM } from './dom';\n\n/**\n * Функция для js анимации\n * @param {number} duration\n * @param {function} timing тайминг функция анимации\n * @param {function} draw коллбэк, в который прокидывается прогресс [0, 1]\n * @returns {void}\n */\nexport type TimingInterface = (timeFraction: number) => number;\n\nexport type DrawInterface = (progress: number) => void;\n\nexport interface AnimateArgumentsInterface {\n  duration: number;\n  timing: TimingInterface;\n  draw: DrawInterface;\n  animationQueue: VoidFunction[];\n}\n\nexport function animate({\n  duration,\n  timing,\n  draw,\n  animationQueue = [],\n}: AnimateArgumentsInterface): void {\n  if (!canUseDOM) {\n    return;\n  }\n\n  let start: number;\n\n  requestAnimationFrame(function animate(time: number): void {\n    if (!start) {\n      start = time;\n    }\n    let timeFraction = Math.min((time - start) / duration, 1);\n\n    const progress = timing(timeFraction);\n\n    draw(progress);\n\n    if (timeFraction < 1) {\n      requestAnimationFrame(animate);\n      return;\n    }\n    animationQueue.shift();\n    if (animationQueue.length > 0) {\n      animationQueue[0]();\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}