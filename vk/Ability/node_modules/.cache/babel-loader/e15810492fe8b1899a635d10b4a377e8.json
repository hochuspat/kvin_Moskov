{"ast":null,"code":"import { _ as _type_of } from \"@swc/helpers/_/_type_of\";\nexport function classNames() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var result = [];\n  args.forEach(function (item) {\n    if (!item) {\n      return;\n    }\n\n    switch (typeof item === \"undefined\" ? \"undefined\" : _type_of(item)) {\n      case \"string\":\n        result.push(item);\n        break;\n\n      case \"object\":\n        Object.keys(item).forEach(function (key) {\n          if (item[key]) {\n            result.push(key);\n          }\n        });\n        break;\n\n      default:\n        result.push(\"\".concat(item));\n    }\n  });\n  return result.join(\" \");\n}","map":{"version":3,"mappings":";AAMA,OAAO,SAASA,UAAT,GAASA;EAAW,sCAAGC,GAAH;IAAGA,KAAHC,IAAGD,IAAHE,eAAGF;;;EAC5B,IAAMG,SAAmB,EAAzB;EAEAH,KAAKI,OAALJ,CAAa,UAACK,IAAD,EAACA;IACZ,IAAI,CAACA,IAAL,EAAW;MACT;IACF;;IAEA,QAAQ,OAAOA,IAAP,KAAOA,WAAP,GAAOA,WAAP,YAAOA,IAAP,CAAR;MACE,KAAK,QAAL;QACEF,OAAOG,IAAPH,CAAYE,IAAZF;QACA;;MAEF,KAAK,QAAL;QACEI,OAAOC,IAAPD,CAAYF,IAAZE,EAAkBH,OAAlBG,CAA0B,UAACE,GAAD,EAACA;UACzB,IAAIJ,IAAI,CAACI,GAAD,CAAR,EAAe;YACbN,OAAOG,IAAPH,CAAYM,GAAZN;UACF;QACF,CAJAI;QAKA;;MAEF;QACEJ,OAAOG,IAAPH,CAAY,GAAQO,MAAR,CAAGL,IAAH,CAAZF;IAdJ;EAgBF,CArBAH;EAuBA,OAAOG,OAAOQ,IAAPR,CAAY,GAAZA,CAAP;AACF","names":["classNames","args","_key","arguments","result","forEach","item","push","Object","keys","key","concat","join"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkjs\\src\\classNames.ts"],"sourcesContent":["interface ClassNamesDictionary {\n  [index: string]: boolean | undefined | null;\n}\n\ntype ClassName = string | number | ClassNamesDictionary | boolean | undefined | null;\n\nexport function classNames(...args: ClassName[]): string {\n  const result: string[] = [];\n\n  args.forEach((item): void => {\n    if (!item) {\n      return;\n    }\n\n    switch (typeof item) {\n      case 'string':\n        result.push(item);\n        break;\n\n      case 'object':\n        Object.keys(item).forEach((key: string) => {\n          if (item[key]) {\n            result.push(key);\n          }\n        });\n        break;\n\n      default:\n        result.push(`${item}`);\n    }\n  });\n\n  return result.join(' ');\n}\n"]},"metadata":{},"sourceType":"module"}