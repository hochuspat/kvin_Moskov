{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { _ as _sliced_to_array } from \"@swc/helpers/_/_sliced_to_array\";\nimport * as React from \"react\";\nimport { clamp } from \"../../helpers/math\";\nimport { useIsClient } from \"../../hooks/useIsClient\";\nimport { BaseGallery } from \"../BaseGallery/BaseGallery\";\nimport { CarouselBase } from \"../BaseGallery/CarouselBase/CarouselBase\";\nimport { useAutoPlay } from \"./hooks\";\n/**\n * @see https://vkcom.github.io/VKUI/#/Gallery\n */\n\nexport var Gallery = function (_param) {\n  var _param_initialSlideIndex = _param.initialSlideIndex,\n      initialSlideIndex = _param_initialSlideIndex === void 0 ? 0 : _param_initialSlideIndex,\n      children = _param.children,\n      _param_timeout = _param.timeout,\n      timeout = _param_timeout === void 0 ? 0 : _param_timeout,\n      onChange = _param.onChange,\n      bullets = _param.bullets,\n      looped = _param.looped,\n      props = _object_without_properties(_param, [\"initialSlideIndex\", \"children\", \"timeout\", \"onChange\", \"bullets\", \"looped\"]);\n\n  var _React_useState = _sliced_to_array(React.useState(initialSlideIndex), 2),\n      localSlideIndex = _React_useState[0],\n      setSlideIndex = _React_useState[1];\n\n  var isControlled = typeof props.slideIndex === \"number\";\n\n  var _props_slideIndex;\n\n  var slideIndex = isControlled ? (_props_slideIndex = props.slideIndex) !== null && _props_slideIndex !== void 0 ? _props_slideIndex : 0 : localSlideIndex;\n  var isDraggable = !isControlled || Boolean(onChange);\n  var slides = React.useMemo(function () {\n    return React.Children.toArray(children).filter(function (item) {\n      return Boolean(item);\n    });\n  }, [children]);\n  var childCount = slides.length;\n  var isClient = useIsClient();\n  var handleChange = React.useCallback(function (current) {\n    if (current === slideIndex) {\n      return;\n    }\n\n    !isControlled && setSlideIndex(current);\n    onChange && onChange(current);\n  }, [isControlled, onChange, slideIndex]);\n  useAutoPlay(timeout, slideIndex, function () {\n    return handleChange((slideIndex + 1) % childCount);\n  }); // prevent invalid slideIndex\n  // any slide index is invalid with no slides, just keep it as is\n\n  var safeSlideIndex = childCount > 0 ? clamp(slideIndex, 0, childCount - 1) : slideIndex; // notify parent in controlled mode\n\n  React.useEffect(function () {\n    if (onChange && safeSlideIndex !== slideIndex) {\n      onChange(safeSlideIndex);\n    }\n\n    setSlideIndex(safeSlideIndex);\n  }, [onChange, safeSlideIndex, slideIndex]);\n\n  if (!isClient) {\n    return null;\n  }\n\n  var Component = looped ? CarouselBase : BaseGallery;\n  return /*#__PURE__*/React.createElement(Component, _object_spread_props(_object_spread({\n    isDraggable: isDraggable\n  }, props), {\n    bullets: childCount > 0 && bullets,\n    slideIndex: safeSlideIndex,\n    onChange: handleChange\n  }), slides);\n};","map":{"version":3,"mappings":";;;;AAAA,YAAYA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,YAAT,QAA6B,0CAA7B;AAEA,SAASC,WAAT,QAA4B,SAA5B;AASA;;;;AAGA,OAAO,IAAMC,UAAU;wCACrBC;MAAAA,0DAAoB,CAApBA,GAAoBC;MACpBC;MAAAA,wBACAC;MAAAA,sCAAU,CAAVA,GAAUC;MACVC;MACAC;MACAC;MACGC,4CANHR,mBAMGQ,EALHN,UAKGM,EAJHL,SAIGK,EAHHH,UAGGG,EAFHF,SAEGE,EADHD,QACGC;;EAEH,IAAyCf,yCAAMgB,QAANhB,CAAeO,iBAAfP,GAAeO,CAAfP,CAAzC;EAAA,IAAOiB,kBAAkCjB,kBAAzC;EAAA,IAAwBkB,gBAAiBlB,kBAAzC;;EACA,IAAMmB,eAAe,OAAOJ,MAAMK,UAAb,KAA4B,QAAjD;;MACkCL;;EAAlC,IAAMK,aAAaD,eAAeJ,2BAAMK,UAANL,MAAgB,IAAhBA,uDAAoB,CAAnCI,GAAuCF,eAA1D;EACA,IAAMI,cAAc,CAACF,YAAD,IAAiBG,QAAQV,QAARU,CAArC;EACA,IAAMC,SAASvB,MAAMwB,OAANxB,CACb;WAAMA,MAAMyB,QAANzB,CAAe0B,OAAf1B,CAAuBS,QAAvBT,EAAiC2B,MAAjC3B,CAAwC,UAAC4B,IAAD,EAACA;aAASN,QAAQM,IAARN;KAAlDtB;GADOA,EAEb,CAACS,QAAD,CAFaT,CAAf;EAIA,IAAM6B,aAAaN,OAAOO,MAA1B;EACA,IAAMC,WAAW7B,aAAjB;EAEA,IAAM8B,eAAyChC,MAAMiC,WAANjC,CAC7C,UAACkC,OAAD,EAACA;IACC,IAAIA,YAAYd,UAAhB,EAA4B;MAC1B;IACF;;IACA,CAACD,YAAD,IAAiBD,cAAcgB,OAAdhB,CAAjB;IACAN,YAAYA,SAASsB,OAATtB,CAAZA;EACF,CAP6CZ,EAQ7C,CAACmB,YAAD,EAAeP,QAAf,EAAyBQ,UAAzB,CAR6CpB,CAA/C;EAWAK,YAAYK,OAAZL,EAAqBe,UAArBf,EAAiC;WAAM2B,aAAa,CAACZ,aAAa,CAAd,IAAmBS,UAAhCG;GAAvC3B,EA/BqB,CAiCrB;EACA;;EACA,IAAM8B,iBAAiBN,aAAa,CAAbA,GAAiB5B,MAAMmB,UAANnB,EAAkB,CAAlBA,EAAqB4B,aAAa,CAAlC5B,CAAjB4B,GAAwDT,UAA/E,CAnCqB,CAoCrB;;EACApB,MAAMoC,SAANpC,CAAgB;IACd,IAAIY,YAAYuB,mBAAmBf,UAAnC,EAA+C;MAC7CR,SAASuB,cAATvB;IACF;;IACAM,cAAciB,cAAdjB;EACF,CALAlB,EAKG,CAACY,QAAD,EAAWuB,cAAX,EAA2Bf,UAA3B,CALHpB;;EAOA,IAAI,CAAC+B,QAAL,EAAe;IACb,OAAO,IAAP;EACF;;EAEA,IAAMM,YAAYvB,SAASV,YAATU,GAAwBX,WAA1C;EAEA,oBACEH,oBAACqC,SAAD,EAACA;IACChB,aAAaA;EADdgB,GAEKtB,KAFLsB,GAEKtB;IACJF,SAASgB,aAAa,CAAbA,IAAkBhB,OADvBE;IAEJK,YAAYe,cAFRpB;IAGJH,UAAUoB;EAHNjB,CAFLsB,CAAD,EAOGd,MAPH,CADF;AAWF,CA7DO","names":["React","clamp","useIsClient","BaseGallery","CarouselBase","useAutoPlay","Gallery","initialSlideIndex","_param_initialSlideIndex","children","timeout","_param_timeout","onChange","bullets","looped","props","useState","localSlideIndex","setSlideIndex","isControlled","slideIndex","isDraggable","Boolean","slides","useMemo","Children","toArray","filter","item","childCount","length","isClient","handleChange","useCallback","current","safeSlideIndex","useEffect","Component"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\components\\Gallery\\Gallery.tsx"],"sourcesContent":["import * as React from 'react';\nimport { clamp } from '../../helpers/math';\nimport { useIsClient } from '../../hooks/useIsClient';\nimport { BaseGallery } from '../BaseGallery/BaseGallery';\nimport { CarouselBase } from '../BaseGallery/CarouselBase/CarouselBase';\nimport { BaseGalleryProps } from '../BaseGallery/types';\nimport { useAutoPlay } from './hooks';\n\nexport interface GalleryProps extends BaseGalleryProps {\n  initialSlideIndex?: number;\n  timeout?: number;\n  // Отвечает за зацикливание слайдов\n  looped?: boolean;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Gallery\n */\nexport const Gallery = ({\n  initialSlideIndex = 0,\n  children,\n  timeout = 0,\n  onChange,\n  bullets,\n  looped,\n  ...props\n}: GalleryProps) => {\n  const [localSlideIndex, setSlideIndex] = React.useState(initialSlideIndex);\n  const isControlled = typeof props.slideIndex === 'number';\n  const slideIndex = isControlled ? props.slideIndex ?? 0 : localSlideIndex;\n  const isDraggable = !isControlled || Boolean(onChange);\n  const slides = React.useMemo(\n    () => React.Children.toArray(children).filter((item) => Boolean(item)),\n    [children],\n  );\n  const childCount = slides.length;\n  const isClient = useIsClient();\n\n  const handleChange: GalleryProps['onChange'] = React.useCallback(\n    (current: number) => {\n      if (current === slideIndex) {\n        return;\n      }\n      !isControlled && setSlideIndex(current);\n      onChange && onChange(current);\n    },\n    [isControlled, onChange, slideIndex],\n  );\n\n  useAutoPlay(timeout, slideIndex, () => handleChange((slideIndex + 1) % childCount));\n\n  // prevent invalid slideIndex\n  // any slide index is invalid with no slides, just keep it as is\n  const safeSlideIndex = childCount > 0 ? clamp(slideIndex, 0, childCount - 1) : slideIndex;\n  // notify parent in controlled mode\n  React.useEffect(() => {\n    if (onChange && safeSlideIndex !== slideIndex) {\n      onChange(safeSlideIndex);\n    }\n    setSlideIndex(safeSlideIndex);\n  }, [onChange, safeSlideIndex, slideIndex]);\n\n  if (!isClient) {\n    return null;\n  }\n\n  const Component = looped ? CarouselBase : BaseGallery;\n\n  return (\n    <Component\n      isDraggable={isDraggable}\n      {...props}\n      bullets={childCount > 0 && bullets}\n      slideIndex={safeSlideIndex}\n      onChange={handleChange}\n    >\n      {slides}\n    </Component>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}