{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { _ as _sliced_to_array } from \"@swc/helpers/_/_sliced_to_array\";\nimport * as React from \"react\";\nimport { classNames, noop } from \"@vkontakte/vkjs\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { usePrevious } from \"../../hooks/usePrevious\";\nimport { useTimeout } from \"../../hooks/useTimeout\";\nimport { useWaitTransitionFinish } from \"../../hooks/useWaitTransitionFinish\";\nimport { blurActiveElement, canUseDOM, useDOM } from \"../../lib/dom\";\nimport { getNavId } from \"../../lib/getNavId\";\nimport { Platform } from \"../../lib/platform\";\nimport { animationEvent } from \"../../lib/supportEvents\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { useScroll } from \"../AppRoot/ScrollContext\";\nimport { useConfigProvider } from \"../ConfigProvider/ConfigProviderContext\";\nimport { NavViewIdContext } from \"../NavIdContext/NavIdContext\";\nimport { NavTransitionProvider } from \"../NavTransitionContext/NavTransitionContext\";\nimport { NavTransitionDirectionProvider } from \"../NavTransitionDirectionContext/NavTransitionDirectionContext\";\nimport { useSplitCol } from \"../SplitCol/SplitColContext\";\nimport { Touch } from \"../Touch/Touch\";\nimport { getSwipeBackPredicates, hasHorizontalScrollableElementWithScrolledToLeft, swipeBackExcluded } from \"./utils\";\nvar SwipeBackResults;\n\n(function (SwipeBackResults) {\n  SwipeBackResults[SwipeBackResults[\"fail\"] = 1] = \"fail\";\n  SwipeBackResults[SwipeBackResults[\"success\"] = 2] = \"success\";\n})(SwipeBackResults || (SwipeBackResults = {}));\n\nexport var scrollsCache = {};\nvar warn = warnOnce(\"View\");\n/**\n * @see https://vkcom.github.io/VKUI/#/View\n */\n\nexport var View = function (_param) {\n  var activePanelProp = _param.activePanel,\n      history = _param.history,\n      nav = _param.nav,\n      onTransition = _param.onTransition,\n      onSwipeBack = _param.onSwipeBack,\n      onSwipeBackStart = _param.onSwipeBackStart,\n      onSwipeBackCancelProp = _param.onSwipeBackCancel,\n      children = _param.children,\n      className = _param.className,\n      restProps = _object_without_properties(_param, [\"activePanel\", \"history\", \"nav\", \"onTransition\", \"onSwipeBack\", \"onSwipeBackStart\", \"onSwipeBackCancel\", \"children\", \"className\"]);\n\n  var id = getNavId({\n    nav: nav,\n    id: restProps.id\n  });\n  var scrolls = React.useRef(scrollsCache[id] || {});\n  var afterTransition = React.useRef(noop);\n  React.useEffect(function () {\n    return function () {\n      if (id) {\n        scrollsCache[id] = scrolls.current;\n      }\n    };\n  });\n  var panelNodes = React.useRef({});\n\n  var _useDOM = useDOM(),\n      window = _useDOM.window,\n      document = _useDOM.document;\n\n  var scroll = useScroll();\n  var configProvider = useConfigProvider();\n  var splitCol = useSplitCol();\n  var platform = usePlatform();\n\n  var _React_useState = _sliced_to_array(React.useState(false), 2),\n      animated = _React_useState[0],\n      setAnimated = _React_useState[1];\n\n  var _React_useState1 = _sliced_to_array(React.useState([activePanelProp]), 2),\n      visiblePanels = _React_useState1[0],\n      setVisiblePanels = _React_useState1[1];\n\n  var _React_useState2 = _sliced_to_array(React.useState(activePanelProp), 2),\n      activePanel = _React_useState2[0],\n      setActivePanel = _React_useState2[1];\n\n  var _React_useState3 = _sliced_to_array(React.useState(undefined), 2),\n      isBack = _React_useState3[0],\n      setIsBack = _React_useState3[1];\n\n  var _React_useState4 = _sliced_to_array(React.useState(null), 2),\n      prevPanel = _React_useState4[0],\n      setPrevPanel = _React_useState4[1];\n\n  var _React_useState5 = _sliced_to_array(React.useState(null), 2),\n      nextPanel = _React_useState5[0],\n      setNextPanel = _React_useState5[1];\n\n  var swipeBackPrevented = React.useRef(false);\n\n  var _React_useState6 = _sliced_to_array(React.useState(undefined), 2),\n      swipingBack = _React_useState6[0],\n      setSwipingBack = _React_useState6[1];\n\n  var _React_useState7 = _sliced_to_array(React.useState(0), 2),\n      swipeBackStartX = _React_useState7[0],\n      setSwipeBackStartX = _React_useState7[1];\n\n  var _React_useState8 = _sliced_to_array(React.useState(0), 2),\n      swipeBackShift = _React_useState8[0],\n      setSwipeBackShift = _React_useState8[1];\n\n  var _React_useState9 = _sliced_to_array(React.useState(null), 2),\n      swipeBackNextPanel = _React_useState9[0],\n      setSwipeBackNextPanel = _React_useState9[1];\n\n  var _React_useState10 = _sliced_to_array(React.useState(null), 2),\n      swipeBackPrevPanel = _React_useState10[0],\n      setSwipeBackPrevPanel = _React_useState10[1];\n\n  var _React_useState11 = _sliced_to_array(React.useState(null), 2),\n      swipeBackResult = _React_useState11[0],\n      setSwipeBackResult = _React_useState11[1];\n\n  var _React_useState12 = _sliced_to_array(React.useState(false), 2),\n      browserSwipe = _React_useState12[0],\n      setBrowserSwipe = _React_useState12[1];\n\n  var prevActivePanel = usePrevious(activePanelProp);\n  var prevSwipingBack = usePrevious(swipingBack);\n  var prevBrowserSwipe = usePrevious(browserSwipe);\n  var prevSwipeBackResult = usePrevious(swipeBackResult);\n  var prevSwipeBackPrevPanel = usePrevious(swipeBackPrevPanel);\n  var prevOnTransition = usePrevious(onTransition);\n  var panels = React.Children.toArray(children).filter(function (panel) {\n    var panelId = getNavId(panel.props, warn);\n    return panelId !== undefined && visiblePanels.includes(panelId) || panelId === swipeBackPrevPanel || panelId === swipeBackNextPanel;\n  });\n  var disableAnimation = !configProvider.transitionMotionEnabled || !splitCol.animate || platform === Platform.VKCOM;\n  var iOSSwipeBackSimulationEnabled = !disableAnimation && platform === Platform.IOS && configProvider.isWebView && Boolean(onSwipeBack);\n\n  var pickPanel = function (id) {\n    if (id === null) {\n      return null;\n    }\n\n    return panelNodes.current[id];\n  };\n\n  var flushTransition = React.useCallback(function (prevPanel, isBackTransition) {\n    if (isBackTransition) {\n      scrolls.current[prevPanel] = 0;\n    }\n\n    setPrevPanel(null);\n    setNextPanel(null);\n    setVisiblePanels([activePanelProp]);\n    setActivePanel(activePanelProp);\n    setAnimated(false);\n    setIsBack(isBackTransition);\n\n    afterTransition.current = function () {\n      scroll === null || scroll === void 0 ? void 0 : scroll.scrollTo(0, isBackTransition ? scrolls.current[activePanelProp] : 0);\n      onTransition && onTransition({\n        isBack: isBackTransition,\n        from: prevPanel,\n        to: activePanelProp\n      });\n    };\n  }, [activePanelProp, onTransition, scroll]);\n  useIsomorphicLayoutEffect(function () {\n    afterTransition.current();\n    afterTransition.current = noop;\n  }, [afterTransition.current]);\n  var transitionEndHandler = React.useCallback(function (e) {\n    if ((!e || [\"vkuianimation-ios-next-forward\", \"vkuianimation-ios-prev-back\", \"vkuianimation-view-next-forward\", \"vkuianimation-view-prev-back\"].includes(e.animationName)) && prevPanel !== null) {\n      flushTransition(prevPanel, Boolean(isBack));\n    }\n  }, [flushTransition, isBack, prevPanel]);\n  var waitTransitionFinish = useWaitTransitionFinish().waitTransitionFinish;\n  var animationFinishTimeout = useTimeout(transitionEndHandler, platform === Platform.IOS ? 600 : 300);\n  var onSwipeBackSuccess = React.useCallback(function () {\n    onSwipeBack && onSwipeBack();\n  }, [onSwipeBack]);\n  var onSwipeBackCancel = React.useCallback(function () {\n    onSwipeBackCancelProp && onSwipeBackCancelProp();\n    setSwipeBackPrevPanel(null);\n    setSwipeBackNextPanel(null);\n    setSwipingBack(false);\n    setSwipeBackResult(null);\n    setSwipeBackStartX(0);\n    setSwipeBackShift(0);\n  }, [onSwipeBackCancelProp]);\n  var swipingBackTransitionEndHandler = React.useCallback(function (e) {\n    // indexOf because of vendor prefixes in old browsers\n    if (!e || (e === null || e === void 0 ? void 0 : e.propertyName.includes(\"transform\")) && (e === null || e === void 0 ? void 0 : e.target) === pickPanel(swipeBackNextPanel)) {\n      switch (swipeBackResult) {\n        case 1:\n          onSwipeBackCancel();\n          break;\n\n        case 2:\n          onSwipeBackSuccess();\n      }\n    }\n  }, [onSwipeBackCancel, onSwipeBackSuccess, swipeBackNextPanel, swipeBackResult]);\n\n  var handleTouchMoveXForNativeIOSSwipeBackOrSwipeNext = function (event) {\n    if (browserSwipe) {\n      return;\n    }\n\n    var _getSwipeBackPredicates = getSwipeBackPredicates(event.startX, event.shiftX, window.innerWidth),\n        swipeBackTriggered = _getSwipeBackPredicates.swipeBackTriggered,\n        viewportStartEdgeTouched = _getSwipeBackPredicates.viewportStartEdgeTouched,\n        viewportEndEdgeTouched = _getSwipeBackPredicates.viewportEndEdgeTouched;\n\n    if ((viewportStartEdgeTouched || viewportEndEdgeTouched) && swipeBackTriggered) {\n      setBrowserSwipe(true);\n    }\n  };\n\n  var handleTouchMoveXForIOSSwipeBackSimulation = function (event) {\n    if (swipeBackPrevented.current || swipeBackExcluded(event)) {\n      return;\n    }\n\n    var _getSwipeBackPredicates = getSwipeBackPredicates(event.startX, event.shiftX, window.innerWidth),\n        swipedToOpposite = _getSwipeBackPredicates.swipedToOpposite,\n        swipeBackTriggered = _getSwipeBackPredicates.swipeBackTriggered,\n        viewportStartEdgeTouched = _getSwipeBackPredicates.viewportStartEdgeTouched;\n\n    if (animated && swipeBackTriggered) {\n      return;\n    }\n\n    if (!swipingBack && history && history.length > 1) {\n      if (swipedToOpposite) {\n        swipeBackPrevented.current = true;\n        return;\n      }\n\n      if (!swipeBackTriggered) {\n        return;\n      }\n\n      if (!viewportStartEdgeTouched && hasHorizontalScrollableElementWithScrolledToLeft(event.originalEvent.target)) {\n        swipeBackPrevented.current = true;\n        return;\n      } // Начался свайп назад\n\n\n      if (onSwipeBackStart) {\n        var payload = onSwipeBackStart(activePanel);\n\n        if (payload === \"prevent\") {\n          swipeBackPrevented.current = true;\n          return;\n        }\n      }\n\n      if (activePanel !== null) {\n        // Note: вызываем закрытие клавиатуры. В iOS это нативное поведение при свайпе.\n        blurActiveElement(document);\n        scrolls.current[activePanel] = scroll === null || scroll === void 0 ? void 0 : scroll.getScroll().y;\n      }\n\n      setSwipingBack(true);\n      setSwipeBackStartX(event.startX);\n      setSwipeBackPrevPanel(activePanel);\n      setSwipeBackNextPanel(history.slice(-2)[0]);\n    }\n\n    if (swipingBack) {\n      if (event.shiftX < 0) {\n        setSwipeBackShift(0);\n      } else if (event.shiftX > window.innerWidth - swipeBackStartX) {\n        setSwipeBackShift(window.innerWidth);\n      } else {\n        setSwipeBackShift(event.shiftX);\n      }\n    }\n  };\n\n  var handleTouchEndForIOSSwipeBackSimulation = function (event) {\n    swipeBackPrevented.current = false;\n\n    if (swipingBack) {\n      var speed = swipeBackShift / event.duration * 1000;\n\n      var _window_innerWidth;\n\n      if (swipeBackShift === 0) {\n        onSwipeBackCancel();\n      } else if (swipeBackShift >= ((_window_innerWidth = window.innerWidth) !== null && _window_innerWidth !== void 0 ? _window_innerWidth : 0)) {\n        onSwipeBackSuccess();\n      } else if (speed > 250 || swipeBackShift >= window.innerWidth / 2) {\n        setSwipeBackResult(2);\n      } else {\n        setSwipeBackResult(1);\n      }\n    }\n  };\n\n  var calcPanelSwipeStyles = function (panelId) {\n    if (!canUseDOM || !window) {\n      return {};\n    }\n\n    var isPrev = panelId === swipeBackPrevPanel;\n    var isNext = panelId === swipeBackNextPanel;\n\n    if (!isPrev && !isNext || swipeBackResult) {\n      return {};\n    }\n\n    var prevPanelTranslate = \"\".concat(swipeBackShift, \"px\");\n    var nextPanelTranslate = \"\".concat(-50 + swipeBackShift * 100 / window.innerWidth / 2, \"%\");\n\n    if (isNext) {\n      return {\n        transform: \"translate3d(\".concat(nextPanelTranslate, \", 0, 0)\"),\n        WebkitTransform: \"translate3d(\".concat(nextPanelTranslate, \", 0, 0)\")\n      };\n    }\n\n    if (isPrev) {\n      return {\n        transform: \"translate3d(\".concat(prevPanelTranslate, \", 0, 0)\"),\n        WebkitTransform: \"translate3d(\".concat(prevPanelTranslate, \", 0, 0)\")\n      };\n    }\n\n    return {};\n  };\n\n  var calcPanelSwipeBackOverlayStyles = function (panelId) {\n    if (!canUseDOM || !window) {\n      return {};\n    }\n\n    var isNext = panelId === swipeBackNextPanel;\n\n    if (!isNext) {\n      return {};\n    }\n\n    var calculatedOpacity = 1 - swipeBackShift / window.innerWidth;\n    var opacityOnSwipeEnd = swipeBackResult === 2 ? 0 : swipeBackResult === 1 ? 1 : null;\n    return {\n      display: \"block\",\n      opacity: opacityOnSwipeEnd === null ? calculatedOpacity : opacityOnSwipeEnd\n    };\n  };\n\n  React.useEffect(function () {\n    // Нужен переход\n    if (prevActivePanel && prevActivePanel !== activePanelProp && !prevSwipingBack && !prevBrowserSwipe) {\n      var firstLayerId = React.Children.toArray(children).map(function (panel) {\n        return getNavId(panel.props, warn);\n      }).find(function (id) {\n        return id === prevActivePanel || id === activePanelProp;\n      });\n      var isBackTransition = firstLayerId === activePanelProp;\n      scrolls.current[prevActivePanel] = scroll === null || scroll === void 0 ? void 0 : scroll.getScroll().y;\n\n      if (disableAnimation) {\n        flushTransition(prevActivePanel, isBackTransition);\n      } else {\n        blurActiveElement(document);\n        setVisiblePanels([prevActivePanel, activePanelProp]);\n        setPrevPanel(prevActivePanel);\n        setNextPanel(activePanelProp);\n        setActivePanel(null);\n        setAnimated(true);\n        setIsBack(isBackTransition); // Фолбек анимации перехода\n\n        if (!animationEvent.supported) {\n          animationFinishTimeout.set();\n        }\n      }\n    } // Закончилась анимация свайпа назад\n\n\n    if (prevActivePanel && prevActivePanel !== activePanelProp && prevSwipingBack) {\n      var nextPanel = activePanelProp;\n      var prevPanel = prevActivePanel;\n\n      if (prevSwipeBackPrevPanel) {\n        scrolls.current[prevSwipeBackPrevPanel] = 0;\n      }\n\n      setSwipeBackPrevPanel(null);\n      setSwipeBackNextPanel(null);\n      setSwipingBack(false);\n      setSwipeBackResult(null);\n      setSwipeBackStartX(0);\n      setSwipeBackShift(0);\n      setActivePanel(nextPanel);\n      setVisiblePanels([nextPanel]);\n      setIsBack(true);\n\n      afterTransition.current = function () {\n        if (nextPanel !== null) {\n          scroll === null || scroll === void 0 ? void 0 : scroll.scrollTo(0, scrolls.current[nextPanel]);\n        }\n\n        prevOnTransition && prevOnTransition({\n          isBack: true,\n          from: prevPanel,\n          to: nextPanel\n        });\n      };\n    } // Началась анимация завершения свайпа назад.\n\n\n    if (!prevSwipeBackResult && swipeBackResult) {\n      waitTransitionFinish(pickPanel(swipeBackNextPanel), swipingBackTransitionEndHandler, platform === Platform.IOS ? 600 : 300);\n    } // Если свайп назад отменился (когда пользователь недостаточно сильно свайпнул)\n\n\n    if (prevSwipeBackResult === 1 && !swipeBackResult && activePanel !== null) {\n      scroll === null || scroll === void 0 ? void 0 : scroll.scrollTo(0, scrolls.current[activePanel]);\n    } // Закончился Safari свайп\n\n\n    if (prevActivePanel !== activePanelProp && browserSwipe) {\n      setBrowserSwipe(false);\n      setNextPanel(null);\n      setPrevPanel(null);\n      setAnimated(false);\n      setVisiblePanels([activePanelProp]);\n      setActivePanel(activePanelProp);\n    }\n  }, [activePanelProp, activePanel, animationFinishTimeout, browserSwipe, children, disableAnimation, document, flushTransition, platform, prevActivePanel, prevBrowserSwipe, prevOnTransition, prevSwipeBackPrevPanel, prevSwipeBackResult, prevSwipingBack, scroll, swipeBackNextPanel, swipeBackResult, swipingBackTransitionEndHandler, waitTransitionFinish]);\n  return /*#__PURE__*/React.createElement(NavViewIdContext.Provider, {\n    value: id\n  }, /*#__PURE__*/React.createElement(Touch, _object_spread_props(_object_spread({\n    Component: \"section\"\n  }, restProps), {\n    className: classNames(\"vkuiView\", platform === Platform.IOS && classNames(\"vkuiView--ios\", \"vkuiInternalView--ios\"), !disableAnimation && animated && \"vkuiView--animated\", !disableAnimation && swipingBack && \"vkuiView--swiping-back\", disableAnimation && \"vkuiView--no-motion\", className),\n    onMoveX: iOSSwipeBackSimulationEnabled ? handleTouchMoveXForIOSSwipeBackSimulation : platform === Platform.IOS ? handleTouchMoveXForNativeIOSSwipeBackOrSwipeNext : undefined,\n    onEnd: iOSSwipeBackSimulationEnabled ? handleTouchEndForIOSSwipeBackSimulation : undefined\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiView__panels\"\n  }, panels.map(function (panel) {\n    var panelId = getNavId(panel.props, warn);\n    var isPrev = panelId === prevPanel || panelId === swipeBackPrevPanel;\n    var isTransitionTarget = animated && panelId === (isBack ? prevPanel : nextPanel);\n    var compensateScroll = isPrev || panelId === swipeBackNextPanel || panelId === nextPanel && isBack;\n\n    var _scrolls_current_panelId;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(\"vkuiView__panel\", panelId === activePanel && \"vkuiView__panel--active\", panelId === prevPanel && \"vkuiView__panel--prev\", panelId === nextPanel && \"vkuiView__panel--next\", panelId === swipeBackPrevPanel && \"vkuiView__panel--swipe-back-prev\", panelId === swipeBackNextPanel && \"vkuiView__panel--swipe-back-next\", swipeBackResult === 2 && \"vkuiView__panel--swipe-back-success\", swipeBackResult === 1 && \"vkuiView__panel--swipe-back-failed\"),\n      onAnimationEnd: isTransitionTarget ? transitionEndHandler : undefined,\n      ref: function (el) {\n        return panelId !== undefined && (panelNodes.current[panelId] = el);\n      },\n      style: calcPanelSwipeStyles(panelId),\n      key: panelId\n    }, platform === Platform.IOS && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"vkuiView__panel-overlay\",\n      style: calcPanelSwipeBackOverlayStyles(panelId)\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"vkuiView__panel-in\",\n      style: {\n        marginTop: compensateScroll ? -((_scrolls_current_panelId = scrolls.current[panelId]) !== null && _scrolls_current_panelId !== void 0 ? _scrolls_current_panelId : 0) : undefined\n      }\n    }, /*#__PURE__*/React.createElement(NavTransitionDirectionProvider, {\n      isBack: swipingBack || isBack\n    }, /*#__PURE__*/React.createElement(NavTransitionProvider, {\n      entering: panelId === nextPanel || panelId === swipeBackNextPanel\n    }, panel))));\n  }))));\n};","map":{"version":3,"mappings":"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","names":["React","classNames","noop","usePlatform","usePrevious","useTimeout","useWaitTransitionFinish","blurActiveElement","canUseDOM","useDOM","getNavId","Platform","animationEvent","useIsomorphicLayoutEffect","warnOnce","useScroll","useConfigProvider","NavViewIdContext","NavTransitionProvider","NavTransitionDirectionProvider","useSplitCol","Touch","getSwipeBackPredicates","hasHorizontalScrollableElementWithScrolledToLeft","swipeBackExcluded","SwipeBackResults","scrollsCache","warn","View","activePanel","activePanelProp","history","nav","onTransition","onSwipeBack","onSwipeBackStart","onSwipeBackCancel","onSwipeBackCancelProp","children","className","restProps","id","scrolls","useRef","afterTransition","useEffect","current","panelNodes","window","document","scroll","configProvider","splitCol","platform","useState","animated","setAnimated","visiblePanels","setVisiblePanels","setActivePanel","undefined","isBack","setIsBack","prevPanel","setPrevPanel","nextPanel","setNextPanel","swipeBackPrevented","swipingBack","setSwipingBack","swipeBackStartX","setSwipeBackStartX","swipeBackShift","setSwipeBackShift","swipeBackNextPanel","setSwipeBackNextPanel","swipeBackPrevPanel","setSwipeBackPrevPanel","swipeBackResult","setSwipeBackResult","browserSwipe","setBrowserSwipe","prevActivePanel","prevSwipingBack","prevBrowserSwipe","prevSwipeBackResult","prevSwipeBackPrevPanel","prevOnTransition","panels","Children","toArray","filter","panel","panelId","props","includes","disableAnimation","transitionMotionEnabled","animate","VKCOM","iOSSwipeBackSimulationEnabled","IOS","isWebView","Boolean","pickPanel","flushTransition","useCallback","isBackTransition","scrollTo","from","to","transitionEndHandler","e","animationName","waitTransitionFinish","animationFinishTimeout","onSwipeBackSuccess","swipingBackTransitionEndHandler","propertyName","target","handleTouchMoveXForNativeIOSSwipeBackOrSwipeNext","event","startX","shiftX","innerWidth","swipeBackTriggered","viewportStartEdgeTouched","viewportEndEdgeTouched","handleTouchMoveXForIOSSwipeBackSimulation","swipedToOpposite","length","originalEvent","payload","getScroll","y","slice","handleTouchEndForIOSSwipeBackSimulation","speed","duration","calcPanelSwipeStyles","isPrev","isNext","prevPanelTranslate","concat","nextPanelTranslate","transform","WebkitTransform","calcPanelSwipeBackOverlayStyles","calculatedOpacity","opacityOnSwipeEnd","display","opacity","firstLayerId","map","find","supported","set","Provider","value","Component","onMoveX","onEnd","div","isTransitionTarget","compensateScroll","onAnimationEnd","ref","el","style","key","marginTop","entering"],"sources":["C:\\Users\\kulag\\vk\\Ability\\node_modules\\@vkontakte\\vkui\\src\\components\\View\\View.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, noop } from '@vkontakte/vkjs';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { usePrevious } from '../../hooks/usePrevious';\nimport { useTimeout } from '../../hooks/useTimeout';\nimport { useWaitTransitionFinish } from '../../hooks/useWaitTransitionFinish';\nimport { blurActiveElement, canUseDOM, useDOM } from '../../lib/dom';\nimport { getNavId, NavIdProps } from '../../lib/getNavId';\nimport { Platform } from '../../lib/platform';\nimport { animationEvent } from '../../lib/supportEvents';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { HTMLAttributesWithRootRef } from '../../types';\nimport { useScroll } from '../AppRoot/ScrollContext';\nimport { useConfigProvider } from '../ConfigProvider/ConfigProviderContext';\nimport { NavViewIdContext } from '../NavIdContext/NavIdContext';\nimport { NavTransitionProvider } from '../NavTransitionContext/NavTransitionContext';\nimport { NavTransitionDirectionProvider } from '../NavTransitionDirectionContext/NavTransitionDirectionContext';\nimport { useSplitCol } from '../SplitCol/SplitColContext';\nimport { Touch, TouchEvent } from '../Touch/Touch';\nimport {\n  getSwipeBackPredicates,\n  hasHorizontalScrollableElementWithScrolledToLeft,\n  swipeBackExcluded,\n} from './utils';\nimport styles from './View.module.css';\n\nenum SwipeBackResults {\n  fail = 1,\n  success,\n}\n\ninterface Scrolls {\n  [index: string]: number | undefined;\n}\n\ninterface ViewsScrolls {\n  [index: string]: Scrolls;\n}\n\nexport let scrollsCache: ViewsScrolls = {};\n\nexport interface ViewProps extends HTMLAttributesWithRootRef<HTMLElement>, NavIdProps {\n  activePanel: string;\n  onTransition?(params: { isBack: boolean; from: string; to: string }): void;\n  /**\n   * callback свайпа назад\n   */\n  onSwipeBack?(): void;\n  /**\n   * callback начала анимации свайпа назад.\n   *\n   * Чтобы остановить свайп назад, возвращайте `\"prevent\"`.\n   */\n  onSwipeBackStart?(activePanel: string | null): void | 'prevent';\n  /**\n   * callback завершения анимации отмененного пользователем свайпа\n   */\n  onSwipeBackCancel?(): void;\n  history?: string[];\n\n  children: React.ReactElement | Iterable<React.ReactElement>;\n}\n\nconst warn = warnOnce('View');\n\n/**\n * @see https://vkcom.github.io/VKUI/#/View\n */\nexport const View = ({\n  activePanel: activePanelProp,\n  history,\n  nav,\n  onTransition,\n  onSwipeBack,\n  onSwipeBackStart,\n  onSwipeBackCancel: onSwipeBackCancelProp,\n  children,\n  className,\n  ...restProps\n}: ViewProps) => {\n  const id = getNavId({ nav, id: restProps.id });\n  const scrolls = React.useRef(scrollsCache[id as string] || {});\n  const afterTransition = React.useRef(noop);\n\n  React.useEffect(() => () => {\n    if (id) {\n      scrollsCache[id] = scrolls.current;\n    }\n  });\n\n  const panelNodes = React.useRef<{ [id: string]: HTMLDivElement | null }>({});\n\n  const { window, document } = useDOM();\n  const scroll = useScroll();\n  const configProvider = useConfigProvider();\n  const splitCol = useSplitCol();\n  const platform = usePlatform();\n\n  const [animated, setAnimated] = React.useState(false);\n\n  const [visiblePanels, setVisiblePanels] = React.useState([activePanelProp]);\n  const [activePanel, setActivePanel] = React.useState<string | null>(activePanelProp);\n  const [isBack, setIsBack] = React.useState<boolean | undefined>(undefined);\n  const [prevPanel, setPrevPanel] = React.useState<string | null>(null);\n  const [nextPanel, setNextPanel] = React.useState<string | null>(null);\n\n  const swipeBackPrevented = React.useRef<boolean>(false);\n  const [swipingBack, setSwipingBack] = React.useState<boolean | undefined>(undefined);\n  const [swipeBackStartX, setSwipeBackStartX] = React.useState<number>(0);\n  const [swipeBackShift, setSwipeBackShift] = React.useState<number>(0);\n  const [swipeBackNextPanel, setSwipeBackNextPanel] = React.useState<string | null>(null);\n  const [swipeBackPrevPanel, setSwipeBackPrevPanel] = React.useState<string | null>(null);\n  const [swipeBackResult, setSwipeBackResult] = React.useState<SwipeBackResults | null>(null);\n\n  const [browserSwipe, setBrowserSwipe] = React.useState(false);\n\n  const prevActivePanel = usePrevious(activePanelProp);\n  const prevSwipingBack = usePrevious(swipingBack);\n  const prevBrowserSwipe = usePrevious(browserSwipe);\n  const prevSwipeBackResult = usePrevious(swipeBackResult);\n  const prevSwipeBackPrevPanel = usePrevious(swipeBackPrevPanel);\n  const prevOnTransition = usePrevious(onTransition);\n\n  const panels = (React.Children.toArray(children) as React.ReactElement[]).filter(\n    (panel: React.ReactElement) => {\n      const panelId = getNavId(panel.props, warn);\n\n      return (\n        (panelId !== undefined && visiblePanels.includes(panelId)) ||\n        panelId === swipeBackPrevPanel ||\n        panelId === swipeBackNextPanel\n      );\n    },\n  );\n\n  const disableAnimation =\n    !configProvider.transitionMotionEnabled || !splitCol.animate || platform === Platform.VKCOM;\n  const iOSSwipeBackSimulationEnabled =\n    !disableAnimation &&\n    platform === Platform.IOS &&\n    configProvider.isWebView &&\n    Boolean(onSwipeBack);\n\n  const pickPanel = (id: string | null) => {\n    if (id === null) {\n      return null;\n    }\n    return panelNodes.current[id];\n  };\n\n  const flushTransition = React.useCallback(\n    (prevPanel: string, isBackTransition: boolean) => {\n      if (isBackTransition) {\n        scrolls.current[prevPanel] = 0;\n      }\n      setPrevPanel(null);\n      setNextPanel(null);\n      setVisiblePanels([activePanelProp]);\n      setActivePanel(activePanelProp);\n      setAnimated(false);\n      setIsBack(isBackTransition);\n\n      afterTransition.current = () => {\n        scroll?.scrollTo(0, isBackTransition ? scrolls.current[activePanelProp] : 0);\n        onTransition &&\n          onTransition({\n            isBack: isBackTransition,\n            from: prevPanel,\n            to: activePanelProp,\n          });\n      };\n    },\n    [activePanelProp, onTransition, scroll],\n  );\n\n  useIsomorphicLayoutEffect(() => {\n    afterTransition.current();\n    afterTransition.current = noop;\n  }, [afterTransition.current]);\n\n  const transitionEndHandler = React.useCallback(\n    (e?: React.AnimationEvent): void => {\n      if (\n        (!e ||\n          [\n            styles['animation-ios-next-forward'],\n            styles['animation-ios-prev-back'],\n            styles['animation-view-next-forward'],\n            styles['animation-view-prev-back'],\n          ].includes(e.animationName)) &&\n        prevPanel !== null\n      ) {\n        flushTransition(prevPanel, Boolean(isBack));\n      }\n    },\n    [flushTransition, isBack, prevPanel],\n  );\n\n  const { waitTransitionFinish } = useWaitTransitionFinish();\n  const animationFinishTimeout = useTimeout(\n    transitionEndHandler,\n    platform === Platform.IOS ? 600 : 300,\n  );\n\n  const onSwipeBackSuccess = React.useCallback(() => {\n    onSwipeBack && onSwipeBack();\n  }, [onSwipeBack]);\n\n  const onSwipeBackCancel = React.useCallback(() => {\n    onSwipeBackCancelProp && onSwipeBackCancelProp();\n    setSwipeBackPrevPanel(null);\n    setSwipeBackNextPanel(null);\n    setSwipingBack(false);\n    setSwipeBackResult(null);\n    setSwipeBackStartX(0);\n    setSwipeBackShift(0);\n  }, [onSwipeBackCancelProp]);\n\n  const swipingBackTransitionEndHandler = React.useCallback(\n    (e?: TransitionEvent): void => {\n      // indexOf because of vendor prefixes in old browsers\n      if (\n        !e ||\n        (e?.propertyName.includes('transform') && e?.target === pickPanel(swipeBackNextPanel))\n      ) {\n        switch (swipeBackResult) {\n          case SwipeBackResults.fail:\n            onSwipeBackCancel();\n            break;\n          case SwipeBackResults.success:\n            onSwipeBackSuccess();\n        }\n      }\n    },\n    [onSwipeBackCancel, onSwipeBackSuccess, swipeBackNextPanel, swipeBackResult],\n  );\n\n  const handleTouchMoveXForNativeIOSSwipeBackOrSwipeNext = (event: TouchEvent) => {\n    if (browserSwipe) {\n      return;\n    }\n    const { swipeBackTriggered, viewportStartEdgeTouched, viewportEndEdgeTouched } =\n      getSwipeBackPredicates(event.startX, event.shiftX, window!.innerWidth);\n\n    if ((viewportStartEdgeTouched || viewportEndEdgeTouched) && swipeBackTriggered) {\n      setBrowserSwipe(true);\n    }\n  };\n\n  const handleTouchMoveXForIOSSwipeBackSimulation = (event: TouchEvent) => {\n    if (swipeBackPrevented.current || swipeBackExcluded(event)) {\n      return;\n    }\n\n    const { swipedToOpposite, swipeBackTriggered, viewportStartEdgeTouched } =\n      getSwipeBackPredicates(event.startX, event.shiftX, window!.innerWidth);\n\n    if (animated && swipeBackTriggered) {\n      return;\n    }\n\n    if (!swipingBack && history && history.length > 1) {\n      if (swipedToOpposite) {\n        swipeBackPrevented.current = true;\n        return;\n      }\n\n      if (!swipeBackTriggered) {\n        return;\n      }\n\n      if (\n        !viewportStartEdgeTouched &&\n        hasHorizontalScrollableElementWithScrolledToLeft(event.originalEvent.target as HTMLElement)\n      ) {\n        swipeBackPrevented.current = true;\n        return;\n      }\n      // Начался свайп назад\n      if (onSwipeBackStart) {\n        const payload = onSwipeBackStart(activePanel);\n        if (payload === 'prevent') {\n          swipeBackPrevented.current = true;\n          return;\n        }\n      }\n\n      if (activePanel !== null) {\n        // Note: вызываем закрытие клавиатуры. В iOS это нативное поведение при свайпе.\n        blurActiveElement(document);\n        scrolls.current[activePanel] = scroll?.getScroll().y;\n      }\n\n      setSwipingBack(true);\n      setSwipeBackStartX(event.startX);\n      setSwipeBackPrevPanel(activePanel);\n      setSwipeBackNextPanel(history.slice(-2)[0]);\n    }\n\n    if (swipingBack) {\n      if (event.shiftX < 0) {\n        setSwipeBackShift(0);\n      } else if (event.shiftX > window!.innerWidth - swipeBackStartX) {\n        setSwipeBackShift(window!.innerWidth);\n      } else {\n        setSwipeBackShift(event.shiftX);\n      }\n    }\n  };\n\n  const handleTouchEndForIOSSwipeBackSimulation = (event: TouchEvent) => {\n    swipeBackPrevented.current = false;\n\n    if (swipingBack) {\n      const speed = (swipeBackShift / event.duration) * 1000;\n      if (swipeBackShift === 0) {\n        onSwipeBackCancel();\n      } else if (swipeBackShift >= (window!.innerWidth ?? 0)) {\n        onSwipeBackSuccess();\n      } else if (speed > 250 || swipeBackShift >= window!.innerWidth / 2) {\n        setSwipeBackResult(SwipeBackResults.success);\n      } else {\n        setSwipeBackResult(SwipeBackResults.fail);\n      }\n    }\n  };\n\n  const calcPanelSwipeStyles = (panelId: string | undefined): React.CSSProperties => {\n    if (!canUseDOM || !window) {\n      return {};\n    }\n\n    const isPrev = panelId === swipeBackPrevPanel;\n    const isNext = panelId === swipeBackNextPanel;\n\n    if ((!isPrev && !isNext) || swipeBackResult) {\n      return {};\n    }\n\n    let prevPanelTranslate = `${swipeBackShift}px`;\n    let nextPanelTranslate = `${-50 + (swipeBackShift * 100) / window.innerWidth / 2}%`;\n\n    if (isNext) {\n      return {\n        transform: `translate3d(${nextPanelTranslate}, 0, 0)`,\n        WebkitTransform: `translate3d(${nextPanelTranslate}, 0, 0)`,\n      };\n    }\n    if (isPrev) {\n      return {\n        transform: `translate3d(${prevPanelTranslate}, 0, 0)`,\n        WebkitTransform: `translate3d(${prevPanelTranslate}, 0, 0)`,\n      };\n    }\n\n    return {};\n  };\n\n  const calcPanelSwipeBackOverlayStyles = (panelId?: string): React.CSSProperties => {\n    if (!canUseDOM || !window) {\n      return {};\n    }\n\n    const isNext = panelId === swipeBackNextPanel;\n    if (!isNext) {\n      return {};\n    }\n\n    const calculatedOpacity = 1 - swipeBackShift / window.innerWidth;\n    const opacityOnSwipeEnd =\n      swipeBackResult === SwipeBackResults.success\n        ? 0\n        : swipeBackResult === SwipeBackResults.fail\n        ? 1\n        : null;\n\n    return {\n      display: 'block',\n      opacity: opacityOnSwipeEnd === null ? calculatedOpacity : opacityOnSwipeEnd,\n    };\n  };\n\n  React.useEffect(() => {\n    // Нужен переход\n    if (\n      prevActivePanel &&\n      prevActivePanel !== activePanelProp &&\n      !prevSwipingBack &&\n      !prevBrowserSwipe\n    ) {\n      const firstLayerId = (React.Children.toArray(children) as React.ReactElement[])\n        .map((panel) => getNavId(panel.props, warn))\n        .find((id) => id === prevActivePanel || id === activePanelProp);\n\n      const isBackTransition = firstLayerId === activePanelProp;\n      scrolls.current[prevActivePanel] = scroll?.getScroll().y;\n\n      if (disableAnimation) {\n        flushTransition(prevActivePanel, isBackTransition);\n      } else {\n        blurActiveElement(document);\n\n        setVisiblePanels([prevActivePanel, activePanelProp]);\n        setPrevPanel(prevActivePanel);\n        setNextPanel(activePanelProp);\n        setActivePanel(null);\n        setAnimated(true);\n        setIsBack(isBackTransition);\n\n        // Фолбек анимации перехода\n        if (!animationEvent.supported) {\n          animationFinishTimeout.set();\n        }\n      }\n    }\n\n    // Закончилась анимация свайпа назад\n    if (prevActivePanel && prevActivePanel !== activePanelProp && prevSwipingBack) {\n      const nextPanel = activePanelProp;\n      const prevPanel = prevActivePanel;\n      if (prevSwipeBackPrevPanel) {\n        scrolls.current[prevSwipeBackPrevPanel] = 0;\n      }\n\n      setSwipeBackPrevPanel(null);\n      setSwipeBackNextPanel(null);\n      setSwipingBack(false);\n      setSwipeBackResult(null);\n      setSwipeBackStartX(0);\n      setSwipeBackShift(0);\n      setActivePanel(nextPanel);\n      setVisiblePanels([nextPanel]);\n      setIsBack(true);\n\n      afterTransition.current = () => {\n        if (nextPanel !== null) {\n          scroll?.scrollTo(0, scrolls.current[nextPanel]);\n        }\n        prevOnTransition &&\n          prevOnTransition({\n            isBack: true,\n            from: prevPanel,\n            to: nextPanel,\n          });\n      };\n    }\n\n    // Началась анимация завершения свайпа назад.\n    if (!prevSwipeBackResult && swipeBackResult) {\n      waitTransitionFinish(\n        pickPanel(swipeBackNextPanel),\n        swipingBackTransitionEndHandler,\n        platform === Platform.IOS ? 600 : 300,\n      );\n    }\n\n    // Если свайп назад отменился (когда пользователь недостаточно сильно свайпнул)\n    if (prevSwipeBackResult === SwipeBackResults.fail && !swipeBackResult && activePanel !== null) {\n      scroll?.scrollTo(0, scrolls.current[activePanel]);\n    }\n\n    // Закончился Safari свайп\n    if (prevActivePanel !== activePanelProp && browserSwipe) {\n      setBrowserSwipe(false);\n      setNextPanel(null);\n      setPrevPanel(null);\n      setAnimated(false);\n      setVisiblePanels([activePanelProp]);\n      setActivePanel(activePanelProp);\n    }\n  }, [\n    activePanelProp,\n    activePanel,\n    animationFinishTimeout,\n    browserSwipe,\n    children,\n    disableAnimation,\n    document,\n    flushTransition,\n    platform,\n    prevActivePanel,\n    prevBrowserSwipe,\n    prevOnTransition,\n    prevSwipeBackPrevPanel,\n    prevSwipeBackResult,\n    prevSwipingBack,\n    scroll,\n    swipeBackNextPanel,\n    swipeBackResult,\n    swipingBackTransitionEndHandler,\n    waitTransitionFinish,\n  ]);\n\n  return (\n    <NavViewIdContext.Provider value={id}>\n      <Touch\n        Component=\"section\"\n        {...restProps}\n        className={classNames(\n          styles['View'],\n          platform === Platform.IOS && classNames(styles['View--ios'], 'vkuiInternalView--ios'),\n          !disableAnimation && animated && styles['View--animated'],\n          !disableAnimation && swipingBack && styles['View--swiping-back'],\n          disableAnimation && styles['View--no-motion'],\n          className,\n        )}\n        onMoveX={\n          iOSSwipeBackSimulationEnabled\n            ? handleTouchMoveXForIOSSwipeBackSimulation\n            : platform === Platform.IOS\n            ? handleTouchMoveXForNativeIOSSwipeBackOrSwipeNext\n            : undefined\n        }\n        onEnd={iOSSwipeBackSimulationEnabled ? handleTouchEndForIOSSwipeBackSimulation : undefined}\n      >\n        <div className={styles['View__panels']}>\n          {panels.map((panel: React.ReactElement) => {\n            const panelId = getNavId(panel.props, warn);\n            const isPrev = panelId === prevPanel || panelId === swipeBackPrevPanel;\n            const isTransitionTarget = animated && panelId === (isBack ? prevPanel : nextPanel);\n            const compensateScroll =\n              isPrev || panelId === swipeBackNextPanel || (panelId === nextPanel && isBack);\n\n            return (\n              <div\n                className={classNames(\n                  styles['View__panel'],\n                  panelId === activePanel && styles['View__panel--active'],\n                  panelId === prevPanel && styles['View__panel--prev'],\n                  panelId === nextPanel && styles['View__panel--next'],\n                  panelId === swipeBackPrevPanel && styles['View__panel--swipe-back-prev'],\n                  panelId === swipeBackNextPanel && styles['View__panel--swipe-back-next'],\n                  swipeBackResult === SwipeBackResults.success &&\n                    styles['View__panel--swipe-back-success'],\n                  swipeBackResult === SwipeBackResults.fail &&\n                    styles['View__panel--swipe-back-failed'],\n                )}\n                onAnimationEnd={isTransitionTarget ? transitionEndHandler : undefined}\n                ref={(el) => panelId !== undefined && (panelNodes.current[panelId] = el)}\n                style={calcPanelSwipeStyles(panelId)}\n                key={panelId}\n              >\n                {platform === Platform.IOS && (\n                  <div\n                    className={styles['View__panel-overlay']}\n                    style={calcPanelSwipeBackOverlayStyles(panelId)}\n                  />\n                )}\n                <div\n                  className={styles['View__panel-in']}\n                  style={{\n                    marginTop: compensateScroll ? -(scrolls.current[panelId] ?? 0) : undefined,\n                  }}\n                >\n                  <NavTransitionDirectionProvider isBack={swipingBack || isBack}>\n                    <NavTransitionProvider\n                      entering={panelId === nextPanel || panelId === swipeBackNextPanel}\n                    >\n                      {panel}\n                    </NavTransitionProvider>\n                  </NavTransitionDirectionProvider>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </Touch>\n    </NavViewIdContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}